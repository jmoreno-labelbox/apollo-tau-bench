# Copyright owned by Sierra.

import json
from typing import Any, Dict, List, Optional
from tau_bench.envs.tool import Tool


class GetVulnerabilityById(Tool):
    """Retrieves a vulnerability by its ID."""
    @staticmethod
    def invoke(data: Dict[str, Any], id) -> str:
        vuln_id = id
        vulnerabilities = data.get("vulnerabilities", [])
        for vuln in vulnerabilities:
            if vuln.get("id") == vuln_id:
                return json.dumps(vuln)
        return json.dumps({"error": f"Vulnerability with ID '{vuln_id}' not found."})
    @staticmethod
    def get_info() -> Dict[str, Any]:
        return {
            "type": "function",
            "function": {
                "name": "get_vulnerability_by_id",
                "description": "Retrieves a vulnerability by its ID.",
                "parameters": {
                    "type": "object",
                    "properties": {"id": {"type": "string"}},
                    "required": ["id"],
                },
            },
        }
