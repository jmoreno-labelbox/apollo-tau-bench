RULES = [
    "If an operation needs aircraft_id but only tail_number is supplied, obtain aircraft_id by calling get_aircraft_by_tail_number with the given tail_number.",
    "In book_reservation, assign the user ID as the portion of the email address preceding the '@' symbol. For instance, for emma.smith8074@example.com, use 'mia.li3818' as the user ID.",
    "The airport_id should consist of the IATA code with the prefix 'ARP_'. For instance, if the IATA code is JFK, the airport_id will be 'ARP_JFK'.",
    "The crew_member_id must begin with 'CM_', and the employee_code must begin with 'EMP_'.",
    "When a new operational event is created, the event ID (OE*) must be assigned deterministically by incrementing the highest existing event ID in the dataset. For example, if the current highest event ID is 'OE025', the next event must be assigned 'OE026'. Similarly, when a maintenance log is created, the log ID (ML*) must be generated deterministically by incrementing the highest existing log ID in the dataset. For example, if the highest current log ID is 'ML025', the next log must be assigned 'ML026'.",
    "When a crew assignment is created, the ID (AS_*) must be assigned deterministically by incrementing the current highest assignment ID present in the dataset. For instance, if the highest existing event ID is 'AS_025', the subsequent event must be assigned 'AS_026'. When generating a baggage claim, the claim ID must adhere to the deterministic format: 'BCLAIM_[reservation]_[flight]'. The 'Severe Weather Protocol' must be triggered whenever a weather alert affects an airport. This protocol specifies a standard sequence utilizing the following tools: create_operational_event, find_flights, and update_flight_schedule. By default, the protocol records the event, identifies all flights that have not departed (flights with status 'available'), applies a specified delay to these flights, and updates their status to 'DELAYED'. The 'details' field for the operational event must use the format: 'Severe Weather Protocol initiated.' and the event type must be 'SIGMET'. If a user instruction is provided, it may override certain aspects of this default process, such as specifying alternative flight statuses, targeting particular flights, or applying a custom delay. For diversion notifications, the message format must be: 'FLIGHT DIVERSION NOTICE: Due to severe weather, your flight [flight_number] on [date] has been diverted to [diversion_airport_iata].'. For cancellation notifications, the message must be: 'FLIGHT CANCELLATION NOTICE: Due to severe weather, your flight [flight_number] on [date] has been cancelled.' When a reservation requires updating, its status must be set to 'CANCELLED_WEATHER'.",
    "The 'AOG Protocol' is to be initiated when an aircraft requires unscheduled maintenance that makes it non-operational. This protocol follows a standard sequence using the tools: update_aircraft_status, create_maintenance_log, create_operational_event, update_flight_status, find_reservations_by_flight, and update_reservation_status. By default (without override), the aircraft is set to 'Grounded', a maintenance log is created with status 'In Progress', type 'Unscheduled', and the description is taken from the instruction (or defaults to ‘Aircraft is AOG.’ if not provided), an AOG cancellation operational event is created, the flight status is set to 'cancelled', and all associated passenger reservations are updated to 'CANCELLED_AOG'. The 'details' field for the cancellation event must be: 'Aircraft [aircraft_id] grounded. Flight [flight_number] on [date] cancelled due to unscheduled maintenance: [description]'. If an override is specified in the instruction, it supersedes any default steps that it conflicts with. Under a repair/delay override, do not create cancellation events, do not cancel the flight, and do not update reservations to 'CANCELLED_AOG'. Override 1 – 'repair and reinstate': set the aircraft status to 'Grounded', create a maintenance log (status 'In Progress', type 'Unscheduled'), and after repair, update the aircraft status to 'Active', generate an operational event of type 'AOG_REPAIR', set the flight status to 'delayed', and do not change reservation statuses to cancelled. The 'details' field must be: 'Aircraft [aircraft_id] returned to service after repair. Flight [flight_number] on [date] delayed due to unscheduled maintenance: [description]'. Override 2 – 'ferry flight recovery': cancel the passenger flight as per the default process, update reservations to 'CANCELLED_AOG', and create an additional operational event of type 'AOG_FERRY' to log the non-revenue ferry flight to the maintenance base. For event typing, use 'AOG' for grounding/cancellation, 'AOG_REPAIR' for repair and reinstatement, and 'AOG_FERRY' for ferry recovery. Deterministically, only the events required by the selected path (default, repair, or ferry) must be created, and all statuses and event details must correspond exactly to that path.",
    "The 'Crew Unavailability Protocol' must be activated when a crew member becomes unavailable for a scheduled flight. This protocol employs the tools: find_crew_member, update_crew_member_status, find_available_crew, find_crew_certifications, find_crew_assignments, update_crew_assignment, create_operational_event, update_flight_status, and find_reservations_by_flight. The default action is to change the original crew member's status to 'On Sick Leave', attempt to locate a qualified replacement at the flight's origin airport, and if no suitable replacement is found, log an event with type 'CREW_UNAVAILABLE' and cancel the affected flight by setting its status to 'cancelled'. The 'details' field for create_operational_event must use the deterministic format: 'Crew replacement failed for flight [flight_number] on [date]. Original crew member [crew_member_id] is unavailable.'. If an instruction provides an override, such as directing the search to another base or for a different qualified role (e.g., assigning a Captain as First Officer), this override must be validated. In this scenario, the 'details' field for create_operational_event must follow the deterministic format: 'Crew replacement successful for flight [flight_number] on [date]. Original crew member [crew_member_id] is unavailable.'.",
    "The 'Return to Service Protocol' serves to reactivate an aircraft from storage. It utilizes the following tools: get_aircraft_by_tail_number, create_flight, update_aircraft_status, create_maintenance_log, get_airport_by_code, and create_operational_event. By default, the protocol initiates a new flight route, sets the aircraft status to 'Maintenance', records the inspection in the maintenance log, changes the status to 'Active', and documents an activation event. The maintenance log's 'description' field must state 'Return to Service inspection for flight operations.' and the maintenance type must be 'Return to Service Inspection'. For the operational event, the 'details' must adhere to this format: 'Aircraft [aircraft_id] ([tail_number]) activated from storage at [airport_iata] for new flight route [flight_number].' and the event type must be 'AIRCRAFT_ACTIVATED'. The instruction is required to include all relevant flight, aircraft, and maintenance information.",
    "The 'Crew Staffing Validation Protocol' is intended to check and assign a crew member to a flight. It employs the tools: find_crew_member_by_employee_code, find_crew_certifications, verify_crew_duty_time, assign_crew_to_flight, and create_operational_event. The standard process is to confirm the crew member's appropriate type-rating certification and compliance with duty time requirements. If both validations succeed, the protocol assigns the crew member to the designated flight and records a 'CREW_ASSIGNED' event. Should either validation fail, the protocol is required to log a 'CREW_VALIDATION_FAILED' event and stop the assignment process. For failure events, the 'details' must follow the format: 'Crew member [crew_member_id] validation failed for flight [flight_number] on [date].'",
    "If the 'Crew Staffing Validation Protocol' fails, the notification sent to the 'Crew_Scheduling' department must follow this fixed message format: 'STAFFING ALERT: Validation for crew member [crew_member_id] on flight [flight_number] failed.",
    "The standard medical alert procedure is as follows: if a passenger requires medical assistance, an event must be recorded using the 'create_operational_event' tool, specifying the type as 'MEDICAL_ASSISTANCE' and formatting the details exactly as: 'Medical assistance requested for passenger [passenger_name] on flight [flight_number] upon arrival at [arrival_airport].'. Additionally, the ground team must be alerted via the 'send_ground_notification' tool, with the notification message strictly following: 'MEDICAL ALERT: Flight [flight_number] arriving from [origin_iata] requires immediate medical assistance for passenger [passenger_name] at the gate. Awaiting arrival.'.",
    "The 'Route Suspension Protocol' serves to cancel all upcoming instances of a flight route and utilizes the following tools: create_operational_event, update_flight_status, find_reservations_by_flight, and update_reservation_status. By default, it logs a 'ROUTE_SUSPENSION' event, cancels all future flights for the specified route, and updates all related reservations to the 'CANCELLED_ROUTE_SUSPENSION' status. The operational event's 'details' must be formatted as: 'Route [flight_number] ([origin]-[destination]) has been suspended. All flights from [start_date] to [end_date] are cancelled.' and the event type must be 'ROUTE_SUSPENSION'. If the instruction specifies suspension for only certain dates rather than all future flights, this default can be overridden. For suspensions spanning a continuous date range (two or more consecutive days), exactly ONE operational event must be logged using the aforementioned range format ('from [start_date] to [end_date]'). For suspensions involving multiple, non-consecutive dates, a separate operational event must be logged for each date, using the single-date format described below. Both methods must not be combined. When the instruction calls for suspension on one or more individual dates, each operational event's 'details' must use: 'Route [flight_number] ([origin]-[destination]) suspended for [date]. Flight [flight_number] on [date] is cancelled.'. If compensation travel vouchers are required as per the instructions, the tools send_passenger_notification and send_department_notification must be employed. In such cases, each passenger must receive a notification offering a $100 travel voucher, and the Finance department must be informed of the total compensation amount. The Finance notification must be: 'FINANCE NOTICE: Route [flight_number] suspended. Total of [total_vouchers_amount] in vouchers issued for [reservation_count] affected reservations.'. The passenger notification must be: 'FLIGHT CANCELLATION: Your flight [flight_number] on [flight_date] has been cancelled due to a route suspension. A $100 travel voucher has been issued to your account.'. The 'Schedule Change Notification Protocol' specifies the standard notification for informing passengers of a flight schedule change. The message, sent via the 'send_passenger_notification' tool, must be: 'FLIGHT UPDATE for reservation [reservation_id]: Your flight [flight_number] on [date] has been rescheduled. New departure is [new_departure_time] and new arrival is [new_arrival_time]. We apologize for any inconvenience.'.",
    "The 'Route Retiming Protocol' is intended for implementing schedule changes to a route. It uses the following tools: 'create_operational_event', 'update_flight_schedule' (including the reason_event_id), find_reservations_by_flight, and 'send_passenger_notification'. The 'details' for the initial event must be: 'Route [flight_number] ([origin]-[destination]) retiming process initiated' and the event must be created for the origin airport. New schedule: [new_departure_time]-[new_arrival_time].', with the event type set to 'SCHEDULE_CHANGE'. The protocol applies the schedule modification to all specified dates, unless an instruction explicitly lists dates to be excluded from the update. The 'Aircraft Decommissioning Protocol' is used to permanently retire an aircraft and involves the following tools: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, create_operational_event, and send_department_notification. The procedure updates the aircraft's status to 'Decommissioned', generates a final maintenance log, records a formal operational event, and sends notifications to the Finance, Scheduling, and MRO_Planning departments. The maintenance log's 'description' must read: 'Final log entry for aircraft decommissioning and permanent retirement from service.'. The operational event's 'details' must be: 'Aircraft [aircraft_id] ([tail_number]), model [aircraft_model], has been officially decommissioned and removed from the active fleet at [airport_iata].' and the event type must be 'AIRCRAFT_DECOMMISSIONED'. The departmental notification 'message' must be: 'AIRCRAFT ALERT: Aircraft [tail_number] ([aircraft_id]) has been officially decommissioned. Please update all relevant asset and scheduling records.’. All time values must use the 24-hour format, zero-padded, and include seconds as 'HH:MM:SS' (for example, '18:20:00'), with seconds always present even if they are ':00'.",
    "The 'Service Upgrade Protocol' facilitates the application of a promotional cabin upgrade for passengers on a designated flight. It utilizes: find_reservations_by_flight, update_reservation_details, send_passenger_notification, and create_operational_event. The protocol executes the following steps in order: retrieves all reservations for the specified flight and cabin, modifies each reservation to reflect the new cabin and sets the status to 'Upgraded', sends a notification to each passenger, and records a single operational event for the upgrade initiative. The notification 'message' must adhere to this format: 'SERVICE UPGRADE for reservation [reservation_id]: As a valued customer, your booking for flight [flight_number] has been upgraded to [new_cabin]. Enjoy your flight!'. The operational event 'details' must be formatted as: 'Promotional upgrade initiative applied to flight [flight_number] on [date]. All [original_cabin] passengers upgraded.' with the event type specified as 'PROMOTIONAL_UPGRADE'.",
    "The 'AOG Ferry Recovery Protocol' is triggered when a grounded aircraft requires repositioning. It employs: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, create_flight, and create_operational_event. The instruction MUST include both departure and arrival times for the ferry flight. The protocol begins by officially grounding the aircraft using `update_aircraft_status`. It proceeds to cancel the original passenger flight and records the defect in a maintenance log with the deterministic format: '[componente] is unserviceable. Aircraft is AOG.' and assigns the maintenance type 'Unscheduled'. Next, it creates a second maintenance log with the type 'Ferry Flight Clearance' and the format: 'Maintenance clearance for non-revenue ferry flight under MEL.'. Subsequently, it establishes the new, non-revenue ferry flight route and logs the associated operational event. The 'details' for the ferry flight event must be: 'AOG Recovery: Ferry flight [flight_number] created to move aircraft [aircraft_id] ([tail_number]) from [origin_iata] to [destination_iata] for maintenance.'",
    "The 'Crew Certification Expiry Protocol' serves as a proactive compliance verification. It makes use of: find_crew_member, find_crew_certifications, update_crew_member_status, create_operational_event, and send_department_notification. The protocol targets a crew member and a particular certification for audit. It checks the expiry date of the certification. If the certification is expired or approaching expiry, the protocol changes the crew member's status to 'Training Required', records a 'CREW_CERT_EXPIRY' operational event with 'details' in the deterministic format: 'Crew member [crew_member_id] ([full_name]) flagged for certification [certification_code] expiring on [expiry_date]. Status updated.', and notifies both the 'Crew_Scheduling' and 'Training' departments. The notification message must use the following deterministic format: 'CERTIFICATION ALERT: Crew member [crew_member_id] ([full_name]) requires attention for certification [certification_code] (Expires: [expiry_date]). Status set to Training Required. Please update rosters and schedule training.'",
    "The 'Aircraft Upgauge Protocol' is applied to replace a scheduled aircraft with a larger one on a route experiencing increased demand. It utilizes: get_flight_by_number, get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, create_operational_event, send_department_notification. The protocol records an 'AIRCRAFT_UPGAUGE' event at the origin airport, assigns the previously scheduled smaller aircraft to 'Standby', registers a required pre-flight inspection for the replacement aircraft with maintenance_type set to 'Line Maintenance', status marked as 'Completed', and the 'description' strictly formatted as: 'Pre-flight check for upgauge assignment of aircraft [new_aircraft_id] to flight [flight_number].' Additionally, it sends notifications to both Scheduling and Flight Dispatch. The event 'details' must be: 'Aircraft [original_aircraft_id] on flight [flight_number] is being replaced by larger model [new_aircraft_id] due to high passenger demand.' The notification 'message' for Scheduling must be: 'OPERATIONAL UPDATE: Flight [flight_number] on [date] will now be operated by aircraft [new_aircraft_tail_number] ([new_aircraft_id]). Original aircraft [original_aircraft_tail_number] is now on Standby at [airport_iata].' The Flight Dispatch notification must use: 'AIRCRAFT CHANGE: Flight [flight_number] on [date] has been upgauged to [new_aircraft_model] ([new_aircraft_tail_number]). Update performance and weight/balance calculations.'",
    "The 'Passenger No-Show Protocol' is initiated by gate personnel when a checked-in passenger does not board. It employs: get_flight_by_number, find_reservation_by_code, update_reservation_status, create_operational_event, send_ground_notification, send_department_notification. The protocol changes the passenger's reservation status to 'NO_SHOW', generates a 'PASSENGER_OFFLOAD' event for the origin airport, alerts the ground crew to remove the passenger's baggage with HIGH priority, and notifies both Revenue Management and Flight Dispatch of the update. The ground notification 'message' must be: 'URGENT BAGGAGE: Offload all bags for reservation [reservation_id] from flight [flight_number] immediately.' The notification 'message' for Revenue Management and Flight Dispatch must be: 'Reservation [reservation_id] has been flagged as NO_SHOW for flight [flight_number]. Review for applicable fees.'",
    "The event details for the 'Passenger No-Show Protocol' must use the following deterministic format: 'Passenger on reservation [reservation_id] for flight [flight_number] flagged as NO_SHOW. Initiating offload procedures.'",
    "The 'Cabin Defect Deferral Protocol' enables the postponement of repairs for a non-essential cabin defect in accordance with the Minimum Equipment List (MEL). This protocol utilizes: get_aircraft_by_tail_number, create_maintenance_log, create_operational_event, and send_department_notification. It initiates a maintenance log entry with a status of 'Deferred' and includes the MEL reference, records a 'MAINTENANCE_DEFERRAL' operational event, and dispatches notifications to MRO_Planning, Flight_Dispatch, and Cabin_Services. The 'details' field of the operational event must be formatted as: 'A non-essential cabin defect on aircraft [aircraft_id] ([tail_number]) has been deferred per MEL reference [mel_reference]. Aircraft remains in service.' The notification 'message' sent to MRO must follow this format: 'DEFERRAL NOTICE: Defect on [tail_number] has been deferred per [mel_reference]. Please schedule final repair during next maintenance check.'",
    "The 'Maintenance Deferral and Logistics Protocol' manages the postponement of non-essential defect repairs. It employs: get_aircraft_by_tail_number, create_maintenance_log, create_operational_event, and send_department_notification. The protocol generates a maintenance log of type 'Deferred' with the description: 'Repair deferred per MEL [MEL reference]'. Subsequently, it logs a 'MAINTENANCE_DEFERRAL' operational event with the details: 'A non-essential cabin defect on aircraft [tail_number] ([aircraft_id]) has been deferred per MEL reference [mel_reference]. Aircraft remains in service.' and sends deterministic notifications to four designated departments. The Logistics notification must use the following message: 'PARTS_REQUEST: Order and ship replacement parts for deferred defect on [tail_number] ([aircraft_id]) to [airport_iata]. Ref Log: [newly_created_log_id].' The message to MRO_Planning must be: 'DEFERRAL NOTICE: Defect on [tail_number] has been deferred per [mel_reference]. Please schedule final repair during next maintenance check.' The Flight_Dispatch notification must state: 'AIRCRAFT STATUS: [tail_number] is operating with a deferred cabin defect ([component]) under [mel_reference]. No operational impact.' The Cabin_Services notification must be: 'CABIN ALERT: [component] on [tail_number] is inoperative and deferred. Please inform cabin crew.'",
    "The 'Service Recovery Compensation Protocol' is triggered following a major disruption. It makes use of: find_reservations_by_flight, create_operational_event, send_passenger_notification, and send_department_notification. The protocol records a SERVICE_RECOVERY operational event with the 'details' field formatted as: 'SERVICE RECOVERY INITIATED: Compensation issued for flight [flight_number] on [date] due to significant delay.' It sends notifications to the impacted passenger, the Finance and Loyalty departments with deterministic messages, and to the Station Managers at both the origin and destination airports. The passenger notification must be: 'We apologize for the significant delay on your recent flight [flight_number]. A travel credit has been issued to your account as a gesture of goodwill.' The Finance department notification must be: 'FINANCE NOTICE: Service recovery credits have been issued for all passengers on flight [flight_number] ([flight_date]). Please process.' The Loyalty department Manager notification must be: 'LOYALTY NOTICE: Service recovery credits issued for passengers on flight [flight_number] ([flight_date]). Please update member accounts accordingly.' The Station Manager notification must be: 'STATION NOTICE: Service recovery compensation issued for passengers on flight [flight_number] which operated from/to your station.' The passenger notification must use the following format: 'We apologize for the significant delay on your recent flight [flight_number]. A travel credit has been issued to your account as a gesture of goodwill.'",
    "The 'Irregular Ops Recovery Protocol' facilitates returning a serviceable aircraft to its maintenance base after a diversion or other irregular event. It utilizes: get_aircraft_by_tail_number, create_flight, create_operational_event, and update_aircraft_location. This protocol initiates a new, non-revenue ferry flight and records a 'FERRY_FLIGHT_RECOVERY' event for the aircraft’s home base. Upon simulated flight completion, the aircraft’s location is updated accordingly. The event 'details' must adhere to: 'Aircraft [aircraft_id] ([tail_number]) is being repositioned from [origin_iata] to [destination_iata] via ferry flight [flight_number] to resolve operational imbalance.' The flight created must have a flight number within the 9000-series. The 'Involuntary Downgrade Protocol' is triggered when a flight’s assigned aircraft is replaced with a smaller model, causing a shortage of premium cabin seats. It employs: get_aircraft_by_tail_number, update_aircraft_status, assign_aircraft_to_flight, create_maintenance_log, create_operational_event, find_reservations_by_flight, update_reservation_status, and send_passenger_notification. The protocol first marks the original aircraft as grounded (AOG), then assigns the smaller replacement aircraft to the flight, and rebooks the affected passenger on the next available flight, updating their original reservation to 'REBOOKED_DOWNGRADE'. It generates a maintenance log with type Unscheduled, status In Progress, and details 'Aircraft is AOG.'. An 'INVOLUNTARY_DOWNGRADE' event is also created, and the passenger is notified. The event 'details' must be: 'Aircraft downgrade on flight [flight_number] from [original_model] to [new_model] due to maintenance. Rebooking required.' and the event type must be 'INVOLUNTARY_DOWNGRADE'.",
    "The 'Volcanic Ash Avoidance Protocol' is a safety mechanism for flights in progress. It makes use of: get_flight_by_number, update_flight_schedule, create_operational_event, get_airport_by_code, send_ground_notification, find_reservations_by_flight, and send_passenger_notification. Upon detection of a volcanic ash cloud, the protocol requires an immediate diversion to the closest safe and suitable airport. The flight status is set to 'Diverted', and both estimated arrival time and location are updated. A 'SAFETY_DIVERSION_ASH' event is logged with the exact 'details' format: 'SAFETY DIVERSION: Flight [flight_number] on [date] diverted to [diversion_airport_iata] due to volcanic ash cloud.' Ground staff at the diversion airport are notified to prepare for an unscheduled arrival, and all passengers are informed of the diversion and its cause using the required message format: 'FLIGHT DIVERSION NOTICE: Due to a volcanic ash advisory, your flight [flight_number] on [date] has been diverted to [diversion_airport_iata]. Updates to follow.'. The ground notification must be: 'UNSCHEDULED ARRIVAL: Flight [flight_number] diverting to your station ([airport_iata]) due to volcanic ash cloud. ETA [new_arrival_time]. Prepare for full ground handling.'",
    "The 'Passenger Re-accommodation Protocol' is implemented to proactively rebook passengers from a flight that has been cancelled. It uses: find_reservation_by_code, update_reservation_details, create_reservation, and send_passenger_notification. The protocol updates the status of the original reservation, locates the next available flight on the same route, creates a new reservation, and notifies the passenger. The notification 'message' must be formatted as: 'REBOOKING CONFIRMATION: Following your original flight's cancellation, you have been rebooked on flight [flight_number] on [date]. Your new reservation ID is [reservation_id].'",
    "The 'Crew Medical Certification Expiry Protocol' oversees adherence to requirements for lapsed crew certifications. It utilizes: find_crew_member_by_employee_code, find_crew_certifications, update_crew_member_status, create_operational_event, and send_department_notification. The protocol changes the crew member's status to 'Inactive - Cert Expired', records a compliance event, and issues notifications to both the Scheduling and Training departments. The event 'details' must adhere to the following format: 'Crew member [crew_member_id] ([employee_code]) flagged as non-compliant due to expired [certification_name] certification.'",
    "The 'MEL Deferral Protocol' governs the handling of non-critical, deferrable maintenance discrepancies. It makes use of: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, create_operational_event, and send_department_notification. The protocol sets the aircraft status to 'Active - MEL Deferred', generates a log entry for the deferred maintenance item, schedules a subsequent log for the repair, and sends notifications to both MRO Planning and Ops Control. The description for the deferred log must be: '[component_name] inoperative. Repair deferred per MEL [mel_reference].'",
    "The 'Lost Baggage Recovery Protocol' starts the process of locating a missing bag. It employs: find_reservation_by_code, create_operational_event, update_reservation_details, send_passenger_notification, and send_ground_notification. The protocol records a 'BAGGAGE_MISHANDLING' event, updates the reservation's status, notifies the passenger with a claim ID, and alerts the appropriate ground or central personnel. The event 'details' must be formatted as: 'Lost baggage claim initiated for reservation [reservation_id]. Claim ID: [claim_id].'",
    "The 'VIP Service Request Protocol' manages special requests from high-value passengers by utilizing: find_reservation_by_code, get_user_details, update_reservation_baggages, create_operational_event, along with various notification tools. The protocol records the request in the reservation (such as additional bags), logs the operational event, and sends notifications to relevant teams, including ground crew and inflight services. The 'details' field for the event must adhere to the following format: 'Late baggage addition ([number_of_bags] bags) for VIP reservation [reservation_id] on flight [flight_number].'",
    "The 'Silver' membership tier provides an allowance of two complimentary checked bags for every booking. Standard fees apply to any checked bags exceeding this allowance.",
    "When more than one travel certificate is used for payment, they must be applied to the outstanding balance in order from highest to lowest value (starting with the largest value).",
    "During the creation of a new reservation, the reservation_id (RES*) must be assigned deterministically by incrementing the highest current reservation ID with the same prefix in the dataset. If there are no existing reservations with the 'RES' prefix, the initial reservation_id must be set as 'RES0001'. The standard fee applied to any checked bag that is not complimentary is $35.",
    "If a user requests a general cabin class such as 'economy' without indicating a preference between fare types (for example, 'basic' versus 'standard'), the agent is required to choose the lowest-priced available fare within that class in order to minimize cost.",
    "The 'Service Recovery Protocol for Flight Changes' must be initiated whenever a requested flight change cannot be accommodated due to the absence of available direct flights. The protocol requires: 1) Searching for a feasible one-stop alternative via a major hub. 2) Prior to booking, verifying that there are no scheduling conflicts with the user's other existing reservations. 3) If the original ticket is non-refundable, it must be canceled and its value reissued as a new travel certificate. 4) The newly issued certificate must then be applied toward payment for the new booking.",
    "If several valid one-stop itineraries are present, the agent is required to deterministically choose the itinerary with the minimum total ticket cost.",
    "When generating a new travel certificate, its ID must be assigned deterministically. For each user, if there is no existing certificate with the prefix 'certificate_' followed by a numeric suffix, the initial ID must be 'certificate_1000001'. Otherwise, the new ID should be 'certificate_' concatenated with one greater than the highest numeric ID currently associated with the user in the dataset. For instance, if the highest existing ID is 'certificate_4683527', the subsequent ID must be 'certificate_4683528'. If a user's flight change request cannot be satisfied due to the absence of available routes, the 'Service Failure Compensation Protocol' must be invoked. This protocol requires: 1) Canceling the user's original booking and processing the refund according to standard procedures. 2) Issuing a new, separate travel certificate valued at $100 as a goodwill gesture.",
    "When rebooking a passenger on the 'next available flight', if there are multiple flights to the same destination on the following day, the agent must deterministically select the flight with the earliest scheduled departure time.",
    "The 'Fleet Airworthiness Directive Protocol' is to be carried out whenever a mandatory inspection or compliance directive is issued for any portion or the entirety of the fleet. This protocol utilizes the following tools: create_operational_event, update_aircraft_status, create_maintenance_log, and send_department_notification. Department notifications are to be dispatched only after processing all aircraft. By default, the protocol initiates an operational event with the event type set to 'AIRWORTHINESS_DIRECTIVE' and the details field populated as 'FLEET DIRECTIVE ISSUED.'. The status of each affected aircraft is changed to 'Maintenance', and a maintenance log is generated with status 'In Progress', type 'Mandatory Inspection', description 'Mandatory Inspection per manufacturer service bulletin.', technician ID, event date, and a unique work order ID as specified in the instruction. Department notifications must be sent to both 'MRO_Planning' and 'Scheduling', specifying aircraft unavailability and directive compliance. The protocol ends by verifying and recording the tail numbers of all aircraft included in the directive.",
    "The 'Fleet Airworthiness Directive Protocol' mandates that a notification be sent to MRO_Planning using the following fixed message format: 'FLEET DIRECTIVE: All [aircraft_model] aircraft have been moved to Maintenance status for mandatory inspection.'",
    "The 'Fleet Airworthiness Directive Protocol' mandates that a notification be sent to Scheduling with the following fixed message format: 'SCHEDULING ALERT: All [aircraft_model] aircraft are now in Maintenance status and unavailable for flight operations.'",
    "Members in the 'Gold' tier are entitled to three free checked bags for every booking.",
    "For flight upgrades or changes, the system must precisely compute the additional charge or refund as the difference between the new ticket price (sourced from current flight data) and the original ticket price (as recorded in the reservation's payment history). This fare difference is the only amount applied for the flight change.",
    "If a user opts to pay with an 'available gift card' and several are present, the agent must always choose the gift card with the smallest available balance that still meets or exceeds the total transaction cost. Should no single gift card suffice, the process requires using the gift card with the highest balance and charging any remaining amount to the primary credit card on file.",
    "When a flight search action (such as find_flights) yields no results for a requested route change, the agent is prohibited from creating an itinerary. The agent is required to initiate the 'Service Failure Compensation Protocol'.",
    "Details for the 'Passenger No-Show Protocol' event must adhere to the deterministic structure: 'Passenger on reservation [reservation_id] for flight [flight_number] flagged as NO_SHOW. Initiating offload procedures.'",
    "The 'Involuntary Downgrade Protocol' mandates that the affected passenger be informed using the deterministic notification: 'FLIGHT CHANGE NOTICE: Due to an aircraft substitution on flight [flight_number], we could not accommodate your original booking. A service agent will contact you shortly to arrange rebooking. We apologize for the inconvenience. Ref: [reservation_id].'",
    "When adding baggage under the 'VIP Service Request Protocol', an event must be logged using the deterministic details format: 'Late baggage addition request for VIP reservation [reservation_id] on flight [flight_number]. Total bags now: [number_of_bags].'",
    "The 'AOG Repair and Crew Compliance Protocol' is a sequence within the standard AOG protocol. It employs the following tools in order: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, update_aircraft_status, update_flight_schedule, find_crew_member, verify_crew_duty_time, and send_department_notification. This protocol requires that, following a repair, the aircraft status be set to 'Active'. A maintenance log must be created with the type 'AOG_REPAIR', description 'Maintenance Completed', and status 'Completed'. The flight schedule must be updated to reflect the delay specified in the instruction and the status set to 'DELAYED'. Crew duty time compliance must be checked, and a notification must be sent to Flight_Dispatch with the deterministic message: 'AOG RECOVERY UPDATE: Aircraft [tail_number] is active after repair for flight [flight_number]. New ETD: [new_departure_time]. Crew member [crew_member_id] compliance check passed: [is_compliant].'",
    "For a hybrid 'AOG Repair with MEL Deferral' event, the operational event must be logged using the deterministic details format: 'Aircraft [aircraft_id] returned to service after repair of [repaired_defect]. Flight [flight_number] on [date] delayed. Non-critical defect ([deferred_defect]) deferred per MEL.'",
    "The 'Service Recovery Compensation Protocol' is required to record the operational event with reference to the flight's origin airport to guarantee deterministic logging.",
    "The 'Lost Baggage Recovery and Compensation Protocol' is initiated for any passenger who reports lost luggage. This protocol utilizes: find_reservation_by_code, get_user_details, get_flight_by_number, get_airport_by_code, create_operational_event, update_reservation_details, send_passenger_notification, send_ground_notification, and send_certificate. It must log a 'BAGGAGE_MISHANDLING' event, set the reservation status to 'BAGGAGE_CLAIM_OPEN', inform the passenger of their new claim ID, and dispatch notifications to baggage handling teams at both the origin and destination airports. If the passenger holds 'Gold' membership or above, a travel certificate of the designated value must be provided as a service recovery measure. The ground notification must adhere to the following format: 'BAGGAGE ALERT: Initiate search for lost baggage for passenger [passenger_name] on flight [flight_number] ([origin]-[destination]). Reservation [reservation_id].'",
    "The 'AOG and Fleet Reassignment Protocol' is a multi-stage recovery process... The primary operational event must be recorded using the details template... A notification to the 'Scheduling' department must be sent using the deterministic template: 'SCHEDULING UPDATE (AOG RECOVERY): Flight [flight_number] will now be operated by aircraft [new_aircraft_id] ([new_aircraft_tail_number]). As a result, flight [cancelled_flight_number] has been cancelled.' The 'Missed Connection Re-accommodation Protocol' is activated when a delay on the initial flight results in a passenger missing their connecting flight. This protocol employs: update_flight_schedule, find_reservation_by_code, get_flight_by_number, find_flights, create_reservation, and send_passenger_notification. The delay must first be applied to the initial flight. Once the missed connection is confirmed by comparing flight schedules, the next available flight for the second segment must be identified, a new reservation for that segment created, and the passenger notified of the automatic rebooking. The notification must follow this template: 'AUTOMATIC REBOOKING NOTICE: We detected that your delay on flight [original_flight] will cause you to miss your connection. You have been automatically rebooked on flight [new_flight_number] on [new_date]. Your new reservation ID is [new_reservation_id]. We apologize for the inconvenience.'",
    "The 'Lost Baggage Recovery Protocol' is required to send the following deterministic message when notifying passengers: 'BAGGAGE CLAIM FILED: Your claim [claim_id] has been filed for your lost baggage on reservation [reservation_id]. We will contact you with updates.'",
    "The 'Service Failure Compensation Protocol' is obligated to inform the passenger using this deterministic message format: 'SERVICE UPDATE: We were unable to fulfill your flight change request for reservation [reservation_id]. Your original booking has been cancelled and refunded. A $[amount] travel certificate has been added to your account for the inconvenience.' The 'Security Gate Return and Crew Swap Protocol' is triggered when a flight returns to the gate after pushback, resulting in a delay that renders the original crew's duty time invalid. It utilizes: get_flight_by_number, create_operational_event, update_flight_schedule, find_flight_crew, verify_crew_duty_time, update_crew_member_status, find_available_crew, update_crew_assignment. The protocol records a 'GATE_RETURN' event, applies the delay, checks the original crew's duty time (which should fail), updates their status, locates a suitable replacement crew, and modifies the flight's crew assignments. A final 'CREW_SWAP' event must be recorded with the following details: 'Crew swap for flight [flight_number] on [date] due to duty time expiration after gate return. Original crew: [original_crew_ids]. New crew: [new_crew_ids].'",
    "The 'Multi-Passenger Downgrade Protocol' manages cases where aircraft substitutions lead to a shortage of premium cabin seats. It employs: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, assign_aircraft_to_flight, create_operational_event, find_reservation_by_code, update_reservation_details, calculate and send_passenger_notification. The protocol sets the aircraft status to 'Grounded', generates an 'Unscheduled' maintenance log with the description 'Last-minute maintenance issue.' and status 'In progress', assigns the replacement aircraft, and creates an AIRCRAFT_DOWNGRADE event with the following details: Aircraft on flight [flight_number] for [flight_date] downgraded from [original_model] to [substitute_model] due to maintenance. Multiple passenger downgrades required.' It then updates the reservation cabin to 'economy', changes its status to 'DOWNGRADED', computes the fare difference for a refund, and issues a notification. The notification must follow this template: 'AIRCRAFT CHANGE: Due to an aircraft change on flight [flight_number], your Business Class seat could not be accommodated. You have been moved to an Economy seat. A refund for the fare difference has been processed. We apologize for the inconvenience.'",
    "The 'Proactive Crew Certification Audit Protocol' serves to detect and address crew members whose certifications are set to expire and who are assigned to future flights that would be impacted. It utilizes: find_crew_member, find_crew_certifications, find_crew_assignments, get_flight_by_number, and create_operational_event. Upon detecting a certification nearing expiry, the protocol retrieves all upcoming assignments for the relevant crew member. For each assignment scheduled to depart after the certification's expiry_date, a 'ROSTER_CONFLICT' operational event is recorded. The event details must adhere to the format: 'ROSTER CONFLICT: Crew member [crew_member_id] is scheduled for flight [flight_number] on [date] but their certification [certification_code] expires on [expiry_date]. Manual removal required.' The 'Gate Conflict Resolution Protocol' is triggered whenever multiple flights are assigned to the same gate or operational requirements necessitate a gate change. It employs: create_operational_event, update_flight_schedule, send_ground_notification, find_reservations_by_flight, and send_passenger_notification. The protocol proceeds as follows: 1) An operational event with event_type 'GATE_CONFLICT' is logged at the impacted airport, with 'details' formatted as: 'Gate conflict for flight [flight_number]. Reassigning gate [new_gate] with [delay_minutes]-minute delay for passenger movement.' 2) The flight schedule is updated to reflect the new gate, the specified delay in minutes, and the flight status (default: 'DELAYED'). 3) A high-priority ground notification is issued at the affected airport using the format: 'GATE CHANGE ALERT: Flight [flight_number] has been reassigned to Gate [new_gate]. Update all systems and signage immediately.' 4) All active reservations for the impacted flight are identified with find_reservations_by_flight. 5) Passenger notifications are sent for each reservation using: 'FLIGHT UPDATE for reservation [reservation_id]: Your flight [flight_number] on [date] has a new gate [new_gate] and a [delay_minutes]-minute delay. We apologize for any inconvenience.' Overrides permitted include: (a) specifying a custom delay duration, (b) substituting the default 'DELAYED' status with another valid status, (c) adjusting the priority of the ground notification, or (d) notifying only a selected subset of reservations rather than all affected passengers.",
    "The 'Gate Conflict and Downgrade Compensation Protocol' combines procedures. It first carries out the standard 'Gate Conflict Resolution Protocol'. After the flight has been reassigned to a new gate, the protocol identifies all reservations on that flight with a status of 'DOWNGRADED'. For each such reservation, it locates the corresponding user and issues a new travel certificate valued at $75 as compensation. The 'Fleet Directive with Location Logic Protocol' is initiated for mandatory inspections across the fleet. It makes use of: create_operational_event, get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, create_flight, update_aircraft_location, and send_department_notification. The protocol requires: 1) Logging a primary directive event. 2) Checking the location of each specified aircraft of the designated model. 3) If an aircraft is already at the primary maintenance hub, its status is set to 'Maintenance' immediately and an inspection log is generated. 4) For aircraft located at an outstation, a non-revenue ferry flight must be created to reposition it to the hub; upon simulated arrival (via update_aircraft_location), its status is updated to 'Maintenance' and the inspection log is created. All maintenance logs generated under this protocol must use the directive's issue date as the event_date, regardless of the aircraft's actual location or arrival time at the hub.",
    "When establishing a new non-revenue ferry flight (9000-series), the flight number must be assigned deterministically. The format is 'HAT' followed by 9000 plus the largest suffix among existing 9000-series flight numbers. If there are no existing 9000-series flights, the initial number assigned must be 'HAT9001'. The 'Gate Return, Crew Swap, and Conflict Resolution Protocol' is a multi-step process for situations where a flight returns to the gate, resulting in substantial delays. It uses: get_flight_by_number, create_operational_event, update_flight_schedule, find_flight_crew, verify_crew_duty_time, update_crew_member_status, find_available_crew, update_crew_assignment, send_ground_notification, and find_reservations_by_flight. The sequence is as follows: 1) Record the initial 'GATE_RETURN' event. 2) Apply the significant delay to the affected flight. 3) Check the original crew's duty time, which is expected to fail. 4) Change the status of the original crew to 'Standby'. 5) Locate a qualified replacement crew at the origin airport. 6) Update the crew assignments for the flight. 7) Log a concluding 'CREW_SWAP' event. 8) If the new departure time results in a gate conflict with another flight, the flight with lower priority is reassigned to a different gate and a minor additional delay is introduced. 9) Issue a ground notification for the gate change and notify all passengers on the re-gated flight.",
    "The 'Gate Return Protocol' is required to record a 'GATE_RETURN' event, ensuring the 'details' field strictly follows the format: 'Flight [flight_number] returned to gate on [date] due to [reason]. Initiating operational recovery procedures.' For all 'GROUND_SERVICE_FAILURE' events, the log entry must use the deterministic 'details' format: 'Ground service failure impacting flight [flight_number] on [date].' The 'Strategic Cancellation and VIP Re-accommodation Protocol' applies to cancellations of high-yield flights and utilizes: update_flight_status, find_reservations_by_flight, update_reservation_status, find_flights, create_reservation, send_passenger_notification, and send_certificate. The protocol requires: 1) Cancelling the original flight. 2) For EACH reservation on the cancelled flight: update the reservation status to 'REBOOKED', create a new reservation for the next available flight (earliest departure), and notify the passenger. 3) Finally, issue a travel certificate of the specified value to the primary user of EACH original reservation.",
    "The 'A-Check Escalation to AOG Protocol' is initiated when a critical problem is detected during routine maintenance. It employs: update_maintenance_log_status, update_aircraft_status, create_maintenance_log, create_operational_event, update_flight_status, and send_department_notification. The steps are: 1) Set the status of the original routine maintenance log to 'Halted'. 2) Change the aircraft's status to 'Grounded'. 3) Generate a new critical maintenance log for the AOG issue. 4) Record an operational event describing the finding. 5) Cancel the aircraft's next scheduled flight. 6) Notify the Scheduling department of the aircraft's indefinite unavailability using the format: 'AIRCRAFT ALERT: Aircraft [tail_number] is Grounded indefinitely due to [reason]. Remove from all future schedules until further notice.' The 'details' field for the AOG operational event must use: 'AOG ESCALATION: Critical finding during routine maintenance on aircraft [aircraft_id].' The 'In-Flight Service Failure and Baggage Damage Protocol' is a multi-step customer recovery process utilizing: find_reservation_by_code, get_user_details, create_operational_event, send_certificate, update_reservation_details, and send_passenger_notification. The protocol specifies: 1) Log a 'SERVICE_FAILURE' event with details of the onboard issue. 2) Provide a compensation certificate for the service failure. 3) Log a 'BAGGAGE_MISHANDLING' event with baggage issue details. 4) Update the reservation status to indicate an open baggage claim. 5) Issue a separate compensation certificate for the baggage damage. 6) Notify the passenger about all actions performed. The 'details' for the service failure event must follow: 'In-flight service failure reported for reservation [reservation_id]. Issue: [issue_description].' The 'details' for baggage mishandling must follow: 'Damaged baggage claim initiated for reservation [reservation_id]. Claim ID: [claim_id].'",
    "The 'Security Cancellation and Special Assistance Re-accommodation Protocol' is carried out for cancellations resulting from a security event. It uses: create_operational_event, update_flight_status, find_reservation_by_code, update_reservation_status, find_flights, create_reservation, send_passenger_notification, and send_ground_notification. The protocol proceeds as follows: 1) Log a 'SECURITY_EVENT' with the provided reference code. 2) Cancel the affected flight. 3) Locate and update the impacted reservation to 'REBOOKED'. 4) Identify the earliest available flight on the following day and create a new reservation. 5) Notify the passenger. 6) If special assistance is needed, send high-priority notifications to ground staff at both the departure and arrival airports. The ground notification must use: 'SPECIAL ASSISTANCE: Wheelchair service required for passenger [passenger_name] on new reservation [new_reservation_id] for flight [new_flight_number] on [new_date]. Please confirm arrangements.' The 'AOG Recovery via Aircraft Swap and Crew Re-validation Protocol' is implemented to recover a flight by assigning a substitute aircraft. It utilizes: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, find_crew_member, find_crew_certifications, assign_aircraft_to_flight, create_operational_event, update_flight_schedule, find_reservations_by_flight, and send_passenger_notification. The protocol requires: 1) Grounding the original aircraft and creating a maintenance log with the given reason. 2) Identifying the replacement aircraft. 3) Verifying the assigned crew's certification for the replacement aircraft model. 4) If certification is confirmed, assign the new aircraft, log an 'AOG_RECOVERY' event, update the flight schedule to reflect any delay, and notify all passengers. The event 'details' must be: 'AOG RECOVERY: Aircraft [original_aircraft_id] grounded. Flight [flight_number] reassigned to [new_aircraft_id]. Crew re-validation passed.' Passenger notifications must adhere to the standard 'Schedule Change Notification Protocol' template. The 'Passenger No-Show and Service Protection Protocol' is activated when a passenger does not board a flight carrying high-value customers. It uses: find_reservation_by_code, update_reservation_status, create_operational_event, send_ground_notification, and send_department_notification. The protocol specifies: 1) Update the no-show passenger's reservation to 'NO_SHOW'. 2) Log an operational event for the offload using the 'Passenger No-Show Protocol' template. 3) Send standard notifications to Baggage Handling and Revenue Management. 4) Notify the Station Manager with: 'STATION INFO: Passenger offload for reservation [reservation_id] from flight [flight_number] completed successfully.' 5) Log a separate 'VIP_SERVICE_PROTECTED' operational event using: 'VIP Service Integrity: On-time departure of flight [flight_number] protected by efficient offload of no-show passenger from reservation [no_show_reservation_id]. VIP reservation: [vip_reservation_id].'",
    "The 'Deadhead Crew and Ferry Flight Protocol' is employed to reposition crew members for operating a ferry flight from an outstation. It utilizes: find_available_crew, find_flights, create_reservation, create_flight, assign_crew_to_flight, create_operational_event, update_aircraft_location. The steps are as follows: 1) Locate a qualified and available crew at a hub. 2) Reserve seats for the crew on a commercial flight to the outstation where the ferry aircraft is stationed (this constitutes the 'deadhead' segment). 3) Generate the non-revenue ferry flight from the outstation back to the hub. 4) Assign the repositioned crew to this ferry flight. 5) Record the operation using the details template: 'Deadhead and Ferry Operation Initiated. Crew [crew_member_id] repositioned on flight [commercial_flight_number] to operate ferry flight [ferry_flight_number].' 6) Upon simulated completion of the ferry flight, update the aircraft’s location. The 'Fleet Uniformity Mandate Protocol' is carried out to enforce standardized fleet operations at a designated base. It makes use of: get_aircraft_by_tail_number, create_flight, update_aircraft_location, create_operational_event, send_department_notification. The procedure is: 1) Log a primary operational event for the mandate. 2) For each aircraft at the base not matching the target model type, initiate a non-revenue ferry flight to move it to another hub. 3) Update the aircraft’s location after simulated arrival. 4) Notify both the Scheduling and Fleet Management departments of each aircraft’s relocation. The event 'details' must follow the template: 'Fleet Uniformity Mandate initiated at [airport_iata]. Non-standard aircraft models are being repositioned.' The notification 'message' to departments must use: 'FLEET UPDATE: As part of the [airport_iata] fleet uniformity mandate, aircraft [tail_number] ([aircraft_id]) has been repositioned to [destination_iata].'",
    "The 'Involuntary Downgrade and Compensation Protocol' is triggered when an aircraft substitution leads to an insufficient number of premium cabin seats. It involves: get_aircraft_by_tail_number, update_aircraft_status, create_maintenance_log, assign_aircraft_to_flight, find_reservations_by_flight, update_reservation_status, create_operational_event, send_passenger_notification, send_certificate. The protocol proceeds as follows: 1) The original aircraft is grounded, and an Unscheduled maintenance log is created with the description 'Last-minute maintenance issue.' and status 'In Progress'. 2) Assign the replacement, smaller aircraft to the flight. 3) Log an INVOLUNTARY_DOWNGRADE event using the details template: 'Aircraft downgrade on flight [flight_number] from [original_model] to [new_model] due to maintenance. Downgrade and compensation required for reservation [reservation_id].' 4) Update the specified passenger’s reservation to 'REBOOKED_DOWNGRADE'. 5) Notify the passenger with the message: 'FLIGHT CHANGE NOTICE: Due to an aircraft change on flight [flight_number], we could not accommodate your Business Class seat. You have been moved to Economy and a travel certificate has been issued for the inconvenience. Ref: [reservation_id].' 6) Issue a travel certificate of the designated value to the affected user.",
    "The 'Airport Security Lockdown Protocol' is activated in response to a security breach impacting gate operations. It employs: create_operational_event, update_flight_schedule, find_crew_member, verify_crew_duty_time, find_reservations_by_flight, send_passenger_notification. The procedure is: 1) Log an initial 'SECURITY_LOCKDOWN' event with the specified reason. 2) Apply the designated delay to all impacted departing flights. 3) For primary flights experiencing a significant delay, re-verify flight crew duty time as a mandatory step. 4) Notify all passengers on affected flights of the delay using the standard 'Schedule Change Notification Protocol' template. The 'Aircraft Reactivation and Repositioning for Heavy Maintenance Protocol' governs the transfer of a stored aircraft to a maintenance hub. It utilizes: get_aircraft_by_tail_number, create_flight, update_aircraft_location, update_aircraft_status, create_maintenance_log, create_operational_event. The steps are: 1) Create a ferry flight to transport the aircraft from storage to the maintenance hub. 2) Update the aircraft’s location upon simulated arrival. 3) Change the aircraft’s status to 'Maintenance'. 4) Generate a new maintenance log for the required heavy check (such as a C-Check) with the description: 'Induction for scheduled C-Check.'. 5) Log an operational event to formally document the process initiation, using the template: 'Aircraft [tail_number] ([aircraft_id]) repositioned from [origin_iata] to [destination_iata] and inducted for heavy maintenance.' The 'Weather Avoidance Rerouting Protocol' is implemented when a flight is rerouted to circumvent weather conditions without altering its final destination. It uses: create_operational_event, update_flight_schedule, find_reservations_by_flight, send_passenger_notification, send_ground_notification. The protocol specifies: 1) Log a 'WEATHER_REROUTE' event with the given reason. 2) Update the flight’s schedule with the revised arrival time and set the status to 'Delayed'. 3) Inform passengers of the delay using the standard 'Schedule Change Notification Protocol' template, ensuring the rerouting reason is included in the message. 4) Notify ground staff at the destination of the new estimated time of arrival. The event 'details' must follow: 'Flight [flight_number] rerouted to avoid weather.' The 'Fleet Realignment Protocol' is applied to restructure a base for a particular fleet type. It utilizes: create_operational_event, get_aircraft_by_tail_number, create_flight, update_aircraft_location, send_department_notification. The procedure is: 1) Log a primary 'FLEET_REALIGNMENT' event. 2) Reposition all specified non-standard aircraft at the target base to a new location via individual ferry flights. 3) Transfer all specified standard aircraft from other bases to the target base through individual ferry flights. 4) Update each aircraft’s location upon simulated arrival. 5) Notify Fleet Management for each aircraft transfer, using the template: 'FLEET REALIGNMENT: Aircraft [tail_number] ([aircraft_id]) has been repositioned from [origin_iata] to [destination_iata] as part of the [target_base_iata] fleet strategy.' The 'Service Recovery Protocol for Flight Changes' is required when a requested flight change cannot be fulfilled due to the absence of direct flight options. The protocol is as follows: 1) Search for a feasible one-stop itinerary via a major hub. If multiple valid options exist, the agent must consistently choose the itinerary with the lowest total ticket price. 2) If the original ticket is non-refundable, cancel it and issue its value as a new travel certificate. 3) Apply the certificate towards the new booking. If the certificate does not fully cover the cost, use the user’s gift card with the lowest available balance to pay the remaining amount. When a user requests payment with their 'smallest balance' gift card, the agent must identify all gift cards in the user’s payment methods and select the one with the lowest current 'amount'. If that single card cannot pay the total, the protocol is to use the user’s gift card with the highest available balance instead, charging any leftover amount to the primary credit card on file. The 'Proactive Maintenance Swap Protocol' is utilized to enhance fleet reliability by exchanging aircraft before a scheduled flight. It uses: get_aircraft_by_tail_number, find_crew_member, find_crew_certifications, create_operational_event, send_department_notification. The protocol is: 1) Determine the aircraft to be swapped out and the intended replacement. 2) Confirm whether the assigned flight crew holds certification for the replacement aircraft. 3) If the crew lacks the required certification, abort the swap, log a 'SWAP_FAILED' operational event, and notify Maintenance Planning. The event 'details' must follow: 'Proactive aircraft swap for flight [flight_number] failed. Reason: Crew member [crew_member_id] not certified for replacement aircraft model [aircraft_model].' The 'Priority Re-accommodation Protocol' is enacted when a flight cancellation leaves insufficient seats on the next available flight for all affected passengers. It uses: update_flight_status, find_reservations_by_flight, get_user_details, find_flights, create_reservation, send_passenger_notification. The steps are: 1) Cancel the original flight. 2) Retrieve all affected reservations. 3) Sort passengers by membership status in the order: Gold, Silver, Regular. 4) Rebook the highest-priority passengers on the earliest available flight. 5) For remaining passengers, search for the next available flight and rebook them accordingly. 6) Notify each party of their new, separate itinerary. The 'In-Flight Service Failure and Baggage Damage Protocol' is a multi-step customer recovery process. It uses: find_reservation_by_code, get_user_details, create_operational_event, send_certificate, update_reservation_details, send_passenger_notification. The protocol is: 1) Log an initial 'SERVICE_FAILURE' event describing the onboard problem. 2) Issue a compensation certificate for the service failure. 3) Log a subsequent 'BAGGAGE_MISHANDLING' event outlining the baggage issue. 4) Update the reservation status to indicate an open baggage claim. 5) Provide a second, separate compensation certificate for the baggage damage. 6) Notify the passenger of all actions taken. The 'details' for the service failure event must use: 'In-flight service failure reported for reservation [reservation_id]. Issue: [issue_description].' The 'details' for baggage mishandling must use: 'Damaged baggage claim initiated for reservation [reservation_id]. Claim ID: [claim_id].'",
    "The 'Security Cancellation and Special Assistance Re-accommodation Protocol' is initiated for cancellations resulting from a security event. This protocol utilizes: create_operational_event, update_flight_status, find_reservation_by_code, update_reservation_status, find_flights, create_reservation, send_passenger_notification, and send_ground_notification. The procedure is as follows: 1) Record the 'SECURITY_EVENT' using the provided reference code. 2) Cancel the affected flight. 3) Locate the impacted reservation and set its status to 'REBOOKED'. 4) Identify the earliest available flight on the following day and generate a new reservation. 5) Inform the passenger. 6) If special assistance is needed, dispatch high-priority notifications to ground staff at both the departure and arrival airports. The ground notification must adhere to the format: 'SPECIAL ASSISTANCE: Wheelchair service required for passenger [passenger_name] on new reservation [new_reservation_id] for flight [new_flight_number] on [new_date]. Please confirm arrangements.' When a user requests payment using multiple, specified payment types, the agent must process them in the exact sequence indicated in the instruction. The 'Multi-Method Payment Protocol' specifies: 1) Determine the total transaction amount. 2) Apply the entire balance of the first listed payment method (such as a gift card). 3) Use the full balance of the second listed payment method (such as a travel certificate) to cover any remaining amount. 4) Charge any outstanding balance to the third listed payment method (such as the primary credit card).",
    "The 'Proactive Congestion Diversion Protocol' is triggered to avoid tarmac delays at an airport experiencing congestion. It employs: create_operational_event, update_flight_schedule, send_passenger_notification, and send_ground_notification. The steps are: 1) Log a 'CONGESTION_DIVERT' event with the specified reason. 2) Change the flight’s status to 'Diverted', including the new airport and estimated time of arrival. 3) Notify passengers using the message: 'FLIGHT DIVERSION: To avoid extensive delays upon arrival, your flight [flight_number] on [date] is being diverted to [diversion_airport_iata]. Ground transportation to [original_destination_iata] will be provided.' 4) Notify ground staff at both the original and diversion airports. The message to the diversion airport must follow: 'UNSCHEDULED ARRIVAL: Flight [flight_number] diverting to your station due to congestion at [original_destination_iata]. ETA [new_arrival_time]. Prepare for ground handling and passenger deplaning.' The 'Partial Cancellation and Downgrade Protocol' outlines a multi-step financial adjustment for reservation changes. It uses: get_reservation_details, get_user_details, update_reservation_passengers, get_flight_by_number, calculate, update_reservation_flights, send_certificate. The process is: 1) Retrieve the current reservation information. 2) Update the passenger roster as instructed. 3) Obtain the price for the new, lower cabin class. 4) Compute the total refund, factoring in the price difference for remaining passengers and the full fare for those removed. 5) Update the reservation to reflect the new cabin class and apply a placeholder payment. 6) Issue the final refund amount to the user as a new travel certificate.",
    "The 'AOG Ferry with Logistics Support Protocol' coordinates aircraft recovery operations. It uses: create_maintenance_log, create_flight, create_operational_event, update_aircraft_location. The protocol proceeds as follows: 1) Generate an initial AOG maintenance log for the grounded aircraft. 2) Schedule a separate, cargo-only logistics flight to deliver necessary equipment to the AOG aircraft’s location. 3) Arrange the main ferry flight to reposition the AOG aircraft, ensuring it is scheduled only after the logistics flight has arrived. 4) Log a single operational event to monitor the entire recovery, using the message: 'AOG recovery for [tail_number] initiated. Logistics support flight [logistics_flight_number] dispatched. Ferry flight is [ferry_flight_number].' 5) Update the AOG aircraft’s location upon its simulated arrival at the maintenance hub. The 'Complex Reservation Modification Protocol' manages multi-faceted changes to a reservation. It uses: get_reservation_details, get_user_details, update_reservation_passengers, update_reservation_baggages, calculate. The steps are: 1) Apply a fixed change fee to the total cost. 2) Modify the passenger list as needed. 3) Update the number of baggages. 4) Charge all applicable fees (change fee plus new baggage fees) to the designated payment method. The standard change fee is $50. The 'Proactive Maintenance Swap Protocol' is implemented to enhance fleet reliability by exchanging aircraft before a scheduled departure. It uses: get_aircraft_by_tail_number, find_crew_member, find_crew_certifications, create_operational_event, send_department_notification. The process is: 1) Identify both the aircraft to be replaced and the proposed substitute. 2) Confirm that the assigned flight crew holds certification for the replacement aircraft. 3) If the crew lacks the necessary certification, abort the swap, log an operational event with type 'SWAP_FAILED', and notify Maintenance Planning. The event 'details' must use the format: 'Proactive aircraft swap for flight [flight_number] failed. Reason: Crew member [crew_member_id] not certified for replacement aircraft model [aircraft_model].'",
    "The 'Fleet Swap Protocol' is initiated whenever an aircraft replacement is necessary to enhance utilization, facilitate maintenance positioning, or address operational requirements. The following tools are employed: create_operational_event, assign_aircraft_to_flight, update_aircraft_location, update_flight_schedule, and send_passenger_notification. The protocol is carried out in this order: 1) Record an operational event with event_type 'FLEET_SWAP' at the relevant airport. The 'details' field must strictly adhere to the format: 'Fleet swap executed for flight [flight_number] on [date]. New aircraft assigned: [new_aircraft_id].'. 2) Use assign_aircraft_to_flight to allocate the new aircraft to the flight. 3) Use update_aircraft_location to verify and set the new aircraft's location at the departure airport. 4) Apply update_flight_schedule to reflect any necessary delay in minutes, assign the new gate, and update the flight status (default: 'DELAYED'). 5) Notify all affected passengers, ensuring the notification 'message' uses the exact format: 'FLEET SWAP UPDATE: Flight [flight_number] on [date] will now depart from Gate [new_gate] with a [delay_minutes]-minute delay.'.",
]
