RULES = [
    "Every task must include at least one database write (e.g., SG update, secret, cache setting, job run, schedule, alarm, cart, pricebook entry, promotion, context rule, change log).",
    "IDs are strings. Never pass numeric IDs as integers.",
    "Current time is: '2025-08-06T12:00:00Z'.",
    "Where a tool defines explicit defaults (see tools.py), omitting those parameters is allowed and considered deterministic per policy.",
    "When creating a cart, if no promo code is given, use 'None' for the promo code.",
    "Cart creation: if shipping is not specified, default to 'STANDARD'. Allowed shipping methods: 'STANDARD', 'EXPRESS', 'OVERNIGHT'.",
    "Products in pricebooks/carts must be referenced by external product_code (e.g., 'AC-USBC-HUB', 'HW-TB-DOCK'); never by internal numeric ids.",
    "Monitoring baseline (cache): create a 'cache' dashboard and an 'Errors' alarm at 1.0 over 300 seconds with 'GreaterThanOrEqualToThreshold' when the instruction asks for monitoring. Run 'SMOKE' only if the instruction explicitly asks for validation; otherwise SMOKE is optional.",
    "Monitoring baseline (API): create an 'api' dashboard and a '5xxErrorRate' alarm at 1.0 over 300 seconds with 'GreaterThanOrEqualToThreshold' when the instruction asks for monitoring. Run 'SMOKE' only if the instruction explicitly asks for validation; otherwise SMOKE is optional.",
    "Use the metric explicitly named in the instruction. If none is named and a baseline is requested, default to 'Errors' (cache/API) or 'CacheHitRate' when partition-drift is in scope.",
    "If cadence/thresholds aren't specified but a monitoring baseline is requested, use the defaults above. Passing only 'resource_id' to create_cloudwatch_alarm is compliant; the tool defaults apply by policy.",
    "Secure to standard internal network: use CIDR '10.0.0.0/16' for ingress; include port 443; include port 6379 when Redis is in scope.",
    "Before updating network/security, read environment defaults with get_environment_network_defaults when VPC/subnets are in scope. If the instruction only tightens a specific SG with explicit CIDR/ports, the pre-read is optional.",
    "When tightening a service, update that service's security group (service_name must match the instruction). Allowed aliases: 'Commerce' ↔ 'Commerce API'; 'Checkout' ↔ 'Checkout API'; 'Checkout Gateway' is acceptable for gateway-only changes.",
    "Security group ports/CIDRs must match either the instruction or these baseline rules (never invented).",
    "Private ElastiCache baseline: service 'com.amazonaws.us-east-1.elasticache'; if VPC/subnets are named in the instruction, use them literally; otherwise read environment defaults and use those outputs.",
    "Cache hardening baseline: use the existing cluster named in the instruction; enable Redis AUTH and TLS; keep the existing partition key unless the instruction sets a new version.",
    "Read the cluster (get_cache_cluster) before changing partition/auth settings. If the instruction only provides a literal endpoint and secret for integration (configure_cache_integration) and no cluster state is being changed, a pre-read is optional.",
    "Cache warm modes: 'metadata' (quick), 'populate' (full). Use the mode named in the instruction; if not named and a warm is implied by baselines, prefer 'metadata'.",
    "A quick metadata warm (run_cache_warm_jobs(mode='metadata')) is required when you change the partition key version or update the cache integration endpoint/secret. Otherwise, warming is optional.",
    "Cache alarms should target the real cluster id (e.g., 'dcomm-uat-redis') unless the instruction names a different resource explicitly. For networking-only tasks where the cluster id is not provided and no cluster read is performed, targeting the SG or interface endpoint resource is acceptable.",
    "Connected apps: app_name_hint must match the instruction verbatim (e.g., 'Checkout API', 'Commerce API'). The resulting app_id is 'app-' + slug(app_name) with hyphens.",
    "Unless scopes are explicitly listed in the instruction, required connected-app scopes default to ['api','openid'].",
    "When instructions call for a secret, create only the specific purpose(s) mentioned with create_secret_for. If both are explicitly or clearly implied (e.g., full app onboarding), create both 'OAUTH_CLIENT_SECRET' and 'API_AUTH_HEADER'.",
    "When instructions mention redirect-domain hygiene, verify with verify_oauth_redirect_domain(callback_url, expected_domain) and record the verification result; no additional output processing is required by policy.",
    "After connected-app changes, if a monitoring baseline is requested, prefer running 'OAuth-Smoke'; if that collection is unavailable, a standard 'SMOKE' run is acceptable.",
    "API rollout flow: publish_openapi_spec → enable_digital_commerce_gateway → register_api_endpoints. If an API monitoring baseline is requested, also create the 'api' dashboard and 5xxErrorRate alarm and (optionally) run SMOKE if the instruction asks.",
    "Trace sampling: if requested but no value is given, use 0.10.",
    "Change log target for API rollout must be the spec id ('spec-...').",
    "When an instruction says 'keep <PROMO> active' or 'make sure <PROMO> is active', always perform get_offer_by_code(<PROMO>) then upsert_promotion(code=<PROMO>, active=True).",
    "When an instruction says 'pause <PROMO>' or 'deactivate <PROMO>', always perform get_offer_by_code(<PROMO>) then upsert_promotion(code=<PROMO>, active=False).",
    "When a customer tier is mentioned, apply it with set_pricing_tier_for_customer before cart creation.",
    "Pricebook updates use upsert_pricebook_entries_batch with product_code and unit_price; do not invent pricebooks.",
    "When rule names are referenced in natural language (e.g., VIP prefer EXPRESS, NewCustomers prefer STANDARD) and 'Prefer-Express' / 'Prefer-Standard' are named, pass those exact strings as rule_name_hint.",
    "For personalization changes, set change_type='personalization' in record_api_change_log.",
    "When an instruction says 'record the change for X', log exactly X as target_id.",
    "If change_type is not specified: use 'rollout' for API spec rollout, 'oauth' for connected-app changes, 'networking' for VPC/interface endpoint changes (use 'security' for purely tightening security groups), 'personalization' for context rules, 'ops' for cache/pricebook/cart/secret/integration work.",
    "Allowed comparison tokens: 'GreaterThanOrEqualToThreshold', 'LessThanThreshold'.",
    "Allowed metrics: 'Errors', 'CacheHitRate', '5xxErrorRate'.",
    "Common test collections: 'SMOKE', 'OAuth-Smoke', 'Context-Rule-SMOKE', 'Pricing-SMOKE', 'Gateway-SMOKE'.",
    "Do not invent products, pricebooks, offers, endpoints, VPCs, or subnets. Read them first, or use the exact literals from the instruction.",
    "Do not transform names: service and app names must match the instruction exactly when passed into tools.",
    "Do not pass undeclared literals. If a value is not in the instruction, a prior output, or these rules, read to obtain it or omit the argument if the tool has a safe default."
    "If an instruction names concrete thresholds, IDs, or guardrails, it is still considered non-procedural under this policy (those are business constraints, not step lists).",
    "Using a tool’s documented default parameters is compliant and deterministic under this policy when the instruction does not specify those parameters.",
    "For create_cloudwatch_alarm: passing only 'resource_id' is compliant; default metric/threshold/period/comparison apply by policy unless the instruction specifies otherwise.",
    "For run_test_collection: if 'collection_name' is omitted, default to 'SMOKE'.",
    "For pure security-group hardening, change_type defaults to 'security'. If the instruction also bundles operational validation (dashboards/alarms/tests), 'ops' is also acceptable.",
    "For update_security_group_ruleset: pass TCP ports sorted ascending and CIDRs sorted ascending; do not include duplicates.",
    "Service security group naming is canonicalized as 'sg-<env-lower>-<slug(service_name)>'.",
    "Gateway group IDs are canonicalized as 'dcg-<api_group_name>-<env>'.",
    "Spec IDs are canonicalized as 'spec-<slug(spec_name)>-<version-with-dots-as-dashes>'.",
    "Dashboard names are canonicalized as 'dash-<env-lower>-<purpose>'.",
    "A get_cache_cluster pre-read is required before changing AUTH/TLS or partition settings. It is optional when only wiring an integration by literal endpoint/secret without changing cluster state.",
    "OAuth redirect-domain verification passes when the callback_url host equals the expected_domain OR is a subdomain of that eTLD+1 (e.g., 'checkout.uat.example.com' is valid for 'example.com').",
    "When an instruction mentions secrets, create only the specific purposes named (e.g., 'API_AUTH_HEADER' or 'OAUTH_CLIENT_SECRET'); create both only if explicitly implied by full app onboarding.",
    "Instruction phrases like 'complete the cart' or 'place the cart' are satisfied by a created cart unless an explicit checkout/purchase action is named in the instruction.",
    "Spec name/version must be stable end-to-end: if the instruction says 'Catalog v3', pass spec_name='Catalog v3' to publish_openapi_spec and derive spec ids from that exact string (slug includes the 'v3').",
    "When an instruction quotes a rollout target like 'spec-catalog-v3-3-1-0', you must reuse that exact spec_id for register_api_endpoints and record_api_change_log (no normalization).",
]
