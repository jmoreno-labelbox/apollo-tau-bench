RULES = [
    "Always identify the customer first using the exact email in the instruction to obtain contact_id and account_id. Do not guess or substitute.",
    "Any literal you pass to a tool (endpoint, rule_name, region, discount, product_id, campaign name, etc.) must appear in the instruction text or be returned by a prior tool call in this task.",
    "Treat every identifier as a string (cart_id, order_id, contact_id, account_id, app_id, cluster_id, security_group_id, product_id, backup ids, etc.). Never invent identifiers.",
    "Product discovery precedence: if the instruction provides product_id, use it directly; else if it provides a product name, call find_product_by_name and use the returned product_id; else if it provides a category, call search_products_by_category and select from that result. Do not mix methods unless the instruction asks you to.",
    "Discover products before creating a cart.",
    "Purchase flow (required order when a purchase is requested): get_customer_profile → (product discovery per precedence) → get_next_cart_id → create_shopping_cart → (apply_discount_bundle if any) → get_next_order_id → process_order_with_fulfillment.",
    "Never reuse a cart_id or order_id. Request a fresh cart number immediately before create_shopping_cart and a fresh order number immediately before process_order_with_fulfillment, and use those exact values.",
    "Apply any discount code only after the cart exists and before requesting the order number.",
    "Allowed discount codes are WELCOME5, WINTER20, and B2BVOLUME15 unless the instruction explicitly provides another exact code.",
    "If a purchase is requested, do not stop at cart creation. Complete the required flow and return the order id as a string.",
    "Shipping rules: allowed rule_name values (case-sensitive) are US-Std, EU-Std, US-Priority, EU-Priority, US-Express, EU-Express. Use only these values.",
    "When configuring shipping rules, the instruction must state rule_name, shipping_zone, and tracking_enabled (True/False). Use the customer from get_customer_profile unless the instruction names a specific customer_id.",
    "Use the same customer identity (contact_id/account_id) for shipping and checkout in the same task.",
    "Payment gateway configuration: use exactly the gateway_name and merchant_id stated in the instruction. Do not invent additional currencies. If the instruction specifies currencies, use those exact lists.",
    "CDN configuration requires both cdn_provider and region literals to be present in the instruction. Use only those values.",
    "Rate limits: the instruction must name the exact api endpoint (e.g., '/checkout') and the numeric limit. Do not set a rate limit if the endpoint or limit is not provided.",
    "Read-backs and confirmations: only perform a confirm/read-back when the instruction says to confirm/verify. Use get_api_rate_limit_config for endpoints, get_connected_app_security for apps, get_cache_cluster_info for cache clusters, and get_data_backup_info for backups.",
    "Audit log: consult get_audit_log only when the instruction explicitly asks to verify a specific event name. Otherwise do not read audits.",
    "Cache hardening order (when requested): configure_cache_integration → (optionally add/adjust 6379/TCP to CIDR 10.0.0.0/16 on sg-0123456789abcdef0 if the instruction asks) → optimize_security_group_rules. Default cache capacity if none is stated in the instruction is node_type 'cache.r5.large' with num_cache_nodes 3.",
    "Temporary 6380/TCP TLS rules are allowed only if the instruction asks; afterwards restore 6379/TCP to CIDR 10.0.0.0/16 if the instruction requires it.",
    "Connected apps: after enabling or updating security, only call get_connected_app_security if the instruction asks to verify.",
    "Backups: if the instruction references performing a backup, call process_data_backup using the stated type and storage_location. Only call get_data_backup_info if the instruction asks to fetch/confirm backup info.",
    "Feedback: use the exact feedback text and rating provided in the instruction.",
    "Loyalty: use the exact action ('add' or 'adjust_points') and points value stated in the instruction.",
    "Recommendations: the instruction must provide recommendation_type (e.g., 'similar_products', 'bought_together'). Use only narrated types.",
    "Segments and campaigns: when the instruction says to 'launch' a campaign with a percentage in the name (e.g., RET-10), use that numeric value unless the instruction provides a discount_percentage literal; if both are present, use the literal discount_percentage.",
    "Inventory adjustments must be fully narrated: quantity_adjustment that are negative must be preceded by a minus sign and movement_type (e.g., 'restock', 'reserve'). Do not submit an adjustment that is not described in the instruction.",
    "Only pass parameters that are part of the capability schema; do not add optional fields not requested by the instruction.",
    "When combining preludes (e.g., cache/CDN/app security, rate limits, segments, backups) with a purchase, complete all preludes first, then execute the purchase flow in the required order.",
    "If a return is requested, it must occur only after an order has been placed in this task or the instruction supplies an order id.",
    "Do not assume values that are not present in the instruction or tool outputs within the task. If a literal is missing, skip that action rather than invent a value.",
    "When asked to place for order for a product, assume quantity is 1 unless the instruction provides a different quantity.",
]
