from domains.dto import Action, Task

TASKS = [
        Task(
                annotator="0",
                user_id="task_01",
                instruction="You are an existing bank customer, John Doe. You would like to see the current balance for both your checking and savings accounts and the total balance of all accounts. Also, please check the rewards points on your credit card account. Finally, transfer $100 from your checking account to your savings account. Use the description 'Personal transfer'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="calculate_sum", kwargs={"values": ["5230.5", "15780.0"]}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_sav_1002", "amount": 100.0, "description": "Personal transfer"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                ],
                outputs=['"account_id": "acc_chk_1001", "balance": 5230.5, "currency": "USD"', '"account_id": "acc_sav_1002", "balance": 15780.0, "currency": "USD"',
                         '"total": 21010.5', '"rewards_points": 5200', '"account_id": "acc_chk_1001", "balance": 5130.5', '"account_id": "acc_sav_1002", "balance": 15880.0']
        ),
        Task(
                annotator="0",
                user_id="task_02",
                instruction="You are Jane Smith. Having recently moved, you need to update your address to 987 Birch St, New City, ON, L1V 2T7, Canada. You also want to update your primary phone number to 555-999-8888. Afterwards, you want to see the transaction history for your checking account for the last 30 days. Today is 2023-11-15, ignore all other dates given as today.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="update_customer_address",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "street_address": "987 Birch St", "city": "New City", "state": "ON",
                                       "postal_code": "L1V 2T7", "country": "Canada"}),
                        Action(name="update_customer_phone", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "new_phone_number": "555-999-8888"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_2001", "days_history": 30, "current_date": "2023-11-15"}),
                ],
                outputs=['"street_address": "987 Birch St", "city": "New City", "postal_code": "L1V 2T7"', '"number": "555-999-8888"',
                         '"transaction_id": "txn_5d4e7g1i-5e7c-8d3g-3e6i-9g1e3f7h8d4d"', '"transaction_id": "txn_4e5f8h2j-6f8d-9e4h-4f7j-1h2f4g8i9e5e"']
        ),
        Task(
                annotator="0",
                user_id="task_03",
                instruction="You are John Doe, and you wish to close your credit card account. First, you need to pay off the outstanding balance from your primary checking account. Use the description 'Pay off credit card balance for closure' for the transaction.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_crd_1003", "amount": 2500.00,
                                       "description": "Pay off credit card balance for closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_crd_1003", "new_status": "Closed"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                ],
                outputs=['"account_id": "acc_crd_1003", "status": "Closed"']
        ),
        Task(
                annotator="0",
                user_id="task_04",
                instruction="As a new customer, Emily Carter, you would like to open a new checking account. Your date of birth is February 14, 1993, your email is emily.c@email.com, your phone is 555-555-5555, and your address is 456 Oak Avenue, Springfield, IL 62704, USA. With an annual income of $72,000, you also want to apply for a $5,000 personal loan for a 24-month term for a vacation. Use the purpose 'Vacation' for the loan application.",
                actions=[
                        Action(name="create_customer",
                               kwargs={"first_name": "Emily", "last_name": "Carter", "dob": "1993-02-14", "email": "emily.c@email.com",
                                       "phone": "555-555-5555", "street": "456 Oak Avenue", "city": "Springfield", "postal_code": "62704", "country": "USA",
                                       "annual_income": 72000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "customer_generated_27", "loan_type": "Personal", "amount": 5000, "term": 24,
                                       "purpose": "Vacation", "annual_income": 72000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                ],
                outputs=['"application_id": "app_generated_21", "application_status": "Submitted"', '"account_id": "acc_generated_40"']
        ),
        Task(
                annotator="0",
                user_id="task_05",
                instruction="You are Chloe Dubois, and you want to add your father, Jean-Pierre Dubois, as a beneficiary. His account is in France with IBAN FR7630002005500000157845Z25 at Societe Generale. Once he is added, you would like to set up a recurring monthly payment of â‚¬100 from your checking account, starting on the first of next month.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "name": "Jean-Pierre Dubois",
                                       "relationship": "Father", "iban": "FR7630002005500000157845Z25", "bank_name": "Societe Generale", "country": "France"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_9001"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "source_account_id": "acc_chk_9001",
                                       "beneficiary_id": "bene_generated_11", "amount": 100.00, "frequency": "Monthly", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"payment_id": "sp_generated_41", "status": "Active", "amount": 100.00, "beneficiary_id": "bene_generated_11"']
        ),
        Task(
                annotator="0",
                user_id="task_06",
                instruction="You are Jane Smith, and you need to pay your friend John Doe $250. To ensure you have enough funds, you first want to transfer $300 from your savings account into your checking account. After that, you want to proceed with the payment. Use the description 'Transfer to checking for payment' for the transfer from savings to checking. Use the description 'Payment to John Doe' for the second transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_2002", "destination_account_id": "acc_chk_2001", "amount": 300.00,
                                       "description": "Transfer to checking for payment"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "beneficiary_name": "John Doe"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_2001", "destination_account_id": "1122334455", "amount": 250.00,
                                       "description": "Payment to John Doe"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                ],
                outputs=['"transaction_id": "txn_generated_41", "amount": -300, "status": "Completed"', '"transaction_id": "txn_generated_42", "amount": -250.0, "status": "Completed"']
        ),
        Task(
                annotator="0",
                user_id="task_07",
                instruction="You are customer David Chen. You have noticed a suspicious purchase from 'E-Trade' on your investment account with transaction ID txn_1h8i2k5m-9i2g-3h7k-7i1m-4k5i7j2l3h8h. You want to report this and have the account frozen immediately. The resulting ticket should have the content 'Suspicious transaction detected: txn_1h8i2k5m-9i2g-3h7k-7i1m-4k5i7j2l3h8h'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_transaction_details", kwargs={"transaction_id": "txn_1h8i2k5m-9i2g-3h7k-7i1m-4k5i7j2l3h8h"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "category": "Security", "priority": "High",
                                       "details": "Suspicious transaction detected: txn_1h8i2k5m-9i2g-3h7k-7i1m-4k5i7j2l3h8h", "target_entity": "Account",
                                       "target_id": "acc_inv_3002"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_inv_3002", "new_status": "Frozen"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"account_id": "acc_inv_3002", "status": "Frozen"']
        ),
        Task(
                annotator="0",
                user_id="task_08",
                instruction="You are John Doe. Based on your strong financial standing, you wish to request a credit limit increase to $15,000 for your credit card account and would like to submit this for review. The content of the ticket should read 'Requesting credit limit increase to 15000. Current limit: 10000. Annual Income: 120000. Credit Score: 780.' Also, you want to transfer $150 from your checking to your savings account. Use the description 'Transfer to savings' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "Account Management",
                                       "priority": "Medium",
                                       "details": "Requesting credit limit increase to 15000. Current limit: 10000. Annual Income: 120000. Credit Score: 780.",
                                       "target_entity": "Account", "target_id": "acc_crd_1003"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_sav_1002", "amount": 150.00, "description": "Transfer to savings"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open", "category": "Account Management", "priority": "Medium"',
                         '"account_id": "acc_chk_1001", "balance": 5080.5', '"account_id": "acc_sav_1002", "balance": 15930.0']
        ),
        Task(
                annotator="0",
                user_id="task_09",
                instruction="You are John Doe, and you have an auto loan. You are considering refinancing and would like to know what the new monthly payment would be if the interest rate was lowered to 3.5% for the remainder of the term. After checking, you decide to make an extra payment of $100 on this loan from your checking account and want to confirm the new loan balance. Use the description 'Extra auto loan payment' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                        Action(name="calculate_new_loan_payment", kwargs={"current_balance": 15670.8, "new_interest_rate": 3.5, "remaining_term_months": 18}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_auto_1004", "amount": 100.0, "description": "Extra auto loan payment"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_auto_002", "amount": -100.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                ],
                outputs=['"new_monthly_payment": 894.92', '"loan_id": "loan_auto_002", "current_balance": 15570.8']
        ),
        Task(
                annotator="0",
                user_id="task_10",
                instruction="You are Hans MÃ¼ller, a customer from Germany who has recently relocated to London, UK. You would like to update your residential address to 15 Abbey Road, London, NW8 9AY, United Kingdom, and your phone number to +44 7890 123456. After your details are updated, you want to see a list of account types the bank offers in Great British Pounds (GBP) and then open a 'Checking' account in that currency.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Hans", "last_name": "MÃ¼ller"}),
                        Action(name="update_customer_address",
                               kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "street_address": "15 Abbey Road", "city": "London", "state": "",
                                       "postal_code": "NW8 9AY", "country": "United Kingdom"}),
                        Action(name="update_customer_phone", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "new_phone_number": "+44 7890 123456"}),
                        Action(name="list_account_types_by_currency", kwargs={"currency": "GBP"}),
                        Action(name="create_account", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "account_type": "Checking", "currency": "GBP"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                ],
                outputs=['"country": "United Kingdom"', '"number": "+44 7890 123456"', '"currency": "GBP", "available_account_types": ["Checking", "Savings", "ISA"]',
                         '"account_id": "acc_generated_40", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_11",
                instruction="You are David Chen. You would like to check the status of your mortgage application and also make an extra payment of $1000 towards your active mortgage from your checking account. Use the description 'Extra mortgage payment' for the transaction. You then want to confirm the new balances of both the loan and the checking account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_loan_applications", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_e3a1b4c2-8d7e-4f6a-9c8b-2a1d5e8c7b4f"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_mort_3003", "amount": 1000.00,
                                       "description": "Extra mortgage payment"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_mort_001", "amount": -1000.00}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                ],
                outputs=['"application_status": "Approved"', '"loan_id": "loan_mort_001", "current_balance": 714240.5', '"account_id": "acc_chk_3001", "balance": 11540.25']
        ),
        Task(
                annotator="0",
                user_id="task_12",
                instruction="You are Maria Garcia, an existing customer. As a student with an annual income of $15,000, you would like to open a new credit card account in USD. You also want to check the status of your existing student loan and its current balance. Finally, please update your occupation to 'Graduate Student'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Maria", "last_name": "Garcia"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9", "account_type": "Credit Card", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_stud_004"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9", "field": "occupation", "value": "Graduate Student"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                ],
                outputs=['"account_id": "acc_generated_40", "account_type": "Credit Card", "status": "Active"',
                         '"loan_id": "loan_stud_004", "status": "In Grace Period", "current_balance": 25000.0', '"occupation": "Graduate Student"']
        ),
        Task(
                annotator="0",
                user_id="task_13",
                instruction="You are Kenji Tanaka. You want to close your savings account and transfer its entire balance to your checking account. Use the description 'Account closure'. After this is done, you need to update your marital status to 'Divorced' and remove your ex-wife, Yuki Tanaka, as a beneficiary. Finally, you would like a list of your remaining active accounts and their balances.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Kenji", "last_name": "Tanaka"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_10002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_10002", "destination_account_id": "acc_chk_10001", "amount": 15000000.00,
                                       "description": "Account closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_sav_10002", "new_status": "Closed"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3", "beneficiary_name": "Yuki Tanaka"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_2b1c9d8e-7f6a-5b4c-3d2e-1f0a9b8c7d6e"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3", "field": "marital_status", "value": "Divorced"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_10001"}),
                ],
                outputs=['"marital_status": "Divorced"', '"action": "removed"', '"account_id": "acc_chk_10001", "balance": 17500000.0']
        ),
        Task(
                annotator="0",
                user_id="task_14",
                instruction="You are Fatima Al-Fassi. You would like to get a list of all your current beneficiaries and then remove the 'Dubai International School' from that list. Afterwards, you want to transfer 1000 AED from your checking to your savings account. Use the description 'Transfer to savings'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Fatima", "last_name": "Al-Fassi"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6", "beneficiary_name": "Dubai International School"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_1c9d8e7f-6a5b-4c3d-2e1f-0a9b8c7d6e5f"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_7001", "destination_account_id": "acc_sav_7002", "amount": 1000.0, "description": "Transfer to savings"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_7001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_7002"}),
                ],
                outputs=[
                        '"beneficiary_id": "bene_1c9d8e7f-6a5b-4c3d-2e1f-0a9b8c7d6e5f", "beneficiary_name": "Dubai International School", "beneficiary_type": "Business", "relationship": "School"',
                        '"beneficiary_id": "bene_1c9d8e7f-6a5b-4c3d-2e1f-0a9b8c7d6e5f", "action": "removed"',
                        '"account_id": "acc_chk_7001", "balance": 149000.0',
                        '"account_id": "acc_sav_7002", "balance": 751000.0'
                ],
        ),
        Task(
                annotator="0",
                user_id="task_15",
                instruction="You are Liam O'Connor, and you need to request a deferral for your next business loan payment (loan_biz_005). You want to submit this request via a support ticket and then make a small principal payment of 50 EUR from your checking account to the loan account. Use the description 'Principal payment on business loan' for the transaction. The support ticket should have the content 'Requesting payment deferral for loan loan_biz_005.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Liam", "last_name": "O'Connor"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-11"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_biz_005"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-11", "category": "Loan", "priority": "Medium",
                                       "details": "Requesting payment deferral for loan loan_biz_005.", "target_entity": "Loan", "target_id": "loan_biz_005"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_12001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_12001", "destination_account_id": "acc_loan_12002", "amount": 50.00,
                                       "description": "Principal payment on business loan"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_biz_005", "amount": -50.00}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_biz_005"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"current_balance": 45100.9']
        ),
        Task(
                annotator="0",
                user_id="task_16",
                instruction="You are Oliver Williams. You would like to switch to paperless billing and set your communication preference to 'App'. You also need to report a lost debit card for your checking account and have the account frozen immediately. The resulting support ticket has the content 'Customer reported lost debit card for account acc_chk_6001.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Oliver", "last_name": "Williams"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5"}),
                        Action(name="update_customer_preferences",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5", "paperless_billing": True, "communication_channel": "App"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5", "category": "Security", "priority": "High",
                                       "details": "Customer reported lost debit card for account acc_chk_6001.", "target_entity": "Account", "target_id": "acc_chk_6001"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_6001", "new_status": "Frozen"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_6001"}),
                ],
                outputs=['"paperless_billing": true, "communication_channel": "App"', '"status": "Frozen"']
        ),
        Task(
                annotator="0",
                user_id="task_17",
                instruction="As a new customer, Brian Wilson, you want to open an account. Your date of birth is 1970-01-01, your email is brian.w@test.com, phone is 111-222-3333, and your address is 10 Beach Rd, LA, 90210, USA. Your annual income is $200,000. You would like to open a checking and a savings account, both in USD, and make initial deposits of $10,000 and $25,000 respectively. The initial deposits each have the description 'Initial deposit'. You want to confirm the final balances afterward.",
                actions=[
                        Action(name="create_customer",
                               kwargs={"first_name": "Brian", "last_name": "Wilson", "dob": "1970-01-01", "email": "brian.w@test.com",
                                       "phone": "111-222-3333", "street": "10 Beach Rd", "city": "LA", "postal_code": "90210", "country": "USA", "annual_income": 200000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Savings", "currency": "USD"}),
                        Action(name="create_deposit",
                               kwargs={"account_id": "acc_generated_40", "amount": 10000.00, "description": "Initial deposit"}),
                        Action(name="create_deposit",
                               kwargs={"account_id": "acc_generated_41", "amount": 25000.00, "description": "Initial deposit"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_41"}),
                ],
                outputs=['"account_id": "acc_generated_40", "balance": 10000.0', '"account_id": "acc_generated_41", "balance": 25000.0']
        ),
        Task(
                annotator="0",
                user_id="task_18",
                instruction="You are Aisha Khan. You would like to retrieve the transaction history for your checking account for the last two years. You've noticed a transaction you don't recognize: 'txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19' for a new phone, and you want to dispute it. Use the phrasing 'Aisha Khan is disputing unauthorized transaction txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19.' for the content of the ticket.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Aisha", "last_name": "Khan"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-12"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_13001", "days_history": 730, "current_date": "2025-07-22"}),
                        Action(name="get_transaction_details", kwargs={"transaction_id": "txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-12", "category": "Security",
                                       "priority": "High", "details": "Aisha Khan is disputing unauthorized transaction txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19.",
                                       "target_entity": "Transaction", "target_id": "txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                ],
                outputs=[
                        '"transaction_id": "txn_d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-19", "transaction_date": "2023-10-27T10:10:10Z", "amount": -15000.0, "description": "New Phone"',
                        '"ticket_id": "tkt_generated_10", "status": "Open", "category": "Security"'
                ]
        ),
        Task(
                annotator="0",
                user_id="task_19",
                instruction="You are Adetokunbo Adebayor. You would first like to cancel your recurring payment to your utility provider London Electricity Co. They are in the United Kingdom, and their bank is Barclays. Their account number is '12345678', and the sort code is '20-00-00'. Then, you want to set up a new one-time payment of 50,000 NGN from your savings account to the same beneficiary, to be executed on August 1st, 2025. Finally, you need to check the current balance of your business loan (loan_biz_009).",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Adetokunbo", "last_name": "Adebayor"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-23"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-23"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-23"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_f4n6a5m7-l2m1-n0o9-p8q7-r6s5t4u3v2w1"}),
                        Action(name="update_scheduled_payment_status", kwargs={"payment_id": "sp_f4n6a5m7-l2m1-n0o9-p8q7-r6s5t4u3v2w1", "new_status": "Cancelled"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_f4n6a5m7-l2m1-n0o9-p8q7-r6s5t4u3v2w1"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_24002"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-23", "name": "London Electricity Co.", "relationship": "Utility Provider", "account_number": "12345678",
                                        "sort_code": "20-00-00", "bank_name": "Barclays", "country": "United Kingdom"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-23", "source_account_id": "acc_sav_24002",
                                       "beneficiary_id": "bene_generated_11", "amount": 50000.00, "frequency": "One-Time", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_biz_009"}),
                ],
                outputs=['"status": "Cancelled"', '"payment_id": "sp_generated_41", "status": "Active"', '"current_balance": 7500000.0']
        ),
        Task(
                annotator="0",
                user_id="task_20",
                instruction="You are John Doe. You want to transfer $500 from your checking account to your savings account. Use the description 'Transfer to savings' for the transaction. After the transfer, you'd like to check the interest rate on your savings account. You also want to apply for a new personal loan of $2000 for a 12-month term for 'Home Improvement'. Finally, you would like to confirm the new balances of both your checking and savings accounts.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_sav_1002", "amount": 500.00,
                                       "description": "Transfer to savings"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "loan_type": "Personal", "amount": 2000.00,
                                       "term": 12, "purpose": "Home Improvement", "annual_income": 120000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                ],
                outputs=['"interest_rate": 1.25', '"application_status": "Submitted"', '"account_id": "acc_chk_1001", "balance": 4730.5',
                         '"account_id": "acc_sav_1002", "balance": 16280.0']
        ),
        Task(
                annotator="0",
                user_id="task_21",
                instruction="You are David Chen. As you have recently been promoted, you would like to update your occupation to 'Lead Surgeon' and your employer to 'Metropolis General Hospital'. After the update, you want to confirm your new personal details and then check the balance on your investment account. Finally, transfer $1,000 from your checking to your investment account with the description 'Monthly investment'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "occupation", "value": "Lead Surgeon"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "employer", "value": "Metropolis General Hospital"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_inv_3002", "amount": 1000.0, "description": "Monthly investment"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                ],
                outputs=['"occupation": "Lead Surgeon", "employer": "Metropolis General Hospital"', '"account_id": "acc_inv_3002", "balance": 150000.0', '"account_id": "acc_chk_3001", "balance": 12540.25', '"credit_score": 810']
        ),
        Task(
                annotator="0",
                user_id="task_22",
                instruction="You are Jane Smith, and you would like to know the current overdraft limit on your checking account. After checking the limit, you also want to add John Doe as a beneficiary and schedule a one-time payment of $50 to him for next week on 2025-07-28. John's account number is 1122334455. The routing number is 021001033. John is a customer at Mega Bank in the USA. Your relationship to John is that he is a friend of yours.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "name": "John Doe", "relationship": "Friend", "account_number": "1122334455",
                                       "routing_number": "021001033", "bank_name": "Mega Bank", "country": "USA"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "source_account_id": "acc_chk_2001", "beneficiary_id": "bene_generated_11",
                                       "amount": 50.00, "frequency": "One-Time", "start_date": "2025-07-28"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"overdraft_limit": 250.0', '"beneficiary_id": "bene_generated_11"', '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_23",
                instruction="You are Hans MÃ¼ller, and you need to open a new 'Business' account in EUR for your company's finances. Once the account is open, you want to apply for a 50,000 EUR business loan with a 60-month term for 'Business Expansion', noting your annual income is 95,000 EUR. You would like to confirm the loan application status after submitting it.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Hans", "last_name": "MÃ¼ller"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "account_type": "Business", "currency": "EUR"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "loan_type": "Business", "amount": 50000.00,
                                       "term": 60, "purpose": "Business Expansion", "annual_income": 95000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                ],
                outputs=['"application_id": "app_generated_21", "application_status": "Submitted"']
        ),
        Task(
                annotator="0",
                user_id="task_24",
                instruction="You are Lakshmi Narayanan. You would like to change your communication preference to SMS and opt out of paperless billing. Afterwards, you want to make a payment of 20,000 INR from your checking account to your beneficiary, 'Global ISP'. Use the description 'Payment to Global ISP' for the transaction.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Lakshmi", "last_name": "Narayanan"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-a1b2-c3d4-e5f6a1b2c3d4"}),
                        Action(name="update_customer_preferences",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-a1b2-c3d4-e5f6a1b2c3d4", "paperless_billing": False, "communication_channel": "SMS"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-a1b2-c3d4-e5f6a1b2c3d4"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "a1b2c3d4-e5f6-a1b2-c3d4-e5f6a1b2c3d4", "beneficiary_name": "Global ISP"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_5002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_5002", "destination_account_id": "IN3456789012", "amount": 20000.00,
                                       "description": "Payment to Global ISP"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_5002"}),
                ],
                outputs=['"communication_channel": "SMS", "paperless_billing": False', '"transaction_id": "txn_generated_41", "status": "Completed"']
        ),
        Task(
                annotator="0",
                user_id="task_25",
                instruction="You are Chloe Dubois, and you would like to know how many rewards points you have accumulated on your credit card account. Additionally, you want to update your address to 101 Rue de la Paix, Paris, 75002, France, remove your mother, Marie Dubois, as a beneficiary, and then check the balance of your checking account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_9002"}),
                        Action(name="update_customer_address",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "street_address": "101 Rue de la Paix", "city": "Paris", "state": "",
                                       "postal_code": "75002", "country": "France"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "beneficiary_name": "Marie Dubois"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_4f3a2b1c-9d8e-7f6a-5b4c-3d2e1f0a9b8c"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                ],
                outputs=['"rewards_points": 1250', '"street_address": "101 Rue de la Paix"', '"action": "removed"', '"account_id": "acc_chk_9001", "balance": 3200.0']
        ),
        Task(
                annotator="0",
                user_id="task_26",
                instruction="You are Isabella Rossi. Since you've lost the debit card for your checking account, you want to report this by opening a support ticket and have the account frozen immediately. The content of the ticket should read 'Lost debit card for account acc_chk_11001.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Isabella", "last_name": "Rossi"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef-10"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef-10", "category": "Security", "priority": "High",
                                       "details": "Lost debit card for account acc_chk_11001.", "target_entity": "Account", "target_id": "acc_chk_11001"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_11001", "new_status": "Frozen"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_11001"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_11001"}),
                ],
                outputs=['"account_id": "acc_chk_11001", "status": "Frozen"']
        ),
        Task(
                annotator="0",
                user_id="task_27",
                instruction="You are Anja Novak. You want to pay off part of your personal loan. You would like to transfer EUR 3000 from your checking account, and then confirm the current balance of the loan. Use the description 'Partial loan payoff for loan_pers_013' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Anja", "last_name": "Novak"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_013"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_19001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_19001", "destination_account_id": "acc_pers_19002", "amount": 3000.0,
                                       "description": "Partial loan payoff for loan_pers_013"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_19001"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_pers_013", "amount": -3000.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_013"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_19001"}),
                ],
                outputs=['"loan_id": "loan_pers_013", "current_balance": 500"']
        ),
        Task(
                annotator="0",
                user_id="task_28",
                instruction="You are Anja Novak. Having recently married, you need to update your last name to 'Horvat' and your marital status to 'Married'. You would also like to add your work phone number, +386 51 987 654, and check your checking account balance.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Anja", "last_name": "Novak"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18", "field": "last_name", "value": "Horvat"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18", "field": "marital_status", "value": "Married"}),
                        Action(name="add_customer_phone_number",
                               kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18", "phone_type": "Work", "phone_number": "+386 51 987 654"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6-18"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_19001"}),
                ],
                outputs=['"last_name": "Horvat", "marital_status": "Married"', '"number": "+386 51 987 654"', '"balance": 3500.0']
        ),
        Task(
                annotator="0",
                user_id="task_29",
                instruction="You are Gabriel Silva. You wish to open a new Investment account in USD and make an initial deposit of $50,000 from an external source, with the description 'Initial investment funding'. You would like to confirm the new account's balance and also check the balance of your checking account. Finally, please update your occupation to 'Professional Athlete'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Gabriel", "last_name": "Silva"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-17", "account_type": "Investment", "currency": "USD"}),
                        Action(name="create_deposit",
                               kwargs={"account_id": "acc_generated_40", "amount": 50000.00, "description": "Initial investment funding"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-17"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_18001"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-17", "field": "occupation", "value": "Professional Athlete"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "b2c3d4e5-f6a1-b2c3-d4e5-f6a1b2c3d4e5-17"}),
                ],
                outputs=['"account_id": "acc_generated_40", "balance": 50000.0', '"account_id": "acc_chk_18001", "balance": 500000.0', '"occupation": "Professional Athlete"']
        ),
        Task(
                annotator="0",
                user_id="task_30",
                instruction="You are John Doe. You want to cancel a one-time scheduled payment to Jane Smith and pay her immediately instead. You would like to proceed with canceling the scheduled payment and then making an immediate payment of $50 from your checking account. Use the description 'Immediate payment to Jane Smith'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_c1d9b3a2-7f6a-5b4c-3d2e-1f0a9b8c7d6e"}),
                        Action(name="update_scheduled_payment_status", kwargs={"payment_id": "sp_c1d9b3a2-7f6a-5b4c-3d2e-1f0a9b8c7d6e", "new_status": "Cancelled"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_c1d9b3a2-7f6a-5b4c-3d2e-1f0a9b8c7d6e"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "beneficiary_name": "Jane Smith"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "9876543210", "amount": 50.00,
                                       "description": "Immediate payment to Jane Smith"}),
                        Action(name="get_transaction_details", kwargs={"transaction_id": "txn_generated_41"}),
                ],
                outputs=['"status": "Completed", "amount": -50.0']
        ),
        Task(
                annotator="0",
                user_id="task_31",
                instruction="You are Jane Smith, and you would like to check the current interest rate on your savings account. You also wish to close this savings account, transferring the full balance to your checking account first. Use the description 'Account closure transfer' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="create_transaction", kwargs={"source_account_id": "acc_sav_2002", "destination_account_id": "acc_chk_2001", "amount": 22000.0,
                                                                  "description": "Account closure transfer"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_sav_2002", "new_status": "Closed"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                ],
                outputs=['"interest_rate": 1.5', '"account_id": "acc_sav_2002", "status": "Closed"', '"account_id": "acc_chk_2001", "balance": 25100.75']
        ),
        Task(
                annotator="0",
                user_id="task_32",
                instruction="You are Chloe Dubois. You have identified an unauthorized transaction (ID txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-15) on your credit card. You want to dispute this transaction, request a new card via a support ticket, and have the account frozen for security. The resulting ticket should have the content 'Unauthorized transaction txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-15. Requesting new card.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_transaction_details", kwargs={"transaction_id": "txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-15"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "category": "Security", "priority": "High",
                                       "details": "Unauthorized transaction txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-15. Requesting new card.", "target_entity": "Account",
                                       "target_id": "acc_crd_9002"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_crd_9002", "new_status": "Frozen"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_9002"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"account_id": "acc_crd_9002", "status": "Frozen"']
        ),
        Task(
                annotator="0",
                user_id="task_33",
                instruction="You are Hans MÃ¼ller, and you need to set up a monthly rent payment of 1500 EUR to your landlord, Klaus Schmidt, from your checking account. You would like these payments to start on the first day of next month. It is currently 2025-07-21.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Hans", "last_name": "MÃ¼ller"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "beneficiary_name": "Klaus Schmidt"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_8001"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1", "source_account_id": "acc_chk_8001",
                                       "beneficiary_id": "bene_9d8e7f6a-5b4c-3d2e-1f0a-9b8c7d6e5f4a", "amount": 1500.00, "frequency": "Monthly", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"payment_id": "sp_generated_41", "status": "Active", "amount": 1500.00']
        ),
        Task(
                annotator="0",
                user_id="task_34",
                instruction="You are John Doe, and you would like to check the current balance of your credit card account. Also, please transfer $200 from your checking to your savings account with the description 'Personal Transfer'. Finally, report your credit card as lost and have it frozen. The resulting support ticket should have the content 'Credit card lost, please freeze account.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_sav_1002", "amount": 200.0, "description": "Personal Transfer"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_support_ticket", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "Security", "priority": "High",
                                                                     "details": "Credit card lost, please freeze account.", "target_entity": "Account",
                                                                     "target_id": "acc_crd_1003"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_crd_1003", "new_status": "Frozen"}),
                ],
                outputs=['"account_id": "acc_crd_1003", "balance": -2500.0', '"account_id": "acc_chk_1001", "balance": 5030.5', '"account_id": "acc_sav_1002", "balance": 15980.0',
                         '"status": "Frozen"']
        ),
        Task(
                annotator="0",
                user_id="task_35",
                instruction="As a new customer, Sarah Connor, you want to open an account. Your date of birth is 1984-05-12, and your details are: email sarah.c@test.com, phone 444-555-6666, address 123 Terminator St, LA, 90210, USA. With an annual income of $95,000, you would like to open a new checking account in USD and then apply for a $30,000 auto loan for 60 months to buy a new car. Use the purpose 'New Car Purchase' for the loan application.",
                actions=[
                        Action(name="create_customer",
                               kwargs={"first_name": "Sarah", "last_name": "Connor", "dob": "1984-05-12", "email": "sarah.c@test.com",
                                       "phone": "444-555-6666", "street": "123 Terminator St", "city": "LA", "postal_code": "90210", "country": "USA", "annual_income": 95000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "customer_generated_27", "loan_type": "Auto", "amount": 30000.00, "term": 60,
                                       "purpose": "New Car Purchase", "annual_income": 95000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                ],
                outputs=['"application_id": "app_generated_21", "customer_id": "customer_generated_27", "application_status": "Submitted"']
        ),
        Task(
                annotator="0",
                user_id="task_36",
                instruction="You are Alex Petrov, and you need to temporarily pause your monthly recurring payment to your landlord, who is registred as one of your beneficiaries. After pausing it, you also want to make an immediate one-time payment of 500 RUB from your checking account to the bank account registered for same beneficiary with the description 'One-time rent payment'. Finally, you would like to know your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Alex", "last_name": "Petrov"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-13"}),
                        Action(name="update_scheduled_payment_status", kwargs={"payment_id": "sp_b5d7c6a8-b2c1-d0e9-f8g7-h6i5j4k3l2m1", "new_status": "Paused"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_b5d7c6a8-b2c1-d0e9-f8g7-h6i5j4k3l2m1"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-13"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_14001"}),
                        #Action(name="list_beneficiaries", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-13"}),
                        Action(name="get_beneficiary_details", kwargs={"beneficiary_id": "bene_9d8e7f6a-5b4c-3d2e-1f0a-9b8c7d6e5f4a"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_14001", "destination_account_id": "DE89370400440532013000", "amount": 500.0,
                                       "description": "One-time rent payment"}),
                        Action(name="get_transaction_details", kwargs={"transaction_id": "txn_generated_41"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_14001"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-13"}),
                ],
                outputs=['"payment_id": "sp_b5d7c6a8-b2c1-d0e9-f8g7-h6i5j4k3l2m1", "status": "Paused"', '"transaction_id": "txn_generated_41", "status": "Completed"',
                         '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_37",
                instruction="You are David Chen, and you would like to know the remaining principal amount on your mortgage. You would also like to update your marital status to 'Single', check your checking account balance, and enable paperless billing.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "marital_status", "value": "Single"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "paperless_billing": True}),
                ],
                outputs=['"current_balance": 715240.5', '"marital_status": "Single"', '"balance": 12540.25', '"paperless_billing": true']
        ),
        Task(
                annotator="0",
                user_id="task_38",
                instruction="You are Olivia Jones, and you want to close all of your accounts. You would like to begin by transferring the entire balance from your savings account to your checking account, then close the savings account. Use the description 'Account closure' for the transfer from the savings account. Afterwards, transfer the entire amount from the checking account to your account with another bank ('acc_external_jones_0001'). Use the description 'Account closure' for the transfer. Finally, close the checking account. Get confirmation that all accounts have been closed.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Olivia", "last_name": "Jones"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef-16"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_17002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_17002", "destination_account_id": "acc_chk_17001", "amount": 85000.00,
                                       "description": "Account closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_sav_17002", "new_status": "Closed"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_17002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_17001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_17001", "destination_account_id": "acc_external_jones_0001", "amount": 100000.00,
                                       "description": "Account closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_17001", "new_status": "Closed"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_17001"}),
                ],
                outputs=['"account_id": "acc_sav_17002", "status": "Closed"', '"account_id": "acc_chk_17001", "status": "Closed"']
        ),
        Task(
                annotator="0",
                user_id="task_39",
                instruction="You are Kenji Tanaka, and you would like to submit a request for an annual statement for your savings account. This an account management request, and the ticket should have a 'Low' priority and its content should be 'Request for annual statement for account acc_sav_10002.'. You also want to see the current balance of both of your accounts and the total balance across both accounts.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Kenji", "last_name": "Tanaka"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3", "category": "Account Management", "priority": "Low",
                                       "details": "Request for annual statement for account acc_sav_10002.", "target_entity": "Account", "target_id": "acc_sav_10002"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_10002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_10001"}),
                        Action(name="calculate_sum", kwargs={"values": ["15000000.0", "2500000.0"]}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"balance": 15000000.0', '"account_id": "acc_chk_10001", "balance": 2500000.0', '"total": 17500000.0']
        ),
        Task(
                annotator="0",
                user_id="task_40",
                instruction="You are Fatima Al-Fassi. You need to add your brother, Ahmed Al-Fassi, as a new beneficiary. His IBAN is AE1234567890123456789012 at Abu Dhabi Commercial Bank in the UAE. After he has been added, you want to schedule a one-time payment of 5000 AED from your checking account to him for December 25th of this year.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Fatima", "last_name": "Al-Fassi"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6", "name": "Ahmed Al-Fassi",
                                       "relationship": "Brother", "iban": "AE1234567890123456789012", "bank_name": "Abu Dhabi Commercial Bank", "country": "UAE"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_7001"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "c3d4e5f6-a1b2-c3d4-e5f6-a1b2c3d4e5f6", "source_account_id": "acc_chk_7001",
                                       "beneficiary_id": "bene_generated_11", "amount": 5000.00, "frequency": "One-Time", "start_date": "2025-12-25"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"payment_id": "sp_generated_41", "status": "Active", "beneficiary_id": "bene_generated_11"']
        ),
        Task(
                annotator="0",
                user_id="task_41",
                instruction="You are John Doe, and you would like to check the credit limit on your credit card account. You would also like to see your transaction history for that card for the last 60 days. Today is 2023-12-17, ignore all other dates given as today. Then transfer USD 2500 from your checking to your savings account. Use the description 'Transfer to savings'. Finally, check the balances of both of these accounts.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_crd_1003", "days_history": 60, "current_date": "2023-12-17"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "acc_sav_1002", "amount": 2500.00,
                                       "description": "Transfer to savings"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                ],
                outputs=['"credit_limit": 10000.0', '"transaction_id": "txn_6c3d6f9h-4d6b-7c2f-2d5h-8f9d2e6g7c3c"', '"transaction_id": "txn_1b2c3d4e-5f6a-7b8c-9d0e-1f2a3b4c5d6e"',
                         '"transaction_id": "txn_4c5d6e7f-8g9h-0i1j-2k3l-4m5n6o7p8q9r"', '"account_id": "acc_chk_1001", "balance": 2730.50', '"account_id": "acc_sav_1002", "balance": 18280.00']
        ),
        Task(
                annotator="0",
                user_id="task_42",
                instruction="You are John Doe. You wish to close your savings account and would like to transfer the entire current balance to your checking account before doing so. Use the description 'Account closure' for the transfer. Additionally, you want to see the overdraft limit on your checking account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_1002", "destination_account_id": "acc_chk_1001", "amount": 15780.00,
                                       "description": "Account closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_sav_1002", "new_status": "Closed"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_1001"}),
                ],
                outputs=['"account_id": "acc_sav_1002", "status": "Closed"', '"account_id": "acc_chk_1001", "balance": 21010.5', '"overdraft_limit": 500.0']
        ),
        Task(
                annotator="0",
                user_id="task_43",
                instruction="You are Jane Smith. You have received a suspicious email claiming to be from the bank and want to report this phishing attempt by creating a support ticket. You will use the phrasing 'I have received a phishing email asking for account details.' After creating the ticket, you want to check the balance of your savings account. Finally, you would like to remove your beneficiary, John Doe.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Security", "priority": "High",
                                       "details": "I have received a phishing email asking for account details.", "target_entity": "Customer",
                                       "target_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "beneficiary_name": "John Doe"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_7c6d5e4f-3a2b-1c9d-8e7f-6a5b4c3d2e1f"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open", "category": "Security"', '"balance": 22000.0', '"action": "removed"']
        ),
        Task(
                annotator="0",
                user_id="task_44",
                instruction="You are Chloe Dubois, and you want to get a detailed transaction history for your credit card account for the last 60 days. Today is 2023-12-06, ignore all other dates given as today.. You also want to check the current balance of your checking account. After reviewing your accounts, you want to report your credit card as lost by creating a support ticket with the details 'Credit card reported lost.' and have the account frozen as a precaution. Finally, you would like to update your occupation to 'Head Pastry Chef'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_crd_9002", "days_history": 60, "current_date": "2023-12-06"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "category": "Security", "priority": "High", "details": "Credit card reported lost.",
                                       "target_entity": "Account", "target_id": "acc_crd_9002"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_crd_9002", "new_status": "Frozen"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "field": "occupation", "value": "Head Pastry Chef"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                ],
                outputs=['"transaction_id": "txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-15", "amount": -85.0', '"account_id": "acc_chk_9001", "balance": 3200.0',
                         '"ticket_id": "tkt_generated_10", "status": "Open"', '"status": "Frozen"', '"occupation": "Head Pastry Chef"']
        ),
        Task(
                annotator="0",
                user_id="task_45",
                instruction="You are John Doe. You would like to get a payoff quote for your auto loan. After receiving the quote, you want to pay the remaining balance in full from your savings account and have the loan status updated. Use the description 'Auto loan payoff' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_1002", "destination_account_id": "acc_auto_1004", "amount": 15670.80,
                                       "description": "Auto loan payoff"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_auto_002", "amount": -15670.80}),
                        Action(name="update_loan_status", kwargs={"loan_id": "loan_auto_002", "new_status": "Paid Off"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                ],
                outputs=['"loan_id": "loan_auto_002", "status": "Paid Off", "current_balance": 0.0']
        ),
        Task(
                annotator="0",
                user_id="task_46",
                instruction="You are John Doe. As you are expecting your monthly salary, you would like to check if there have been any deposits over $1000 into your savings account within the last 7 days. Today is 2023-11-02, ignore all other dates given as today.. You would also like to know the current balance of your checking account. Finally, please enable paperless billing for your account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_sav_1002", "days_history": 7, "current_date": "2023-11-02"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "paperless_billing": True}),
                ],
                outputs=['"transaction_id": "txn_7a2b5e8g-3c5a-6b1e-1c4g-7e8c1d5f6b2b", "amount": 1500.0, "description": "Monthly Salary"',
                         '"account_id": "acc_chk_1001", "balance": 5230.5', '"paperless_billing": true']
        ),
        Task(
                annotator="0",
                user_id="task_47",
                instruction="You are David Chen, and you would like a list of all your active loans with the bank. Also, please report a lost debit card for your checking account and have it frozen. The ticket's content should be 'Lost debit card reported for checking account.'. Afterwards, please confirm the account's new status and balance.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="create_support_ticket", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "category": "Security", "priority": "High",
                                                                     "details": "Lost debit card reported for checking account.", "target_entity": "Account",
                                                                     "target_id": "acc_chk_3001"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_3001", "new_status": "Frozen"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_3001"}),
                ],
                outputs=['"loan_id": "loan_mort_001", "loan_type": "Mortgage", "current_balance": 715240.5',
                         '"account_id": "acc_chk_3001", "status": "Frozen", "balance": 12540.25']
        ),
        Task(
                annotator="0",
                user_id="task_48",
                instruction="You are Jane Smith. Since you recently married John Doe, you would like to update your last name to 'Doe' and your marital status to 'Married'. Afterwards, please check the interest rate on your savings account and then transfer $50 from checking to savings with the description 'Wedding Gift Money'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "field": "last_name", "value": "Doe"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "field": "marital_status", "value": "Married"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_2001", "destination_account_id": "acc_sav_2002", "amount": 50.0, "description": "Wedding Gift Money"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                ],
                outputs=['"last_name": "Doe", "marital_status": "Married"', '"interest_rate": 1.5', '"balance": 22050.0']
        ),
        Task(
                annotator="0",
                user_id="task_49",
                instruction="You are Hans MÃ¼ller. You previously submitted a request to cancel a scheduled payment and would like to check the status of the support ticket with ID tkt_c1d0e9f8-a9b8-c7d6-e5f4-a3b2c1d0e9f8. You would also like to see the balances for all your accounts. After checking, you want to make an extra payment of 200 EUR on your mortgage from your checking account with the description 'Extra mortgage payment'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Hans", "last_name": "MÃ¼ller"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_c1d0e9f8-a9b8-c7d6-e5f4-a3b2c1d0e9f8"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_8001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_8002"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1"}),
                        Action(name="create_transaction", kwargs={"source_account_id": "acc_chk_8001", "destination_account_id": "acc_mort_8003", "amount": 200.0, "description": "Extra mortgage payment"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_8001"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_mort_014", "amount": -200.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_014"}),
                ],
                outputs=['"ticket_id": "tkt_c1d0e9f8-a9b8-c7d6-e5f4-a3b2c1d0e9f8", "status": "Resolved"', '"account_id": "acc_chk_8001", "balance": 7800.5', '"account_id": "acc_sav_8002", "balance": 125000.0', '"current_balance": 179800.0']
        ),
        Task(
                annotator="0",
                user_id="task_50",
                instruction="You are Jane Smith, and you want to start saving for a vacation. You would like to open a new savings account in CAD and then set up a recurring monthly transfer of 250 CAD from your checking account to this new account, starting on the first of next month.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "account_type": "Savings", "currency": "CAD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="create_scheduled_internal_transfer",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "source_account_id": "acc_chk_2001",
                                       "destination_account_id": "acc_generated_40", "amount": 250.00, "frequency": "Monthly", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"account_id": "acc_generated_40", "status": "Active"', '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_51",
                instruction="You are John Doe, and you need to send 100 USD from your checking account to your beneficiary, Jane Smith with the description 'Payment to Jane Smith'. After the payment, please confirm the new balance of your checking and savings accounts. Also confirm the total balance of all your accounts. You also want to check your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "beneficiary_name": "Jane Smith"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_1001", "destination_account_id": "9876543210", "amount": 100.00,
                                       "description": "Payment to Jane Smith"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="calculate_sum", kwargs={"values": ["5130.5", "15780.0", "-2500.0"]}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"account_id": "acc_chk_1001", "balance": 5130.5', '"account_id": "acc_sav_1002", "balance": 15780.0', '"account_id": "acc_crd_1003", "balance": -2500', '"total": 18410.5', '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_52",
                instruction="You are Maria Garcia. Having recently applied for an auto loan, you now want to cancel the application. You would also like to check the balance of your checking account and update your employer to 'University Library'. Afterwards, please check your financial profile and list your beneficiaries.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Maria", "last_name": "Garcia"}),
                        Action(name="get_customer_loan_applications", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="update_loan_application_status", kwargs={"application_id": "app_d3e4f5a6-b7c8-d9e0-f1a2-b3c4d5e6f7g8", "new_status": "Withdrawn"}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_d3e4f5a6-b7c8-d9e0-f1a2-b3c4d5e6f7g8"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_4001"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9", "field": "employer", "value": "University Library"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                ],
                outputs=['"application_id": "app_d3e4f5a6-b7c8-d9e0-f1a2-b3c4d5e6f7g8", "application_status": "Withdrawn"', '"account_id": "acc_chk_4001", "balance": 1200.5',
                         '"employer": "University Library"', '"credit_score": 690', '[]']
        ),
        Task(
                annotator="0",
                user_id="task_53",
                instruction="You are David Chen. You need to update your employment status to 'Self-Employed' and your employer to 'Private Practice', and you would like to confirm your updated personal information. You'd also like to see the current balance of your mortgage.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "occupation", "value": "Self-Employed"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "employer", "value": "Private Practice"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                ],
                outputs=['"occupation": "Self-Employed", "employer": "Private Practice"', '"current_balance": 715240.5']
        ),
        Task(
                annotator="0",
                user_id="task_54",
                instruction="You are Kenji Tanaka. You would like to open a new Investment account in JPY. Once the account is created, you want to deposit 5,000,000 JPY from an external source. Use the description 'Initial investment deposit' for the transfer. You also want to apply for a personal loan of 1,000,000 JPY for 24 months for 'Travel', noting your annual income is 12,000,000 JPY.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Kenji", "last_name": "Tanaka"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3", "account_type": "Investment", "currency": "JPY"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_deposit",
                               kwargs={"account_id": "acc_generated_40", "amount": 5000000.00, "description": "Initial investment deposit"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3", "loan_type": "Personal", "amount": 1000000.00,
                                       "term": 24, "purpose": "Travel", "annual_income": 12000000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                ],
                outputs=['"account_id": "acc_generated_40", "balance": 5000000.0', '"application_status": "Submitted"']
        ),
        Task(
                annotator="0",
                user_id="task_55",
                instruction="You are John Doe, and you would like to get a list of all your active accounts with the bank. You would also like to see the current balance of your auto loan, and then update your employer to 'NextGen Solutions'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "field": "employer", "value": "NextGen Solutions"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"account_id": "acc_chk_1001"', '"account_id": "acc_sav_1002"', '"account_id": "acc_crd_1003"', '"current_balance": 15670.8',
                         '"employer": "NextGen Solutions"']
        ),
        Task(
                annotator="0",
                user_id="task_56",
                instruction="You are Jane Smith, and you want to request a monthly statement for your checking account by submitting a support ticket. This is an account management request. The ticket should have 'Low' priority and its content should be 'Request for monthly statement for account acc_chk_2001.'. You also want to see the account's current overdraft limit.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Account Management", "priority": "Low",
                                       "details": "Request for monthly statement for account acc_chk_2001.", "target_entity": "Account", "target_id": "acc_chk_2001"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_2001"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"overdraft_limit": 250.0']
        ),
        Task(
                annotator="0",
                user_id="task_57",
                instruction="You are David Chen. You wish to add your daughter, Sarah Chen, as a beneficiary. Her account details are IBAN US1234567890123456789012 at Bank of Metropolis, USA. After she is added, you want to transfer $200 from your checking account to her for her birthday. Use the description 'Birthday gift for Sarah' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="add_beneficiary", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "name": "Sarah Chen",
                                                               "relationship": "Daughter", "iban": "US1234567890123456789012", "bank_name": "Bank of Metropolis",
                                                               "country": "USA"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "US1234567890123456789012", "amount": 200.00,
                                       "description": "Birthday gift for Sarah"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                ],
                outputs=['"beneficiary_id": "bene_generated_11"', '"account_id": "acc_chk_3001", "balance": 12340.25']
        ),
        Task(
                annotator="0",
                user_id="task_58",
                instruction="You are John Doe, and you would like to know the current balance and overdraft limit for your checking account. You also want to know the current balance of your savings account and your credit score. Finally, please add a work phone number, 310-555-1234, to your profile.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="add_customer_phone_number",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "phone_type": "Work", "phone_number": "310-555-1234", "is_primary": False}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"balance": "5230.50"', '"overdraft_limit": "500.00"', '"account_id": "acc_sav_1002", "balance": 15780.0', '"credit_score": 780',
                         '"type": "Work", "number": "310-555-1234"']
        ),
        Task(
                annotator="0",
                user_id="task_59",
                instruction="You are Jane Smith. You want to change the frequency of your monthly scheduled payment to John Doe to 'Bi-Weekly'. You would like to submit a support ticket to make this change. Use the phrasing 'Change frequency of payment sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f to Bi-Weekly.' After that, please check your current checking account balance.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Scheduled Payment", "priority": "Medium",
                                       "details": "Change frequency of payment sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f to Bi-Weekly.", "target_entity": "ScheduledPayment",
                                       "target_id": "sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"balance": 3100.75']
        ),
        Task(
                annotator="0",
                user_id="task_60",
                instruction="You are Chloe Dubois. You have a delinquent personal loan (loan_pers_008) with a balance of 5250.75. You want to pay off EUR 2500 from your checking account to get back into good standing. Use the description 'Payment for delinquent loan'. After payment, you'd like to have the loan status updated to 'Active' and then confirm the new loan balance. Afterwards, check the current balance of your checking account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_008"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_9001", "destination_account_id": "acc_pers_9003", "amount": 2500,
                                       "description": "Payment for delinquent loan"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_pers_008", "amount": -2500}),
                        Action(name="update_loan_status", kwargs={"loan_id": "loan_pers_008", "new_status": "Active"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_008"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                ],
                outputs=['"loan_id": "loan_pers_008", "status": "Active", "current_balance": 2750.75', '"account_id": "acc_chk_9001", "balance",: 700']
        ),
        Task(
                annotator="0",
                user_id="task_61",
                instruction="You are Jane Smith. You need to add your work phone number, 098-765-4741, to your profile. You do not want to set it as your primary number. You also want to check the balance of your checking account and your credit score. Finally, you would like to set up a recurring weekly transfer of 25 CAD from your checking to your savings account, starting next week on 2025-07-28.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="add_customer_phone_number",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "phone_type": "Work", "phone_number": "098-765-4741", "is_primary": False}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_scheduled_internal_transfer",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "source_account_id": "acc_chk_2001", "destination_account_id": "acc_sav_2002",
                                       "amount": 25.0, "frequency": "Weekly", "start_date": "2025-07-28"}),
                ],
                outputs=['"type": "Work", "number": "098-765-4741"', '"account_id": "acc_chk_2001", "balance": 3100.75', '"credit_score": 820',
                         '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_62",
                instruction="You are Maria Garcia, and you want to check the status of your student loan. You also want to see a list of available account types in USD and check your checking account balance. Finally, you would like to cancel your weekly scheduled payment of USD 25.00.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Maria", "last_name": "Garcia"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_stud_004"}),
                        Action(name="list_account_types_by_currency", kwargs={"currency": "USD"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_4001"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "f4g5h6i7-j8k9-l0m1-n2o3-p4q5r6s7t8u9"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_e2g4b3f5-e9f8-g7h6-i5j4-k3l2m1n0o9p5"}),
                        Action(name="update_scheduled_payment_status", kwargs={"payment_id": "sp_e2g4b3f5-e9f8-g7h6-i5j4-k3l2m1n0o9p5", "new_status": "Cancelled"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_e2g4b3f5-e9f8-g7h6-i5j4-k3l2m1n0o9p5"}),
                ],
                outputs=['"loan_id": "loan_stud_004", "status": "In Grace Period"', '"available_account_types": ["Checking", "Savings", "Credit Card", "Investment"]',
                         '"balance": 1200.5', '"payment_id": "sp_e2g4b3f5-e9f8-g7h6-i5j4-k3l2m1n0o9p5", "status": "Cancelled"']
        ),
        Task(
                annotator="0",
                user_id="task_63",
                instruction="You are John Doe. Believing someone may have access to your account, you want to freeze all of your accounts and create a support ticket to report potential identity theft. The content of the ticket should read 'Customer suspects identity theft and has requested all accounts to be frozen.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_1001", "new_status": "Frozen"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_sav_1002", "new_status": "Frozen"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_crd_1003", "new_status": "Frozen"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "Security", "priority": "High",
                                       "details": "Customer suspects identity theft and has requested all accounts to be frozen.", "target_entity": "Customer",
                                       "target_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_1003"}),
                ],
                outputs=['"status": "Frozen"', '"ticket_id": "tkt_generated_10", "status": "Open"']
        ),
        Task(
                annotator="0",
                user_id="task_64",
                instruction="You are David Chen, and you want to make a principal-only payment of $5,000 on your mortgage from your checking account with the description 'Principal-only mortgage payment'. Also, check the balance of your investment account and your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_mort_3003", "amount": 5000.00,
                                       "description": "Principal-only mortgage payment"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_mort_001", "amount": -5000.00}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                ],
                outputs=['"current_balance": 710240.5', '"account_id": "acc_inv_3002", "balance": 150000.0', '"credit_score": 810']
        ),
        Task(
                annotator="0",
                user_id="task_65",
                instruction="You are Jane Smith, and you would like to remove your beneficiary, John Doe. After this, you would like to see the transaction history for your checking account for the last 90 days. Today is 2023-11-15, ignore all other dates given as today.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "beneficiary_name": "John Doe"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_7c6d5e4f-3a2b-1c9d-8e7f-6a5b4c3d2e1f"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_2001", "days_history": 90, "current_date": "2023-11-15"}),
                ],
                outputs=['"beneficiary_id": "bene_7c6d5e4f-3a2b-1c9d-8e7f-6a5b4c3d2e1f", "action": "removed"', '"transaction_id": "txn_5d4e7g1i-5e7c-8d3g-3e6i-9g1e3f7h8d4d"',
                         '"transaction_id": "txn_4e5f8h2j-6f8d-9e4h-4f7j-1h2f4g8i9e5e"', '"transaction_id": "txn_0a1b2c3d-4e5f-6a7b-8c9d-0e1f2a3b4c5d"',
                         '"transaction_id": "txn_8c9d0e1f-2a3b-4c5d-6e7f-8g9h0i1j2k3l"']
        ),
        Task(
                annotator="0",
                user_id="task_66",
                instruction="You are John Doe. To start building your savings, you would like to set up a weekly transfer of $75 from your checking account to your savings account, starting next Monday. You would also like to confirm the current credit limit on your credit card and check your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_scheduled_internal_transfer",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "source_account_id": "acc_chk_1001",
                                       "destination_account_id": "acc_sav_1002", "amount": 75.00, "frequency": "Weekly", "start_date": "2025-07-28"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"payment_id": "sp_generated_41", "status": "Active", "amount": 75.00', '"credit_limit": 10000.0', '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_67",
                instruction="You are Chloe Dubois. You would like to request an increase of your credit card limit to 5,000 EUR, noting your annual income is 45,000 EUR. You wish to submit this request as a support ticket. The ticket's content should be 'Requesting credit limit increase to 5000 EUR. Current limit: 3000 EUR.'. Also, you want to pay off 100 EUR of your delinquent personal loan from your checking account. Use the description 'Loan payment' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_9002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "category": "Account Management",
                                       "priority": "Medium", "details": "Requesting credit limit increase to 5000 EUR. Current limit: 3000 EUR.", "target_entity": "Account",
                                       "target_id": "acc_crd_9002"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_008"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_9001", "destination_account_id": "acc_pers_9003", "amount": 100.0, "description": "Loan payment"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_9001"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_pers_008", "amount": -100.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_008"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"current_balance": 5150.75']
        ),
        Task(
                annotator="0",
                user_id="task_68",
                instruction="You are David Chen, and you want to find out the combined total of all your account balances. After that, you'd like to update your occupation to 'Head of Surgery', confirm the change, and check your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                        Action(name="calculate_sum", kwargs={"values": ["12540.25", "150000.00"]}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "field": "occupation", "value": "Head of Surgery"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                ],
                outputs=['"total": 162540.25', '"occupation": "Head of Surgery"', '"credit_score": 810']
        ),
        Task(
                annotator="0",
                user_id="task_69",
                instruction="You are Jane Smith. You want to change your security question and would like to submit a support ticket to update it to 'What is the name of your first teacher?'. It should have the content 'Request to update the security question to 'What is the name of your first teacher?''. Also, check the balance of your checking account, your savings account, and your current credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Security", "priority": "High",
                                       "details": "Request to update the security question to 'What is the name of your first teacher?'", "target_entity": "Customer", "target_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="update_customer_security_question", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "security_question": "What is the name of your first teacher?"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"balance": 3100.75', '"account_id": "acc_sav_2002", "balance": 22000.0', '"credit_score": 820']
        ),
        Task(
                annotator="0",
                user_id="task_70",
                instruction="You are John Doe. You want to open a new savings account in USD. After it's opened, you'd like to deposit $2000 from an external source, then verify the balance of the new account. Use the description 'Initial savings deposit' for this. Finally, you want to set up a monthly transfer of $150 from your checking account to this new savings account, starting on the 15th of August. Verify that the monthly transfer has been created.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "account_type": "Savings", "currency": "USD"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="create_deposit",
                               kwargs={"account_id": "acc_generated_40", "amount": 2000.00, "description": "Initial savings deposit"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_scheduled_internal_transfer",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "source_account_id": "acc_chk_1001",
                                       "destination_account_id": "acc_generated_40", "amount": 150.00, "frequency": "Monthly", "start_date": "2025-08-15"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                ],
                outputs=['"account_id": "acc_generated_40", "balance": 2000.0', '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_71",
                instruction="You are John Doe, and you want to request an annual statement for your credit card account. You would like to submit this as a low-priority support ticket with the details 'Request for annual statement for credit card acc_crd_1003.' This is an account management request. After submitting, you want to check the reward points on the card, the card's current balance and your credit score. Finally, you want to get the total balance of all of your accounts.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "Account Management", "priority": "Low",
                                       "details": "Request for annual statement for credit card acc_crd_1003.", "target_entity": "Account", "target_id": "acc_crd_1003"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_1003"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="calculate_sum", kwargs={"values": ["-2500.0", "5230.5", "15780.0"]}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open", "priority": "Low"', '"rewards_points": 5200', '"balance": -2500.0', '"total": 18510.5', '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_72",
                instruction="You are Jane Smith. You need to check the status of a support ticket you filed earlier with the ID tkt_e9f8c7d6-c7d6-e5f4-a3b2-c1d0e9f8g7h6. Also, please list all of your beneficiaries and check your checking account balance. Afterwards, please update your marital status to 'Divorced'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_e9f8c7d6-c7d6-e5f4-a3b2-c1d0e9f8g7h6"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "field": "marital_status", "value": "Divorced"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                ],
                outputs=['"ticket_id": "tkt_e9f8c7d6-c7d6-e5f4-a3b2-c1d0e9f8g7h6", "status": "Open"',
                         '"beneficiary_id": "bene_7c6d5e4f-3a2b-1c9d-8e7f-6a5b4c3d2e1f", "beneficiary_name": "John Doe"', '"balance": 3100.75', '"marital_status": "Divorced"']
        ),
        Task(
                annotator="0",
                user_id="task_73",
                instruction="You are David Chen. You want to open a new checking account in USD for daily expenses. After it's created, you'd like to transfer $2,500 from your investment account to seed it. Use the description 'Initial funding for new checking account' for the transfer. You would then like to confirm the final balances of both accounts.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_inv_3002", "destination_account_id": "acc_generated_40", "amount": 2500.00,
                                       "description": "Initial funding for new checking account"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                ],
                outputs=['"account_id": "acc_generated_40", "balance": 2500.0', '"account_id": "acc_inv_3002", "balance": 147500.0']
        ),
        Task(
                annotator="0",
                user_id="task_74",
                instruction="You are Chloe Dubois, and you want to cancel your pending loan application for emergency medical expenses. You also want to check the balance of your credit card and update your marital status to 'Engaged'. Finally, please enable paperless billing.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="get_customer_loan_applications", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_e4f5a6b7-c8d9-e0f1-a2b3-c4d5e6f7g8h9"}),
                        Action(name="update_loan_application_status", kwargs={"application_id": "app_e4f5a6b7-c8d9-e0f1-a2b3-c4d5e6f7g8h9", "new_status": "Withdrawn"}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_e4f5a6b7-c8d9-e0f1-a2b3-c4d5e6f7g8h9"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_9002"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "field": "marital_status", "value": "Engaged"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "paperless_billing": True}),
                        Action(name="get_customer_details", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                ],
                outputs=['"application_id": "app_e4f5a6b7-c8d9-e0f1-a2b3-c4d5e6f7g8h9", "application_status": "Withdrawn"', '"balance": -500.0', '"marital_status": "Engaged"',
                         '"paperless_billing": true']
        ),
        Task(
                annotator="0",
                user_id="task_75",
                instruction="You are John Doe, and you would like a list of all beneficiaries associated with your profile. After seeing the list, you'd like to check the balance on your savings account and update your communication preference to 'SMS'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "communication_channel": "SMS"}),
                ],
                outputs=['"beneficiary_name": "Jane Smith"', '"beneficiary_name": "Anytown Utility Services"', '"balance": 15780.0', '"communication_channel": "SMS"']
        ),
        Task(
                annotator="0",
                user_id="task_76",
                instruction="You are Jane Smith. You want to apply for a $350,000 mortgage for a 30-year term (360 months) to purchase a new home ('New Home Purchase'), noting your annual income is $85,000. After submitting the application, you also want to set up a recurring monthly transfer of $50 from your checking account to your savings account to build an emergency fund, starting at the first day of next month.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "loan_type": "Mortgage", "amount": 350000.00,
                                       "term": 360, "purpose": "New Home Purchase", "annual_income": 85000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="create_scheduled_internal_transfer",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "source_account_id": "acc_chk_2001",
                                       "destination_account_id": "acc_sav_2002", "amount": 50.00, "frequency": "Monthly", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"application_status": "Submitted"', '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_77",
                instruction="You are Alex Petrov. You need to make an extra payment of 2,000 RUB on your car loan (loan_auto_007) from your savings account. Use the description 'Extra payment on auto loan' for the payment. You would also like to confirm the new balances of both the loan and the savings account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Alex", "last_name": "Petrov"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d4e5f6a1-b2c3-d4e5-f6a1-b2c3d4e5f6a1-13"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_007"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_14002"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_sav_14002", "destination_account_id": "acc_auto_14003", "amount": 2000.00,
                                       "description": "Extra payment on auto loan"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_auto_007", "amount": -2000.00}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_007"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_14002"}),
                ],
                outputs=['"loan_id": "loan_auto_007", "current_balance": 1198000.0', '"account_id": "acc_sav_14002", "balance": 2998000.0']
        ),
        Task(
                annotator="0",
                user_id="task_78",
                instruction="You are John Doe, and you would like to check the status of your auto loan. Additionally, you want to see the last 30 days of transactions for your checking account and then check your credit score. Today is 2023-11-15, ignore all other dates given as today. Finally, remove Jane Smith as one of your beneficiaries. Verify that she has been removed.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_1001", "days_history": 30, "current_date": "2023-11-15"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "beneficiary_name": "Jane Smith"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_9a8b7c6d-5e4f-3a2b-1c9d-8e7f6a5b4c3d"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"loan_id": "loan_auto_002", "status": "Active"', '"transaction_id": "txn_9c2a3b7e-1a3e-4b8c-8a2e-5c6a8b3d4e9f"',
                         '"transaction_id": "txn_8b1c4d6f-2b4f-5a9d-9b3f-6d7b9c4e5a1a"', '"transaction_id": "txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-21"',
                         '"transaction_id": "txn_7b8c9d0e-1f2a-3b4c-5d6e-7f8g9h0i1j2k"', '"credit_score": 780', '"beneficiary_id": "bene_8b7c6d5e-4f3a-2b1c-9d8e-7f6a5b4c3d2e"']
        ),
        Task(
                annotator="0",
                user_id="task_79",
                instruction="You are Jane Smith. You want to change the source account for your recurring payment to John Doe from your checking to your savings account, and you'd like to submit a support ticket to request this change. The phrasing for the ticket should be 'Change source account for payment sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f to acc_sav_2002.'",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Scheduled Payment", "priority": "Medium",
                                       "details": "Change source account for payment sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f to acc_sav_2002.", "target_entity": "ScheduledPayment",
                                       "target_id": "sp_d9b3a2c1-6a5b-4c3d-2e1f-0a9b8c7d6e5f"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"']
        ),
        Task(
                annotator="0",
                user_id="task_80",
                instruction="As a new customer, Kyle Reese, you want to open an account. Your date of birth is 1980-03-15, and your details are: email k.reese@test.com, phone 777-888-9999, address 456 Future St, LA, 90210, USA. With an annual income of $70,000, you would like to open a checking account in USD. You then want to add a beneficiary named 'Sarah Connor' (IBAN US9876543210987654321098 at 'Future Bank', USA) and schedule a one-time payment of $500 to her for two weeks from today. Your relationship to Sarah is that she is an acquaintance of yours.",
                actions=[
                        Action(name="create_customer",
                               kwargs={"first_name": "Kyle", "last_name": "Reese", "dob": "1980-03-15", "email": "k.reese@test.com",
                                       "phone": "777-888-9999", "street": "456 Future St", "city": "LA", "postal_code": "90210", "country": "USA", "annual_income": 70000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "customer_generated_27", "name": "Sarah Connor", "relationship": "Acquaintance",
                                       "iban": "US9876543210987654321098", "bank_name": "Future Bank", "country": "USA"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "customer_generated_27", "source_account_id": "acc_generated_40",
                                       "beneficiary_id": "bene_generated_11", "amount": 500.00, "frequency": "One-Time", "start_date": "2025-08-05"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"customer_id": "customer_generated_27"', '"account_id": "acc_generated_40"', '"beneficiary_id": "bene_generated_11"',
                         '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_81",
                instruction="You are John Doe. Following a marriage, you want to change your last name to 'Smith' and would like to have your personal information updated to reflect your new marital status. You also want to check your credit score and see your checking account balance.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "field": "last_name", "value": "Smith"}),
                        Action(name="update_customer_personal_info", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "field": "marital_status", "value": "Married"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                ],
                outputs=['"last_name": "Smith"', '"marital_status": "Married"', '"credit_score": 780', '"balance": 5230.5']
        ),
        Task(
                annotator="0",
                user_id="task_82",
                instruction="You are David Chen, and you would like to know the interest rate on your mortgage. You would also like to make an extra payment of $500 from your checking account with the description 'Extra mortgage payment' and confirm the new loan balance and your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_mort_3003", "amount": 500.0, "description": "Extra mortgage payment"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_mort_001", "amount": -500.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                ],
                outputs=['"interest_rate": 3.25', '"current_balance": 714740.5', '"credit_score": 810']
        ),
        Task(
                annotator="0",
                user_id="task_83",
                instruction="As a new business owner, Alice Wonderland, you want to open an account. Your date of birth is 1990-05-25, and your details are: email alice.w@example.com, phone 222-333-4444, address 1 Wonderland Lane, Fantasy, CA, 90210, USA. Your business has an annual income of $150,000. You need to open a business checking account in USD and then apply for a $50,000 business loan for a 5-year (60 months) term for an 'equipment purchase'.",
                actions=[
                        Action(name="create_customer",
                               kwargs={"first_name": "Alice", "last_name": "Wonderland", "dob": "1990-05-25", "email": "alice.w@example.com",
                                       "phone": "222-333-4444", "street": "1 Wonderland Lane", "city": "Fantasy", "postal_code": "90210", "country": "USA",
                                       "annual_income": 150000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "customer_generated_27", "loan_type": "Business", "amount": 50000.00, "term": 60,
                                       "purpose": "Equipment Purchase", "annual_income": 150000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                ],
                outputs=['"customer_id": "customer_generated_27"', '"account_id": "acc_generated_40"', '"application_id": "app_generated_21", "application_status": "Submitted"']
        ),
        Task(
                annotator="0",
                user_id="task_84",
                instruction="You are Jane Smith. Having received a scam call attempting to get your banking details, you want to report this incident. As a precaution, you also want to request an update to your security question to 'What is your favorite childhood book?'. The content of the resulting ticket should be 'Customer reported a scam call. As a precaution, they request to update their security question to 'What is your favorite childhood book?'.'. Finally, check your savings account balance and enable paperless billing.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "category": "Security", "priority": "High",
                                       "details": "Customer reported a scam call. As a precaution, they request to update their security question to 'What is your favorite childhood book?'.",
                                       "target_entity": "Customer", "target_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="update_customer_security_question", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "security_question": "What is your favorite childhood book?"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "paperless_billing": True}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"balance": 22000.0', '"security_question":"What is your favorite childhood book?"', '"paperless_billing": true']
        ),
        Task(
                annotator="0",
                user_id="task_85",
                instruction="You are David Chen. Due to unforeseen circumstances, you need to request a deferral for your next mortgage payment and want to submit a support ticket for this request. Its content should be 'Requesting to defer the next payment for mortgage loan_mort_001.'. Also, check the balance of your checking account, your current credit score, your investment account balance, and list your beneficiaries.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "category": "Loan", "priority": "Medium",
                                       "details": "Requesting to defer the next payment for mortgage loan_mort_001.", "target_entity": "Loan", "target_id": "loan_mort_001"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open", "category": "Loan"', '"balance": 12540.25', '"credit_score": 810', '"account_id": "acc_inv_3002", "balance": 150000.0', '"beneficiary_name": "Metropolis Power & Light"']
        ),
        Task(
                annotator="0",
                user_id="task_86",
                instruction="You are John Doe, and you need to add a home phone number, 111-555-9999, to your contact information. After adding it, you want to see a list of all your scheduled payments.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="add_customer_phone_number",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "phone_type": "Home", "phone_number": "111-555-9999", "is_primary": False}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_scheduled_payments", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"type": "Home", "number": "111-555-9999"', '"payment_id": "sp_b3a2c1d9-8e7f-6a5b-4c3d-2e1f0a9b8c7d"',
                         '"payment_id": "sp_c1d9b3a2-7f6a-5b4c-3d2e-1f0a9b8c7d6e"', '"payment_id": "sp_d9b3a2c1-f0a9-b8c7-d6e5-f4a3b2c1d0e9"',
                         '"payment_id": "sp_f4n6a5m7-l2m1-n0o9-p8q7-r6s5t4u3v2w2"']
        ),
        Task(
                annotator="0",
                user_id="task_87",
                instruction="You are John Doe. You want to change the amount of your recurring payment to Anytown Utility Services from 125.50 to 135.00 and would like to submit a support ticket for this change with the details 'Change amount for payment sp_b3a2c1d9-8e7f-6a5b-4c3d-2e1f0a9b8c7d to 135.00.'. Also, please check the current balance of your checking and savings account, and your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_b3a2c1d9-8e7f-6a5b-4c3d-2e1f0a9b8c7d"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "Scheduled Payment", "priority": "Medium",
                                       "details": "Change amount for payment sp_b3a2c1d9-8e7f-6a5b-4c3d-2e1f0a9b8c7d to 135.00.", "target_entity": "ScheduledPayment",
                                       "target_id": "sp_b3a2c1d9-8e7f-6a5b-4c3d-2e1f0a9b8c7d"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"account_id": "acc_chk_1001", "balance": 5230.5', '"account_id": "acc_sav_1002", "balance": 15780.0', '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_88",
                instruction="You are Jane Smith. While your previous personal loan (loan_pers_003) is paid off, you are interested in refinancing. You want to apply for a new personal loan of $12,000 for a 36-month term for 'Home Improvement', noting your annual income is $85,000. You also want to see the balance of your savings account and then enable paperless billing. Finally, you would like to see the total balance of your checking and savings account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_003"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "loan_type": "Personal", "amount": 12000.00,
                                       "term": 36, "purpose": "Home Improvement", "annual_income": 85000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "paperless_billing": True}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="calculate_sum", kwargs={"values": ["22000.0", "3100.75"]}),
                ],
                outputs=['"loan_id": "loan_pers_003", "status": "Paid Off"', '"application_id": "app_generated_21", "application_status": "Submitted"', '"balance": 22000.0','"paperless_billing": true', '"total": 25100.75']
        ),
        Task(
                annotator="0",
                user_id="task_89",
                instruction="You are David Chen. You need to convert your checking account from USD to EUR and would like to file a support ticket for this request. The ticket's content should be 'Request to convert base currency of account acc_chk_3001 from USD to EUR.'. Also, please confirm the current balance of the account and your investment account.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_support_ticket",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "category": "Account Management",
                                       "priority": "Medium", "details": "Request to convert base currency of account acc_chk_3001 from USD to EUR.", "target_entity": "Account",
                                       "target_id": "acc_chk_3001"}),
                        Action(name="get_support_ticket_details", kwargs={"ticket_id": "tkt_generated_10"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                ],
                outputs=['"ticket_id": "tkt_generated_10", "status": "Open"', '"balance": 12540.25', '"account_id": "acc_inv_3002", "balance": 150000.0']
        ),
        Task(
                annotator="0",
                user_id="task_90",
                instruction="You are Jane Smith, and you want to see your total net worth. You would like to calculate the sum of all your account balances (checking and savings) and subtract any outstanding loan balances. Afterwards, you want to update your occupation to 'Lead Designer' and see your credit score. Also list your current beneficiaries.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_003"}),
                        Action(name="calculate_sum", kwargs={"values": ["3100.75", "22000.00", "0.0"]}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "field": "occupation", "value": "Lead Designer"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                ],
                outputs=['"total": 25100.75', '"occupation": "Lead Designer"', '"credit_score": 820', '"beneficiary_name": "John Doe"']
        ),
        Task(
                annotator="0",
                user_id="task_91",
                instruction="You are John Doe. You need to update your mailing address to 123 Main St, Anytown, CA, 90210, USA, and would like to confirm the change was successful. You would also like to check the current balance of your auto loan and enable paperless billing.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="update_customer_address",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "street_address": "123 Main St", "city": "Anytown", "state": "CA",
                                       "postal_code": "90210", "country": "USA"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_auto_002"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "paperless_billing": True}),
                ],
                outputs=['"mailing_address": {"street_address": "123 Main St", "city": "Anytown", "state": "CA", "postal_code": "90210", "country": "USA"}',
                         '"current_balance": 15670.8', '"paperless_billing": true']
        ),
        Task(
                annotator="0",
                user_id="task_92",
                instruction="You are Jane Smith, and you want to check the current balance of all your accounts. You also want to check the status of your old personal loan. Afterwards, please update your communication preference to 'Email'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_003"}),
                        Action(name="update_customer_preferences", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "communication_channel": "Email"}),
                ],
                outputs=['"account_id": "acc_chk_2001", "balance": 3100.75', '"account_id": "acc_sav_2002", "balance": 22000.0', '"status": "Paid Off"',
                         '"communication_channel": "Email"']
        ),
        Task(
                annotator="0",
                user_id="task_93",
                instruction="You are David Chen. You want to apply for a personal loan of $15,000 for a 48-month term for 'Debt Consolidation', noting your annual income is $250,000. After submitting the application, you'd like to transfer $500 from your checking account to your investment account. Use the description 'Transfer to investment account' for the transfer.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="create_loan_application",
                               kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "loan_type": "Personal", "amount": 15000.00,
                                       "term": 48, "purpose": "Debt Consolidation", "annual_income": 250000}),
                        Action(name="get_loan_application_details", kwargs={"application_id": "app_generated_21"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_inv_3002", "amount": 500.00,
                                       "description": "Transfer to investment account"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_3001"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_inv_3002"}),
                ],
                outputs=['"application_status": "Submitted"', '"account_id": "acc_chk_3001", "balance": 12040.25', '"account_id": "acc_inv_3002", "balance": 150500.0']
        ),
        Task(
                annotator="0",
                user_id="task_94",
                instruction="You are Chloe Dubois, and you want to change your primary phone number to +33 7 88 99 00 11. You also wish to see your recent transactions on your checking account from the last 30 days and get your credit card balance. Today is 2023-11-15, ignore all other dates given as today.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Chloe", "last_name": "Dubois"}),
                        Action(name="update_customer_phone", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2", "new_phone_number": "+33 7 88 99 00 11"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "e5f6a1b2-c3d4-e5f6-a1b2-c3d4e5f6a1b2"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_9001", "days_history": 30, "current_date": "2023-11-15"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_crd_9002"}),
                ],
                outputs=['"number": "+33 7 88 99 00 11"', '"transaction_id": "txn_6e7f8g9h-0i1j-2k3l-4m5n-6o7p8q9r0s1t"', '"balance": -500.0']
        ),
        Task(
                annotator="0",
                user_id="task_95",
                instruction="You are John Doe, and you would like to get a detailed transaction history for your checking account for the last 30 days. Today is 2023-11-16, ignore all other dates given as today. You also want to know the interest rate on your savings account. Then, submit a low-priority support ticket with the details 'General inquiry about term deposits.'. After submitting the ticket, you also wish to update your occupation to 'Senior Software Engineer'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_transactions", kwargs={"account_id": "acc_chk_1001", "days_history": 30, "current_date": "2023-11-16"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_sav_1002"}),
                        Action(name="create_support_ticket", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "category": "General Inquiry", "priority": "Low",
                                                                     "details": "General inquiry about term deposits.", "target_entity": "Customer",
                                                                     "target_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "field": "occupation", "value": "Senior Software Engineer"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"transaction_id": "txn_9c2a3b7e-1a3e-4b8c-8a2e-5c6a8b3d4e9f"', '"transaction_id": "txn_8b1c4d6f-2b4f-5a9d-9b3f-6d7b9c4e5a1a"',
                         '"transaction_id": "txn_f6a1b2c3-d4e5-f6a1-b2c3-d4e5f6a1b2c3-21"', '"transaction_id": "txn_7b8c9d0e-1f2a-3b4c-5d6e-7f8g9h0i1j2k"', '"interest_rate": 1.25',
                         '"ticket_id": "tkt_generated_10", "status": "Open"', '"occupation": "Senior Software Engineer"']
        ),
        Task(
                annotator="0",
                user_id="task_96",
                instruction="You are David Chen, and you want to remove your beneficiary, Metropolis Power & Light. After removing the beneficiary, you want to make a $1000 payment to your mortgage from your checking account. Use the description 'Extra mortgage payment'.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "David", "last_name": "Chen"}),
                        Action(name="get_beneficiary_by_name", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a", "beneficiary_name": "Metropolis Power & Light"}),
                        Action(name="remove_beneficiary", kwargs={"beneficiary_id": "bene_6d5e4f3a-2b1c-9d8e-7f6a-5b4c3d2e1f0a"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "d8e9f0a1-b2c3-4d5e-6f7a-8b9c0d1e2f3a"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_3001", "destination_account_id": "acc_mort_3003", "amount": 1000.0, "description": "Extra mortgage payment"}),
                        Action(name="update_loan_balance", kwargs={"loan_id": "loan_mort_001", "amount": -1000.0}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_mort_001"}),
                ],
                outputs=['"beneficiary_id": "bene_6d5e4f3a-2b1c-9d8e-7f6a-5b4c3d2e1f0a", "action": "removed"', '"current_balance": 714240.5']
        ),
        Task(
                annotator="0",
                user_id="task_97",
                instruction="You are Jane Smith, and you want to check the current status of your personal loan. You also want to update your occupation to 'Senior Graphic Designer' and check your savings account balance.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_loans", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_loan_details", kwargs={"loan_id": "loan_pers_003"}),
                        Action(name="update_customer_personal_info",
                               kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef", "field": "occupation", "value": "Senior Graphic Designer"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                ],
                outputs=['"loan_id": "loan_pers_003", "status": "Paid Off"', '"occupation": "Senior Graphic Designer"', '"balance": 22000.0']
        ),
        Task(
                annotator="0",
                user_id="task_98",
                instruction="As a new customer, Peter Venkman, you want to open an account. Your date of birth is 1950-10-19, and your details are: email p.venkman@ghostbusters.com, phone 555-2368, address 14 N Moore St, New York, NY, 10013, USA. With an annual income of $120,000, you need to open a checking account in USD. You then want to add a beneficiary named 'Dana Barrett' (IBAN US1112223334445556667778 at 'First National Bank of New York', USA) and schedule a monthly payment of $1000 to her, starting on the 1st of next month. Your relationship to Dana is that she is a friend of yours.",
                actions=[
                        Action(name="create_customer", kwargs={"first_name": "Peter", "last_name": "Venkman", "dob": "1950-10-19",
                                                               "email": "p.venkman@ghostbusters.com", "phone": "555-2368", "street": "14 N Moore St", "city": "New York",
                                                               "postal_code": "10013", "country": "USA", "annual_income": 120000}),
                        Action(name="get_customer_details", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="create_account",
                               kwargs={"customer_id": "customer_generated_27", "account_type": "Checking", "currency": "USD"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="add_beneficiary",
                               kwargs={"customer_id": "customer_generated_27", "name": "Dana Barrett", "relationship": "Friend",
                                       "iban": "US1112223334445556667778", "bank_name": "First National Bank of New York", "country": "USA"}),
                        Action(name="list_beneficiaries", kwargs={"customer_id": "customer_generated_27"}),
                        Action(name="get_account_details", kwargs={"account_id": "acc_generated_40"}),
                        Action(name="create_scheduled_payment",
                               kwargs={"customer_id": "customer_generated_27", "source_account_id": "acc_generated_40",
                                       "beneficiary_id": "bene_generated_11", "amount": 1000.00, "frequency": "Monthly", "start_date": "2025-08-01"}),
                        Action(name="get_scheduled_payment_details", kwargs={"payment_id": "sp_generated_41"}),
                ],
                outputs=['"customer_id": "customer_generated_27"', '"account_id": "acc_generated_40"', '"beneficiary_id": "bene_generated_11"',
                         '"payment_id": "sp_generated_41", "status": "Active"']
        ),
        Task(
                annotator="0",
                user_id="task_99",
                instruction="You are John Doe, and you want to enable paperless billing and change your communication preference to 'App'. After doing so, you want to see the balance for your checking account and your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "John", "last_name": "Doe"}),
                        Action(name="update_customer_preferences",
                               kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e", "paperless_billing": True, "communication_channel": "App"}),
                        Action(name="get_customer_details", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_1001"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "c3e8f1d2-9a8b-4f7c-8a6e-2b9f3d1a4c7e"}),
                ],
                outputs=['"paperless_billing": true, "communication_channel": "App"', '"balance": 5230.5', '"credit_score": 780']
        ),
        Task(
                annotator="0",
                user_id="task_100",
                instruction="You are Jane Smith. You want to close your checking account and transfer the remaining balance to your savings account. Use the description 'Account closure' for the transfer. Afterward, you would like to confirm the final balance of your savings account, see a list of your remaining open accounts, and check your credit score.",
                actions=[
                        Action(name="search_customer_by_name", kwargs={"first_name": "Jane", "last_name": "Smith"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_chk_2001"}),
                        Action(name="create_transaction",
                               kwargs={"source_account_id": "acc_chk_2001", "destination_account_id": "acc_sav_2002", "amount": 3100.75,
                                       "description": "Account closure"}),
                        Action(name="update_account_status", kwargs={"account_id": "acc_chk_2001", "new_status": "Closed"}),
                        Action(name="get_account_balance", kwargs={"account_id": "acc_sav_2002"}),
                        Action(name="get_customer_accounts", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                        Action(name="get_customer_financial_profile", kwargs={"customer_id": "a1b2c3d4-e5f6-7890-1234-567890abcdef"}),
                ],
                outputs=['"account_id": "acc_chk_2001", "status": "Closed"', '"account_id": "acc_sav_2002", "balance": 25100.75', '"account_id": "acc_sav_2002"',
                         '"credit_score": 820']
        ),
]
