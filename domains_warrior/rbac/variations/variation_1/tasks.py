from domains.dto import Action, Task

TASKS = [
        Task(
                annotator="1",
                user_id="task_001",
                instruction="You are Ashley Wilson from Human Resources. You need to onboard a new contractor, Jennifer Robertson, into the Finance department. They require the 'finance-read' and 'finance-invoice-processor' roles, with access expiring in 90 days. The finance lead will approve the new user.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_user",
                               kwargs={"username": "jrobertson", "email": "jennifer.robertson@taucorp.com", "department": "Finance", "status": "PENDING_ACCESS"}),
                        Action(name="get_user_by_username", kwargs={"username": "jrobertson"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-base"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-read"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-invoice-processor"}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-029", "assigned_by": "U-010", "expires_on": "2025-11-06T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-029 added to user U-034."}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-030", "assigned_by": "U-010", "expires_on": "2025-11-06T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-030 added to user U-034."}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-031", "assigned_by": "U-010", "expires_on": "2025-11-06T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-031 added to user U-034."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-034"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_CREATED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 created by user U-010."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "finance-lead"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-034", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-006", "action_type": "USER_STATUS_CHANGE", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 status changed to 'ACTIVE' by user U-006."}),
                ],
                outputs=['"user_id": "U-034", "status": "ACTIVE"', '"roles": ["finance-base", "finance-read", "finance-invoice-processor"]']
        ),
        Task(
                annotator="1",
                user_id="task_002",
                instruction="You are Michael Davis, the Operations Lead. You have been notified that employee Sarah Williams has been terminated. You need to process their offboarding immediately to secure company assets.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-002", "status": "DISABLED"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-lead"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-006"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-002."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-035"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-035 removed from user U-002."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-002 status changed to 'DISABLED' by user U-005."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Offboard employee Sarah Williams (swilliams)",
                                                                     "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked",
                                                                     "requester_id": "U-005", "category": "Offboarding", "assignee_id": "U-005"}),
                ],
                outputs=['"user_id": "U-002", "status": "DISABLED"', '"roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_003",
                instruction="You are Patrick Carter from the Operations team. An employee, Samantha Evans, reports that they are locked out of their account after too many failed login attempts. You need to resolve this issue for them.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_username", kwargs={"username": "sevans"}),
                        # Action(name="get_user_sessions", kwargs={"user_id": "U-020"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-020", "status": "ACTIVE"}),
                        Action(name="get_user_by_username", kwargs={"username": "sevans"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="send_email", kwargs={"receiver": "samantha.evans@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account Reactivated",
                                                          "text_content": "Your account has been reactivated and your access has been restored."}),
                        Action(name="send_email", kwargs={"receiver": "samantha.evans@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account reactivated", "text_content": "Please reset your password using the following link..."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "USER_STATUS_CHANGE", "target_id": "U-020", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-020 status changed to 'ACTIVE' by user U-029."}),
                ],
                outputs=['"user_id": "U-020", "status": "ACTIVE"', '"email_id": "EM-016"', '"email_id": "EM-017"']
        ),
        Task(
                annotator="1",
                user_id="task_004",
                instruction="You are Michael Davis, the Operations Lead. You've received a notification that employee Christopher Rodriguez has been promoted to Engineering Lead. You need to assign him the matching 'engineering-lead' role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-lead"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-034", "assigned_by": "U-005"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-034 added to user U-007."}),
                        Action(name="get_user_role", kwargs={"user_id": "U-007", "role_name": "engineering-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-001 removed from user U-007."}),
                        Action(name="get_user_role", kwargs={"user_id": "U-007", "role_name": "engineering-code-commit"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-002 removed from user U-007."}),
                        Action(name="get_user_role", kwargs={"user_id": "U-007", "role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                ],
                outputs=['"user_id": "U-007"', '"roles": ["engineering-lead"]']
        ),
        Task(
                annotator="1",
                user_id="task_005",
                instruction="You are Michael Davis, the Operations Lead and a compliance officer. It's time for the quarterly access review for the 'production-web-server-1' resource. You need to initiate this certification process.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_resource_by_name", kwargs={"name": "production-web-server-1"}),
                        Action(name="create_certification", kwargs={"reviewer_id": "U-005", "resource_id": "RES-025", "due_date": "2025-09-08T09:56:15Z"}),
                        #Action(name="get_certification_details", kwargs={"certification_id": "C-024"}),
                        Action(name="send_slack_message", kwargs={"username": "CERTIFICATION_BOT", "channel": "#certifications",
                                                                  "message": "A new certification C-024 for resources RES-025 has been requested. Due date 2025-09-08T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "CERTIFICATION_CREATED", "target_id": "C-024", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Certification C-024 requested by user U-005"}),
                ],
                outputs=['"certification_id": "C-024", "status": "PENDING"', '"message_id": "SL-042"']
        ),
        Task(
                annotator="1",
                user_id="task_006",
                instruction="You are Michael Davis, a SOC analyst responding to a critical incident. An operations team member, employee Patrick Carter, requires emergency administrative access to the 'database-cluster-primary' for the next 4 hours to resolve the issue. You need to create a temporary policy exception for him and approve it. Use 'Emergency incident response' as the reason for the exception.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_user_by_username", kwargs={"username": "pcarter"}),
                        Action(name="get_resource_by_name", kwargs={"name": "database-cluster-primary"}),
                        Action(name="create_permission", kwargs={"action": "admin-database-cluster-primary", "resource_id": "RES-026"}),
                        Action(name="create_policy_exception",
                               kwargs={"user_id": "U-029", "permission_id": "P-113", "reviewed_by": "U-005", "reason": "Emergency incident response",
                                       "expires_on": "2025-08-08T13:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "POLICY_EXCEPTION_REQUESTED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 requested by user U-005"}),
                        Action(name="get_policy_exception_details", kwargs={"exception_id": "PE-021"}),
                        Action(name="approve_policy_exception", kwargs={"exception_id": "PE-021", "reviewed_by": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "POLICY_EXCEPTION_APPROVED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 approved by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "patrick.carter@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Policy Exception Granted",
                                                          "text_content": "Policy exception for permission 'admin-database-cluster-primary' granted. Expiration: 2025-08-08T13:56:15Z."})
                ],
                outputs=['"user_id": "U-029"', '"exception_id": "PE-021", "status": "ACTIVE"']
        ),
        Task(
                annotator="1",
                user_id="task_007",
                instruction="You are Alex Johnson, the Engineering Lead for the new 'Project Alpha' and currently its only member. You need to create a 'project-alpha-dev' (description: 'Developer role for Project Alpha') role that gives developers read/write access to the 'main-application-repo' ('read-main-repo', 'write-main-repo') and read access to the 'dev-database-server' ('read-dev-database'). You must ensure that all current team members of the project are assigned the role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="create_role", kwargs={"role_name": "project-alpha-dev", "description": "Developer role for Project Alpha"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "project-alpha-dev"}),
                        Action(name="get_resource_by_name", kwargs={"name": "main-application-repo"}),
                        Action(name="create_permission", kwargs={"action": "read-main-repo", "resource_id": "RES-002"}),
                        Action(name="create_permission", kwargs={"action": "write-main-repo", "resource_id": "RES-002"}),
                        Action(name="get_resource_by_name", kwargs={"name": "dev-database-server"}),
                        Action(name="create_permission", kwargs={"action": "read-dev-database", "resource_id": "RES-007"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-114"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-115"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-043"}),
                        Action(name="grant_role", kwargs={"user_id": "U-001", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-001", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-001."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-001"}),
                ],
                outputs=['"user_id": "U-001", "roles": ["engineering-base", "engineering-lead", "project-alpha-dev"', '"role_id": "ROL-043"',
                         '"permissions": ["P-113", "P-114", "P-115"]']
        ),
        Task(
                annotator="1",
                user_id="task_008",
                instruction="You are Matthew Lopez from the sales team. For a new report, you need to request read access to view the marketing analytics data. The justification for this request is 'Required for Q3 sales-marketing alignment report.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Matthew", "last_name": "Lopez"}),
                        Action(name="get_resource_by_name", kwargs={"name": "marketing-analytics-dashboard"}),
                        Action(name="list_roles", kwargs={}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-analytics-read"}),
                        Action(name="create_access_request", kwargs={"user_id": "U-009", "resource_id": "RES-010", "requested_role_id": "ROL-009",
                                                                     "justification": "Required for Q3 sales-marketing alignment report."}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-009", "action_type": "ACCESS_REQUEST_CREATED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Access request AR-042 created by user U-009."}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-042"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Access Request",
                                                                     "description": "Access request AR-042: Role ROL-009 for mlopez (U-009).",
                                                                     "requester_id": "U-009", "category": "Access Management", "assignee_id": "U-002"}),
                        Action(name="send_slack_message", kwargs={"username": "mlopez", "channel": "#access-requests",
                                                                  "message": "Access request AR-042 for resource RES-010 has been created by user U-009. Please review."}),
                ],
                outputs=['"request_id": "AR-042", "status": "PENDING"', '"message_id": "SL-042"', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_009",
                instruction="You are Michael Davis, an IT auditor. A recent scan has flagged a potential Separation of Duties violation for employee Ashley Wilson, who holds both the 'hr-recruitment-manager' and 'hr-payroll-admin' roles. You need to investigate and resolve this conflict by revoking the temporary payroll access. Also create a ticket with the content 'Conflicting roles 'hr-recruitment-manager' and 'hr-payroll-admin' found for employee Ashley Wilson. Revoked temporary 'hr-payroll-admin' role.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "awilson"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-010"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "hr-payroll-admin"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-010", "role_id": "ROL-018"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-010", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-018 removed from user U-010."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-010"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "SoD Violation",
                                                                     "description": "Conflicting roles 'hr-recruitment-manager' and 'hr-payroll-admin' found for employee Ashley Wilson. Revoked temporary 'hr-payroll-admin' role.",
                                                                     "requester_id": "U-005", "category": "Compliance", "assignee_id": "U-005"}),
                ],
                outputs=['"user_id": "U-010"', '"roles": ["hr-base", "hr-recruitment-manager"]', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_010",
                instruction="You are Ashley Wilson, an HR compliance manager. To track the new Q3 security training, you need to assign the 'security-awareness-training-q3' role to all active users in the Sales and Marketing departments. The description of the role is 'Tracks completion of Q3 security training'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="create_role", kwargs={"role_name": "security-awareness-training-q3", "description": "Tracks completion of Q3 security training"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-010."}),
                        Action(name="get_active_users_by_department", kwargs={"department": "Sales"}),
                        Action(name="get_active_users_by_department", kwargs={"department": "Marketing"}),
                        Action(name="grant_role", kwargs={"user_id": "U-009", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-009."}),
                        Action(name="grant_role", kwargs={"user_id": "U-015", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-015."}),
                        Action(name="grant_role", kwargs={"user_id": "U-021", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-021."}),
                        Action(name="grant_role", kwargs={"user_id": "U-002", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-002."}),
                        Action(name="grant_role", kwargs={"user_id": "U-014", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-014."}),
                        Action(name="grant_role", kwargs={"user_id": "U-026", "role_id": "ROL-043", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-026."}),
                ],
                outputs=['"role_id": "ROL-043"',
                         '"user_id": "U-009", "role_id": "ROL-043", "assigned_by": "U-010"',
                         '"user_id": "U-015", "role_id": "ROL-043", "assigned_by": "U-010"',
                         '"user_id": "U-021", "role_id": "ROL-043", "assigned_by": "U-010"',
                         '"user_id": "U-002", "role_id": "ROL-043", "assigned_by": "U-010"',
                         '"user_id": "U-014", "role_id": "ROL-043", "assigned_by": "U-010"',
                         '"user_id": "U-026", "role_id": "ROL-043", "assigned_by": "U-010"',
                         ]
        ),
        Task(
                annotator="1",
                user_id="task_011",
                instruction="You are Michael Davis, an IT auditor. As part of a routine audit of temporary roles, you've identified that employee Christopher Rodriguez's temporary access for the 'engineering-prod-access' role is no longer needed as their project has ended. You must revoke this role. The audit log details should state 'Role ROL-003 removed from user U-007.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"})
                ],
                outputs=['"revoked_role": "ROL-003", "user_id": "U-007"', '"roles": ["engineering-base", "engineering-code-commit"]']
        ),
        Task(
                annotator="1",
                user_id="task_012",
                instruction="You are Alex Johnson, the Engineering Lead. The 'salesforce-crm-prod' system is being decommissioned. As a first step, remove all permissions for the system from all roles and deprecate any roles that afterwards no longer have any permissions according to policy. The new description for the deprecated roles is: 'Deprecated due to Salesforce CRM being decommissioned'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_resource_by_name", kwargs={"name": "salesforce-crm-prod"}),
                        Action(name="get_permissions_by_resource", kwargs={"resource_id": "RES-014"}),
                        Action(name="get_roles_by_permission", kwargs={"permission_id": "P-038"}),
                        Action(name="get_roles_by_permission", kwargs={"permission_id": "P-039"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-011"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-014"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-036"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-011", "permission_id": "P-038"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-014", "permission_id": "P-038"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-014", "permission_id": "P-039"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-036", "permission_id": "P-039"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-011"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-014"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-036"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-014"}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-021"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-021", "role_id": "ROL-014"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_REVOKED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-014 removed from user U-021."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-021"}),
                        Action(name="update_role_details", kwargs={"role_id": "ROL-014", "new_name": "[DEPRECATED]sales-reporting",
                                                                   "new_description": "Deprecated due to Salesforce CRM being decommissioned"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_UPDATED", "target_id": "ROL-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-014 has been updated. name=[[DEPRECATED]sales-reporting] | description=[Deprecated due to Salesforce CRM being decommissioned]"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-014"}),
                ],
                outputs=['"user_id": "U-021"', '"roles": ["sales-base", "sales-lead-manager"]', '"users": []', '"role_id": "ROL-014", "permissions": []']
        ),
        Task(
                annotator="1",
                user_id="task_013",
                instruction="You are Matthew Lopez from the Sales team. You have been tasked with a cross-departmental project and need access to the email-marketing-service to view the marketing campaigns. Please request the 'marketing-campaign-manager' role. The justification is 'Access needed for Project Nightingale sales and marketing alignment.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Matthew", "last_name": "Lopez"}),
                        Action(name="get_resource_by_name", kwargs={"name": "email-marketing-service"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="create_access_request", kwargs={"user_id": "U-009", "resource_id": "RES-009", "requested_role_id": "ROL-007",
                                                                     "justification": "Access needed for Project Nightingale sales and marketing alignment."}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-009", "action_type": "ACCESS_REQUEST_CREATED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Access request AR-042 created by user U-009."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Access Request",
                                                                     "description": "Access request AR-042: Role ROL-007 for mlopez (U-009).",
                                                                     "requester_id": "U-009", "category": "Access Management", "assignee_id": "U-002"}),
                        Action(name="send_slack_message", kwargs={"username": "mlopez", "channel": "#access-requests",
                                                                  "message": "Access request AR-042 for resource RES-009 has been created by user U-009. Please review."}),
                ],
                outputs=['"request_id": "AR-042", "status": "PENDING"', '"message_id": "SL-042"', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_014",
                instruction="You are Michael Davis from operations. You are conducting a review to ensure no employees in the HR department have access to the 'sales-crm-access' role. You have found that employee Laura Jackson has this role in violation of policy and you need to revoke it. Use 'Found and revoked 'sales-crm-access' role from HR employee Laura Jackson (ljackson).' for the ticket.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Laura", "last_name": "Jackson"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-crm-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-016", "role_id": "ROL-012"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-016", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-012 removed from user U-016."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-016"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "SoD Violation", "description": "Found and revoked 'sales-crm-access' role from HR employee Laura Jackson (ljackson).",
                                       "requester_id": "U-005", "assignee_id": "U-005", "category": "Compliance"}),
                ],
                outputs=['"user_id": "U-016"', '"roles": ["hr-base"]', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_015",
                instruction="You are Alex Johnson, the Engineering Lead. Employee Brian Taylor needs temporary access to the production environment for a critical hotfix deployment. Grant him the 'engineering-prod-access' role for the next 8 hours.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_user_by_username", kwargs={"username": "btaylor"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="grant_role", kwargs={"user_id": "U-013", "role_id": "ROL-003", "assigned_by": "U-001", "expires_on": "2025-08-08T17:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-013", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 added to user U-013."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-013"}),
                ],
                outputs=['"user_id": "U-013"', '"roles": ["engineering-base", "engineering-prod-access"]']
        ),
        Task(
                annotator="1",
                user_id="task_016",
                instruction="You are Michael Davis, the Operations Lead. You need to create a new resource for the company's new 'customer-pii-database'. Set its criticality to 'CRITICAL' and assign yourself as the owner. Also create a new role 'pi-database-manager' (description: 'Role for managing customer PII data') with two new permissions 'read-customer-pii-database' and 'write-customer-pii-database' with the respective descriptions 'Allows read access to customer pii database' and 'Allows write access to customer pii database'. Grant the new role to the heads of the Operations and HR departments.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="create_resource", kwargs={"name": "customer-pii-database", "owner_id": "U-005", "criticality": "CRITICAL"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-005."}),
                        Action(name="create_permission",
                               kwargs={"action": "read-customer-pii-database", "resource_id": "RES-043", "description": "Allows read access to customer pii database"}),
                        Action(name="create_permission",
                               kwargs={"action": "write-customer-pii-database", "resource_id": "RES-043", "description": "Allows write access to customer pii database"}),
                        Action(name="create_role", kwargs={"role_name": "pi-database-manager", "description": "Role for managing customer pii data"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-005."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-114"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-043"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "hr-lead"}),
                        Action(name="grant_role", kwargs={"user_id": "U-004", "role_id": "ROL-043", "assigned_by": "U-005"}),
                        Action(name="grant_role", kwargs={"user_id": "U-005", "role_id": "ROL-043", "assigned_by": "U-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-004."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-005", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-004"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-005"}),
                ],
                outputs=['"user_id": "U-004", "roles": ["hr-base", "hr-lead", "pi-database-manager"',
                         '"user_id": "U-005", "roles": ["operations-base", "operations-lead", "pi-database-manager"', '"resource_id": "RES-043"', '"permission_id": "P-113"',
                         '"permission_id": "P-114"', '"role_id": "ROL-043", "permissions": ["P-113", "P-114"]']
        ),
        Task(
                annotator="1",
                user_id="task_017",
                instruction="You are Michael Davis, the Operations Lead. You need to approve the pending access request from employee Patrick Carter. The request ID is 'AR-007'.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-007"}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-007", "status": "APPROVED", "reviewed_by": "U-005"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ACCESS_GRANTED", "target_id": "AR-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-007 granted by user U-005."}),
                        Action(name="grant_role", kwargs={"user_id": "U-029", "role_id": "ROL-026", "assigned_by": "U-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-029", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-026 added to user U-029."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-029"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-011", "status": "CLOSED", "note": "Access request AR-007 has been approved."}),
                ],
                outputs=['"request_id": "AR-007", "status": "APPROVED"', '"ticket_id": "TI-011", "status": "CLOSED"', '"roles": ["operations-base", "operations-system-admin"]']
        ),
        Task(
                annotator="1",
                user_id="task_018",
                instruction="You are the RBAC system. The temporary access for employee Christopher Rodriguez with the 'engineering-prod-access' role has expired. You need to revoke this role.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="send_email", kwargs={"receiver": "christopher.rodriguez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'engineering-prod-access' has expired and has been revoked."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                ],
                outputs=['"user_id": "U-007"', '"roles": ["engineering-base", "engineering-code-commit"]', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_019",
                instruction="You are Alex Johnson, the Engineering Lead. You need to create a new 'jira-editor' (desription: 'Ticket management access') role for the 'jira-project-management' resource. Assign the 'create-jira-issue', 'view-jira-issue', and 'edit-jira-issue' permissions. Also add a new 'delete-jira-issue' permission (description: 'Allows deleting issues in Jira'). Assign the new role to anyone who currently is an engineering lead.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_resource_by_name", kwargs={"name": "jira-project-management"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "jira-editor", "description": "Ticket management access"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="create_permission", kwargs={"action": "delete-jira-issue", "resource_id": "RES-004", "description": "Allows deleting issues in Jira"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-001."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="get_permission_details", kwargs={"permission_name": "create-jira-issue"}),
                        Action(name="get_permission_details", kwargs={"permission_name": "view-jira-issue"}),
                        Action(name="get_permission_details", kwargs={"permission_name": "edit-jira-issue"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-007"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-008"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-009"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-043"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "jira-editor"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-lead"}),
                        Action(name="grant_role", kwargs={"user_id": "U-001", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-001", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-001."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-001"}),
                ],
                outputs=['"permission_id": "P-113"', '"role_id": "ROL-043"', '"permissions": ["P-007", "P-008", "P-009", "P-113"]',
                         '"user_id": "U-001", "roles": ["engineering-base", "engineering-lead", "jira-editor"]']
        ),

        Task(
                annotator="1",
                user_id="task_020",
                instruction="You are an automated RBAC bot. A high-severity SIEM alert has been triggered for employee Christopher Rodriguez for an 'unauthorised_ACCESS_ATTEMPT' on the 'employee-data-portal'. You need to suspend the user's account and create a ticket for the operations team to investigate.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Christopher", "last_name": "Rodriguez"}),
                        Action(name="get_siem_alerts", kwargs={"user_id": "U-007"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-031", "action_type": "SIEM_ALERT_CREATED", "target_id": "ALRT-011", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "SIEM alert ALRT-011 created by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-007", "status": "SUSPENDED"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-007 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-001 removed from user U-007."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-code-commit"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-002 removed from user U-007."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="get_resource_by_name", kwargs={"name": "employee-data-portal"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-038"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Security Incident",
                                                                     "description": "User Christopher Rodriguez (crodriguez) account suspended due to unauthorised access attempt on employee-data-portal.",
                                                                     "requester_id": "U-031", "category": "Security Incident", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                ],
                outputs=['"user_id": "U-007", "status": "SUSPENDED"', '"user_id": "U-007", "roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_021",
                instruction="You are Michael Davis, the Operations Lead. Employee Amanda Miller has been terminated, and you are responsible for processing her system offboarding. This involves disabling her account, revoking all assigned roles, and creating a ticket for the Marketing Lead, Sarah Williams, to handle asset reallocation.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Amanda", "last_name": "Miller"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-008", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-008", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-008 status changed to 'DISABLED' by user U-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-008"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-008", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-008", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-008."}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Offboard employee Amanda Miller (amiller)",
                                                                     "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked",
                                                                     "requester_id": "U-005", "category": "Offboarding", "assignee_id": "U-002"})
                ],
                outputs=['"user_id": "U-008", "status": "DISABLED"', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_022",
                instruction="You are Sarah Williams, the Marketing Lead. Angela Phillips has a pending request (AR-009) for temporary access to the 'marketing-social-media' role for an upcoming campaign. You have reviewed the request and need to approve it, with the access expiring in 30 days.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-009"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-009", "status": "APPROVED", "reviewed_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ACCESS_GRANTED", "target_id": "AR-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-009 granted by user U-002."}),
                        Action(name="grant_role", kwargs={"user_id": "U-026", "role_id": "ROL-008", "assigned_by": "U-002", "expires_on": "2025-09-07T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-008 added to user U-026."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-026"}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-026"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-011", "status": "CLOSED", "note": "Access request AR-009 has been approved."})
                ],
                outputs=['"request_id": "AR-009", "status": "APPROVED"', '"user_id": "U-026"',
                         '"roles": ["marketing-base", "marketing-campaign-manager", "marketing-content-editor", "marketing-social-media"]']
        ),
        Task(
                annotator="1",
                user_id="task_023",
                instruction="You are Alex Johnson, the Engineering Lead. The company has decided to consolidate infrastrucure in the cloud and has signed up for AWS. You need to create a new 'aws-cloud-services' resource (criticality: 'CRITICAL') with Brian Taylor as the owner to reflect this change, and you need to create a new 'cloud-infrastructure-manager' role (description: 'Manages all cloud infrastructure resources.') and assign it to Brian Taylor as well as anyone who currently holds the 'engineering-prod-access' role. The role also needs the new permissions for the newly added resource: 'create-cloud-resources' (description: 'Allows creation of new cloud resources'), 'view-cloud-resources' (description: 'Allows read-only access to configuration of cloud resources'), 'modify-cloud-resources' (description: 'Allows modification of existing cloud resources'), and 'remove-cloud-resources' (description: 'Allows removing existing cloud resources')",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Brian", "last_name": "Taylor"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_resource", kwargs={"name": "aws-cloud-services", "owner_id": "U-013", "criticality": "CRITICAL"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-001."}),
                        Action(name="create_role", kwargs={"role_name": "cloud-infrastructure-manager", "description": "Manages all cloud infrastructure resources."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="create_permission",
                               kwargs={"action": "create-cloud-resources", "resource_id": "RES-043", "description": "Allows creation of new cloud resources"}),
                        Action(name="create_permission",
                               kwargs={"action": "view-cloud-resources", "resource_id": "RES-043", "description": "Allows read-only access to configuration of cloud resources"}),
                        Action(name="create_permission",
                               kwargs={"action": "modify-cloud-resources", "resource_id": "RES-043", "description": "Allows modification of existing cloud resources"}),
                        Action(name="create_permission",
                               kwargs={"action": "remove-cloud-resources", "resource_id": "RES-043", "description": "Allows removing existing cloud resources"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-114"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-115"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-116"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-007."}),
                        Action(name="grant_role", kwargs={"user_id": "U-025", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-025", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-025."}),
                        Action(name="grant_role", kwargs={"user_id": "U-013", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-013", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-013."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-025"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-013"}),
                ],
                outputs=['"resource_id": "RES-043", "name": "aws-cloud-services", "owner_id": "U-013"', '"role_id": "ROL-043"',
                         '"user_id": "U-007", "roles": ["engineering-base", "engineering-code-commit", "engineering-prod-access", "cloud-infrastructure-manager"',
                         '"user_id": "U-025", "roles": ["engineering-base", "engineering-prod-access", "cloud-infrastructure-manager"',
                         '"user_id": "U-013", "roles": ["engineering-base", "cloud-infrastructure-manager"']
        ),
        Task(
                annotator="1",
                user_id="task_024",
                instruction="You are David Brown, the Sales Lead. You have a pending access request (AR-022) from Matthew Lopez that must be rejected because it violates inter-departmental access policies. Notify him via email that the reason for rejection is: 'Access to this resource is restricted to the marketing department.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-022"}),
                        Action(name="get_user_by_username", kwargs={"username": "mlopez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-022", "status": "REJECTED", "reviewed_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ACCESS_REJECTED", "target_id": "AR-022", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-022 rejected by user U-003."}),
                        Action(name="send_email", kwargs={"receiver": "matthew.lopez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-022) has been rejected for the following reason: Access to this resource is restricted to the marketing department."})
                ],
                outputs=['"request_id": "AR-022", "status": "REJECTED"', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_025",
                instruction="You are the automated RBAC system. The current date and time is 2025-09-06T06:00:00+00:00, disregard all other date and time information. You have detected that policy exception PE-010 for Amanda Miller has passed its expiration date. You need to handle the situation according to policy.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_policy_exception_details", kwargs={"exception_id": "PE-010"}),
                        Action(name="update_policy_exception_status", kwargs={"exception_id": "PE-010", "status": "EXPIRED"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-031", "action_type": "POLICY_EXCEPTION_EXPIRED", "target_id": "PE-010", "timestamp": "2025-09-06T06:00:00+00:00",
                                       "details": "Policy exception PE-010 has expired."}),
                        Action(name="get_user_by_username", kwargs={"username": "amiller"}),
                        Action(name="send_email", kwargs={"receiver": "amanda.miller@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-09-06T06:00:00+00:00",
                                                          "subject": "Policy Exception Expired", "text_content": "Your temporary policy exception (PE-010) has expired."})
                ],
                outputs=['"exception_id": "PE-010", "status": "EXPIRED"', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_026",
                instruction="You are Emily Jones, the HR Lead. Christopher Rodriguez is transferring from the Engineering to the Operations department. You need to update his profile to reflect this change, which includes revoking all his prior engineering roles ('engineering-base', 'engineering-code-commit', 'engineering-prod-access') and granting him the standard 'operations-base' role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Emily", "last_name": "Jones"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_department", kwargs={"user_id": "U-007", "department": "Operations"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-004", "action_type": "USER_DEPARTMENT_CHANGED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "User U-007 department changed to Operations by user U-004."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-001 removed from user U-007."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-code-commit"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-002 removed from user U-007."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-base"}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-021", "assigned_by": "U-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-021 added to user U-007."}),
                        Action(name="send_email", kwargs={"receiver": "christopher.rodriguez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Welcome to the Operations Team",
                                                          "text_content": "Welcome, Christopher! Your system access has been updated for your new role in the Operations department."})
                ],
                outputs=['"user_id": "U-007", "department": "Operations"', '"roles": ["operations-base"]']
        ),
        Task(
                annotator="1",
                user_id="task_027",
                instruction="You are Michael Davis, an IT auditor, responsible for initiating quarterly access reviews. You need to kick off the certification campaign for the 'invoicing-system' resource. The review should be assigned to its owner, Lisa Anderson, and be due in 30 days.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_resource_by_name", kwargs={"name": "invoicing-system"}),
                        Action(name="get_user_by_username", kwargs={"username": "landerson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_certification", kwargs={"reviewer_id": "U-012", "resource_id": "RES-032", "due_date": "2025-09-07T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "CERTIFICATION_CREATED", "target_id": "C-024", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Certification C-024 requested by user U-005."}),
                        Action(name="send_slack_message", kwargs={"username": "CERTIFICATION_BOT", "channel": "#certifications",
                                                                  "message": "A new certification C-024 for resource RES-032 has been requested. Due date 2025-09-07T09:56:15Z"})
                ],
                outputs=['"certification_id": "C-024", "status": "PENDING", "resource_id": "RES-032"', '"message_id": "SL-042"']
        ),
        Task(
                annotator="1",
                user_id="task_028",
                instruction="You are Michael Davis, Operations Lead. With the recent security incident now resolved, the temporary 'operations-incident-response' role is no longer necessary, therefore you can remove it from all assigned users.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-incident-response"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-023"}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-023"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-023"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-023", "role_id": "ROL-023"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-023", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-023 removed from user U-023."}),
                        Action(name="send_email", kwargs={"receiver": "jeffery.green@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'operations-incident-response' has expired and has been revoked."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-023"})
                ],
                outputs=['"user_id": "U-023"', '"roles": ["operations-base", "operations-deployment-admin"]', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_029",
                instruction="You are Sarah Williams, Marketing Lead. To properly manage a newly acquired tool, you must register it in the system as the 'marketing-analytics-platform' resource. It should be classified as 'HIGH' criticality with a 'GDPR' compliance scope, and you will be the owner. You also need to create a new role 'marketing-analytics-admin' (description: 'Admin role for marketing analytics platform') what has a new permission 'admin-marketing-analytics-platform' (description: 'Admin permission for marketing analytics platform') for the platform. Assign yourself the role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_resource", kwargs={"name": "marketing-analytics-platform", "owner_id": "U-002", "criticality": "HIGH", "compliance_scope": "GDPR"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-002."}),
                        Action(name="get_resource_by_name", kwargs={"name": "marketing-analytics-platform"}),
                        Action(name="create_role_with_permission",
                               kwargs={"role_name": "marketing-analytics-admin", "resource_id": "RES-043", "permission_name": "admin-marketing-analytics-platform",
                                       "role_description": "Admin role for marketing analytics platform",
                                       "permission_description": "Admin permission for marketing analytics platform"}),
                        Action(name="grant_role", kwargs={"user_id": "U-002", "role_id": "ROL-043", "assigned_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-002."})
                ],
                outputs=['"resource_id": "RES-043", "name": "marketing-analytics-platform", "owner_id": "U-002"', '"role_id": "ROL-043"', '"permission_id": "P-113"',
                         '"user_id": "U-002", "roles": ["marketing-base", "marketing-lead", "marketing-analytics-admin"]']
        ),
        Task(
                annotator="1",
                user_id="task_030",
                instruction="You are Patrick Carter from the Operations team. An investigation into a security alert involving Amanda Miller has concluded it was a false positive. You need to reactivate her account from 'SUSPENDED' to 'ACTIVE'.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_username", kwargs={"username": "amiller"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-008", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "USER_STATUS_CHANGE", "target_id": "U-008", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-008 status changed to 'ACTIVE' by user U-029."}),
                        Action(name="send_email", kwargs={"receiver": "amanda.miller@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account Reactivated",
                                                          "text_content": "Your account has been reactivated and your access has been restored."}),
                ],
                outputs=['"user_id": "U-008", "status": "ACTIVE"', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_031",
                instruction="You are Ashley Wilson from Human Resources. A new Engineering Manager, Charles Brown, has been hired. You need to onboard his account, granting him the temporary 'engineering-prod-access' for 180 days. The engineering lead will approve the new user.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_user", kwargs={"username": "cbrown", "email": "charles.brown@taucorp.com", "department": "Engineering", "status": "PENDING_ACCESS"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_CREATED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 created by user U-010."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-base"}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-001", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-001 added to user U-034."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-003", "assigned_by": "U-010", "expires_on": "2026-02-04T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 added to user U-034."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-034"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-lead"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-034", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "USER_STATUS_CHANGE", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 status changed to 'ACTIVE' by user U-001."}),
                ],
                outputs=['"user_id": "U-034", "status": "ACTIVE"', '"roles": ["engineering-base", "engineering-prod-access"]']
        ),
        Task(
                annotator="1",
                user_id="task_032",
                instruction="You are Kevin Harris from Sales. Request access to the 'finance-budget-admin' role for the 'budgeting-tool' from the finance department resource with justification 'Access needed for Q4 budget planning collaboration'.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Kevin", "last_name": "Harris"}),
                        Action(name="get_resource_by_name", kwargs={"name": "budgeting-tool"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-budget-admin"}),
                        Action(name="create_access_request", kwargs={"user_id": "U-015", "resource_id": "RES-033", "requested_role_id": "ROL-032",
                                                                     "justification": "Access needed for Q4 budget planning collaboration"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-015", "action_type": "ACCESS_REQUEST_CREATED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Access request AR-042 created by user U-015."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "finance-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Access Request",
                                                                     "description": "Access request AR-042: Role ROL-032 for kharris (U-015).",
                                                                     "requester_id": "U-015", "category": "Access Management", "assignee_id": "U-006"}),
                        Action(name="send_slack_message", kwargs={"username": "kharris", "channel": "#access-requests",
                                                                  "message": "Access request AR-042 for resource RES-033 has been created by user U-015. Please review."}),
                ],
                outputs=['"request_id": "AR-042", "status": "PENDING"', '"user_id": "U-015"', '"ticket_id": "TI-054"', '"message_id": "SL-042"']
        ),
        Task(
                annotator="1",
                user_id="task_033",
                instruction="You are Michael Davis, Operations Lead. A SIEM alert has indicated a potential account compromise for Nicole Thomas. Execute the appropriate actions.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "nthomas"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-014", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-014 status changed to 'SUSPENDED' by user U-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-014"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-analytics-read"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-014", "role_id": "ROL-006"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-014", "role_id": "ROL-009"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-014."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-009 removed from user U-014."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-014", "mfa_enabled": True}),
                        Action(name="send_email", kwargs={"receiver": "nicole.thomas@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-014 by user U-005."}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Security Incident",
                                                                     "description": "User Nicole Thomas (nthomas) account suspended due to potentially being compromised.",
                                                                     "requester_id": "U-005", "category": "Security", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-014"}),
                ],
                outputs=['"user_id": "U-014", "status": "SUSPENDED", "mfa_enabled": true', '"user_id": "U-014", "roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_034",
                instruction="You are Alex Johnson, Engineering Lead. To support a new internal NuGet package system, create a 'HIGH' criticality resource named 'internal-nuget-repository' which you will own. Create a 'publish-package' permission (description: 'Allows publishing packages to the repository') and a 'nuget-publisher' role (description 'Allows publishing to internal NuGet') that has the new permission assigned. Grant the new role to Christopher Rodriguez.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_resource", kwargs={"name": "internal-nuget-repository", "owner_id": "U-001", "criticality": "HIGH"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-001."}),
                        Action(name="create_permission",
                               kwargs={"action": "publish-package", "resource_id": "RES-043", "description": "Allows publishing packages to the repository"}),
                        Action(name="create_role", kwargs={"role_name": "nuget-publisher", "description": "Allows publishing to internal NuGet"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-007."})
                ],
                outputs=['"resource_id": "RES-043"', '"permission_id": "P-113"', '"role_id": "ROL-043"', '"assigned_user": "U-007"']
        ),
        Task(
                annotator="1",
                user_id="task_035",
                instruction="You are Michael Davis, an IT auditor. A compliance scan has identified a Separation of Duties (SoD) violation for Stephanie Adams, who holds both a standard finance role and a temporary audit access role. You need to remediate this by revoking her temporary 'finance-audit-access' role and create a ticket to document the finding and resolution. The ticket subject must be 'SoD Violation' and the description 'Revoked conflicting role finance-audit-access from user sadams.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "sadams"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-audit-access"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-018", "role_id": "ROL-033"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-018", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-033 removed from user U-018."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "SoD Violation", "description": "Revoked conflicting role finance-audit-access from user sadams.", "requester_id": "U-005",
                                       "category": "Compliance", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-018"})
                ],
                outputs=['"user_id": "U-018"', '"roles": ["finance-base"]', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_036",
                instruction="You are Alex Johnson, Engineering Lead. The 'engineering-db-schema' role is being deprecated as part of a departmental restructuring. Execute the appropriate steps, and use the new description 'Deprecated due to department restructuring' for the depretacted role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-db-schema"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-004"}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-019"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 removed from user U-019."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-019"}),
                        Action(name="get_users_by_role", kwargs={"role_id": "ROL-004"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-004"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-004", "permission_id": "P-018"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-004"}),
                        Action(name="update_role_details",
                               kwargs={"role_id": "ROL-004", "new_name": "[DEPRECATED]engineering-db-schema", "new_description": "Deprecated due to department restructuring"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_UPDATED", "target_id": "ROL-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 has been updated. name=[[DEPRECATED]engineering-db-schema] | description=[Deprecated due to department restructuring]"}),

                ],
                outputs=['"role_revoked": "ROL-004"', '"user_id": "U-019", "roles": ["engineering-base", "engineering-qa-test"]', '"users": []',
                         '"role_id": "ROL-004", "permissions": []']
        ),
        Task(
                annotator="1",
                user_id="task_037",
                instruction="You are Alex Johnson, Engineering Lead. Your team member, Brian Taylor, requires urgent, temporary access to modify firewall rules on the 'network-firewall-main' resource. Create a new permission named 'modify-firewall-rules-temp' (description: 'Allows temporary modification of firewall rules.'), and grant him a 24h policy exception with reason 'Urgent network reconfiguration required' as the reason.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_resource_by_name", kwargs={"name": "network-firewall-main"}),
                        Action(name="create_permission",
                               kwargs={"action": "modify-firewall-rules-temp", "resource_id": "RES-027", "description": "Allows temporary modification of firewall rules."}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-001."}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Brian", "last_name": "Taylor"}),
                        Action(name="create_policy_exception",
                               kwargs={"user_id": "U-013", "permission_id": "P-113", "reason": "Urgent network reconfiguration required", "expires_on": "2025-08-09T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-001", "action_type": "POLICY_EXCEPTION_REQUESTED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 requested by user U-001"}),
                        Action(name="approve_policy_exception", kwargs={"exception_id": "PE-021", "reviewed_by": "U-001"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-001", "action_type": "POLICY_EXCEPTION_APPROVED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 approved by user U-001."}),
                        Action(name="send_email", kwargs={"receiver": "brian.taylor@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Policy Exception Granted",
                                                          "text_content": "Policy exception for permission 'modify-firewall-rules-temp' granted. Expiration: 2025-08-09T09:56:15Z."})
                ],
                outputs=['"permission_id": "P-113"', '"exception_id": "PE-021", "status": "ACTIVE"']
        ),
        Task(
                annotator="1",
                user_id="task_038",
                instruction="You are the RBAC system. A password reset has been initiated for user Lisa Anderson. You need to take appropriate action.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "landerson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-012", "status": "PENDING_ACCESS"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-012", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-012 status changed to 'PENDING_ACCESS' by user U-031."}),
                        Action(name="send_email", kwargs={"receiver": "lisa.anderson@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Password Reset",
                                                          "text_content": "A password reset was initiated for your account. Please follow the link to create a new password."})
                ],
                outputs=['"user_id": "U-012", "status": "PENDING_ACCESS"', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_039",
                instruction="You are Sarah Williams, Marketing Lead. As the 'social-media-platform' resource is now managed by the Operations team, you need to officially transfer its ownership to the Operations Lead. Inform him via email of the change (subject: 'Ownership Transfer 'social-media-platform'') with content 'Ownership of the social media platform has successfully been transferred to you.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_resource_by_name", kwargs={"name": "social-media-platform"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-005"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-008", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-002", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-008", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-008 transferred from user U-002 to U-005."}),
                        Action(name="get_resource_by_name", kwargs={"name": "social-media-platform"}),
                        Action(name="send_email", kwargs={"receiver": "michael.davis@taucorp.com", "sender": "sarah.williams@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Ownership Transfer 'social-media-platform'",
                                                          "text_content": "Ownership of the social media platform has successfully been transferred to you."})
                ],
                outputs=['"resource_id": "RES-008", "owner_id": "U-005"']
        ),
        Task(
                annotator="1",
                user_id="task_040",
                instruction="You are Michael Davis, Operations Lead. An emergency requires you to create a temporary 'emergency-patching-team' role for 24 hours to allow key personnel to deploy a critical patch. Use the description 'Provides temporary access for emergency server patching' for the new role. Assign this new role to Jeffery Green and Robert White.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role",
                               kwargs={"role_name": "emergency-patching-team", "description": "Provides temporary access for emergency server patching", "is_temporary": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-005."}),
                        Action(name="get_user_by_username", kwargs={"username": "jgreen"}),
                        Action(name="get_user_by_username", kwargs={"username": "rwhite"}),
                        Action(name="grant_role", kwargs={"user_id": "U-023", "role_id": "ROL-043", "assigned_by": "U-005", "expires_on": "2025-08-09T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-023", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-023."}),
                        Action(name="grant_role", kwargs={"user_id": "U-017", "role_id": "ROL-043", "assigned_by": "U-005", "expires_on": "2025-08-09T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-017."})
                ],
                outputs=['"role_id": "ROL-043"', '"assigned_users": ["U-023", "U-017"]']
        ),
        Task(
                annotator="1",
                user_id="task_041",
                instruction="You are Ashley Wilson, HR Lead. You need to onboard a new Finance department employee, Olivia Green. The finance lead will approve the new user.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_user", kwargs={"username": "ogreen", "email": "olivia.green@taucorp.com", "department": "Finance", "status": "PENDING_ACCESS"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_CREATED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 created by user U-010."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-base"}),
                        Action(name="grant_role", kwargs={"user_id": "U-034", "role_id": "ROL-029", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-029 added to user U-034."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-034"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "finance-lead"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-034", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-006", "action_type": "USER_STATUS_CHANGE", "target_id": "U-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-034 status changed to 'ACTIVE' by user U-006."}),
                ],
                outputs=['"user_id": "U-034", "status": "ACTIVE"', '"roles": ["finance-base"]']
        ),
        Task(
                annotator="1",
                user_id="task_042",
                instruction="You are Michael Davis, IT Auditor. During a review, you've discovered that Jeffery Green's 'operations-deployment-admin' role is redundant. Remediate this by revoking the role and create a ticket with subject 'Audit Remediation' and description 'Revoked redundant role operations-deployment-admin from user jgreen as per audit finding.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "jgreen"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-deployment-admin"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-023", "role_id": "ROL-025"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-023", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-025 removed from user U-023."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "Audit Remediation",
                                       "description": "Revoked redundant role 'operations-deployment-admin' from user 'jgreen' as per audit finding.",
                                       "requester_id": "U-005", "category": "Compliance", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-023"})
                ],
                outputs=['"user_id": "U-023"', '"roles": ["operations-base", "operations-incident-response"]', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_043",
                instruction="You are Alex Johnson, Engineering Lead. You need to approve the pending access request AR-020 for Brian Taylor, which grants him the 'engineering-db-schema' role to perform his duties.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-020"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-020", "status": "APPROVED", "reviewed_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ACCESS_GRANTED", "target_id": "AR-020", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-020 granted by user U-001."}),
                        Action(name="grant_role", kwargs={"user_id": "U-013", "role_id": "ROL-004", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-013", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 added to user U-013."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-013"}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-013"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-022", "status": "CLOSED", "note": "Access request AR-020 has been approved."})
                ],
                outputs=['"request_id": "AR-020", "status": "APPROVED"', '"user_id": "U-013"', '"roles": ["engineering-base", "engineering-db-schema"]',
                         '"ticket_id": "TI-022", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_044",
                instruction="You are the automated RBAC system. You've detected a CRITICAL SIEM alert for an unauthorised access attempt by Emily Jones on the 'salesforce-crm-prod'. You need to take appropriate steps to handle the situation.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "ejones"}),
                        Action(name="get_siem_alerts", kwargs={"user_id": "U-004"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-031", "action_type": "SIEM_ALERT_CREATED", "target_id": "ALRT-012", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "SIEM alert ALRT-012 created by user U-031."}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-004", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-004 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-004"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "hr-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-004", "role_id": "ROL-016"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-016 removed from user U-004."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "hr-lead"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-004", "role_id": "ROL-037"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-037 removed from user U-004."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Security Incident",
                                                                     "description": "User Emily Jones (ejones) account suspended due to unauthorised access attempt on 'salesforce-crm-prod'.",
                                                                     "requester_id": "U-031", "category": "Security incident", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-004"}),
                ],
                outputs=['"user_id": "U-004", "status": "SUSPENDED"', '"user_id": "U-004", "roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_045",
                instruction="You are David Brown, Sales Lead. To align with new compliance policies, you must ensure all users in your department have MFA enabled. If anyone does not, enable MFA on their account.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_users_by_department", kwargs={"department": "Sales"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-021", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-003", "action_type": "USER_MFA_ENABLED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-021 by user U-003."}),
                        Action(name="send_email", kwargs={"receiver": "paul.ellis@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-027", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-003", "action_type": "USER_MFA_ENABLED", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-027 by user U-003."}),
                        Action(name="send_email", kwargs={"receiver": "gary.campbell@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                ],
                outputs=['"user_id": "U-021", "mfa_enabled": true', '"user_id": "U-027", "mfa_enabled": true',
                         '"email_id": "EM-016", "receiver": "paul.ellis@taucorp.com", "subject": "MFA Enabled on Your Account"',
                         '"email_id": "EM-017", "receiver": "gary.campbell@taucorp.com", "subject": "MFA Enabled on Your Account"']
        ),
        Task(
                annotator="1",
                user_id="task_046",
                instruction="You are Alex Johnson, Engineering Lead. You need to create a temporary role, 'hotfix-deployment-override', for an urgent production deployment. The role description is 'Temporary override for hotfix deployment'. Assign it to Christopher Rodriguez with an expiration of 8 hours.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role",
                               kwargs={"role_name": "hotfix-deployment-override", "description": "Temporary override for hotfix deployment.", "is_temporary": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-043", "assigned_by": "U-001", "expires_on": "2025-08-08T17:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-007."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                ],
                outputs=['"role_id": "ROL-043", "role_name": "hotfix-deployment-override"',
                         '"user_id": "U-007", "roles": ["engineering-base","engineering-code-commit","engineering-prod-access","hotfix-deployment-override"]']
        ),
        Task(
                annotator="1",
                user_id="task_047",
                instruction="You are Michael Davis, the Operations Lead. The investigation into Emily Jones's account has concluded it was a false positive. You need to reactivate her account and close the respective investigation ticket for the SIEM alert with the note: 'Investigation complete. Account reactivated.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_hubspot_tickets_by_assignee", kwargs={"assignee_id": "U-005"}),
                        Action(name="get_user_by_username", kwargs={"username": "ejones"}),
                        Action(name="get_siem_alerts", kwargs={"user_id": "U-004"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-004"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-004", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-004 status changed to 'ACTIVE' by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "emily.jones@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account Reactivated",
                                                          "text_content": "Your account has been reactivated and your access has been restored."}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-053", "status": "CLOSED", "note": "Investigation complete. Account reactivated."})
                ],
                outputs=['"user_id": "U-004", "status": "ACTIVE"', '"ticket_id": "TI-053", "status": "CLOSED"', '"email_id": "EM-016", "subject": "Account Reactivated"']
        ),
        Task(
                annotator="1",
                user_id="task_048",
                instruction="You are Patrick Carter, an IT Auditor. A compliance review has found that Daniel Taylor no longer requires the high-privilege 'engineering-db-schema' role. You must revoke this role from him. Additionally, reassign ownership of the 'dev-database-server' from him to the Engineering Lead, Alex Johnson. Create a ticket to document this audit finding with the description 'Remediated audit finding: Revoked unnecessary 'engineering-db-schema' role from user dtaylor and reassigned resource ownership.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_username", kwargs={"username": "dtaylor"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-db-schema"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 removed from user U-019."}),
                        Action(name="get_resource_by_name", kwargs={"name": "dev-database-server"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-007", "new_owner_id": "U-001"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-007", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-007 transferred from user U-019 to U-001."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Audit Remediation",
                                                                     "description": "Remediated audit finding: Revoked unnecessary 'engineering-db-schema' role from user dtaylor and reassigned resource ownership.",
                                                                     "requester_id": "U-029", "category": "Compliance", "assignee_id": "U-005"})
                ],
                outputs=['"user_id": "U-019", "revoked_role": "ROL-004"', '"resource_id": "RES-007", "owner_id": "U-001"', '"ticket_id": "TI-054", "status": "OPEN"',
                         '"user_id": "U-019", "roles": ["engineering-base", "engineering-qa-test"]']
        ),
        Task(
                annotator="1",
                user_id="task_049",
                instruction="You are Sarah Williams, Marketing Lead. You need to reject access request AR-021 from Angela Phillips for the 'marketing-content-editor' role. The justification for rejection is 'Role requires additional training, which has not been completed.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-021"}),
                        Action(name="get_user_by_username", kwargs={"username": "aphillips"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-026"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-021", "status": "REJECTED", "reviewed_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ACCESS_REJECTED", "target_id": "AR-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-021 rejected by user U-002."}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-026"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-023", "status": "CLOSED",
                                                                            "note": "Access request AR-021 has been denied. Reason: Role requires additional training, which has not been completed."}),
                        Action(name="send_email", kwargs={"receiver": "angela.phillips@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-021) has been rejected for the following reason: Role requires additional training, which has not been completed."})
                ],
                outputs=['"request_id": "AR-021", "status": "REJECTED"', '"email_id": "EM-016", "subject": "Access Request Rejected"']
        ),
        Task(
                annotator="1",
                user_id="task_050",
                instruction="You are Michael Davis, Operations Lead. James Moore has left the company. You must execute his offboarding process.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "jmoore"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-011", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-011 status changed to 'DISABLED' by user U-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-011"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-011", "role_id": "ROL-021"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-021 removed from user U-011."}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-011"}),
                        Action(name="get_resource_by_name", kwargs={"name": "database-cluster-primary"}),
                        Action(name="get_resource_by_name", kwargs={"name": "log-management-system"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-026", "new_owner_id": "U-005"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-029", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-026", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-026 transferred from user U-011 to U-005."}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-029", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-029 transferred from user U-011 to U-005."}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "Offboard employee James Moore (jmoore)",
                                       "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked", "requester_id": "U-005",
                                       "category": "Offboarding", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-011"}),
                ],
                outputs=['"user_id": "U-011", "status": "DISABLED"', '"user_id": "U-011", "roles": []', '"ticket_id": "TI-054"', '"resource_id": "RES-026", "owner_id": "U-005"',
                         '"resource_id": "RES-029", "owner_id": "U-005"']
        ),
        Task(
                annotator="1",
                user_id="task_051",
                instruction="You are Patrick Carter, an IT Auditor. The owner of the 'salesforce-crm-prod' resource, David Brown, is on extended leave. You must create a temporary 'sales-crm-approver' role (description: 'Temporary role to approve CRM access requests during owner's absence.') and assign it to Matthew Lopez to handle approvals. The role needs the 'read-crm-customer' and 'update-crm-opportunity' permissions.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Matthew", "last_name": "Lopez"}),
                        Action(name="get_resource_by_name", kwargs={"name": "salesforce-crm-prod"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role",
                               kwargs={"role_name": "sales-crm-approver", "description": "Temporary role to approve CRM access requests during owner's absence.",
                                       "is_temporary": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-029."}),
                        Action(name="create_permission", kwargs={"action": "read-crm-customer", "resource_id": "RES-014"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-029."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "PERMISSION_ASSIGNED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Permission P-113 assigned to role ROL-043."}),
                        Action(name="create_permission", kwargs={"action": "update-crm-opportunity", "resource_id": "RES-014"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "PERMISSION_CREATED", "target_id": "P-114", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-114 created by user U-029."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-114"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "PERMISSION_ASSIGNED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Permission P-114 assigned to role ROL-043."}),
                        Action(name="grant_role", kwargs={"user_id": "U-009", "role_id": "ROL-043", "assigned_by": "U-029"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "ROLE_GRANTED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-009."})
                ],
                outputs=['"role_id": "ROL-043"', '"permission_id": "P-113"', '"permission_id": "P-114"', '"assigned_user": "U-009"']
        ),
        Task(
                annotator="1",
                user_id="task_052",
                instruction="You are the automated RBAC system. The temporary 'engineering-prod-access' role for Ryan Baker has expired. You must revoke the role and notify him.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "rbaker"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-025", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-025", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-025."}),
                        Action(name="send_email", kwargs={"receiver": "ryan.baker@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'engineering-prod-access' has expired and has been revoked."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-025"}),
                        # Action(name="get_users_by_role", kwargs={"role_name": "engineering-lead"}),
                ],
                outputs=['"user_id": "U-025", "roles": ["engineering-base"]']
        ),
        Task(
                annotator="1",
                user_id="task_053",
                instruction="You are Sarah Williams, marketing lead. You need to review and approve the pending access request AR-021 for temporary access to the 'marketing-content-editor' role for a cross-departmental project. The access should expire in 60 days.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-021"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-021", "status": "APPROVED", "reviewed_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ACCESS_GRANTED", "target_id": "AR-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-021 granted by user U-002."}),
                        Action(name="grant_role", kwargs={"user_id": "U-026", "role_id": "ROL-010", "assigned_by": "U-002", "expires_on": "2025-10-07T09:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-010 added to user U-026."}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-026"}),
                        Action(name="send_email", kwargs={"receiver": "angela.phillips@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Approved", "text_content": "Your access request (AR-021) has been approved."}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-026"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-023", "status": "CLOSED", "note": "Access request AR-021 has been approved."})
                ],
                outputs=['"request_id": "AR-021", "status": "APPROVED"',
                         '"user_id": "U-026", "roles": ["marketing-base", "marketing-campaign-manager", "marketing-content-editor"]', '"ticket_id": "TI-023", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_054",
                instruction="You are the automated RBAC system. You've detected a HIGH severity SIEM alert (ALRT-005) for an unauthorised access attempt by Sarah Williams on the 'production-web-server-1'. You must execute the appropriate actions.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "swilliams"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-002", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-002 status changed to SUSPENDED by user U-031."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-002."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-lead"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-035"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-035 removed from user U-002."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Security Incident",
                                                                     "description": "User Sarah Williams (swilliams) account suspended due to unauthorised access attempt on production-web-server-1.",
                                                                     "requester_id": "U-031", "category": "Security incident", "assignee_id": "U-005"}),
                        # Action(name="send_slack_message", kwargs={"username": "RBAC_BOT", "channel": "#security-alerts", "message": "HIGH-SEVERITY ALERT: User U-002 (swilliams) suspended and marketing-lead role revoked due to alert ALRT-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"})
                ],
                outputs=['"user_id": "U-002", "status": "SUSPENDED"', '"user_id": "U-002", "roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_055",
                instruction="You are Jessica Garcia. To align with new compliance policies, you must ensure all users in your department have MFA enabled.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="get_users_by_department", kwargs={"department": "Finance"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-024", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "USER_MFA_ENABLED", "target_id": "U-024", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-024 by user U-006."}),
                        Action(name="send_email", kwargs={"receiver": "katherine.hall@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-030", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "USER_MFA_ENABLED", "target_id": "U-030", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-030 by user U-006."}),
                        Action(name="send_email", kwargs={"receiver": "marisa.cole@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                ],
                outputs=['"user_id": "U-024", "mfa_enabled": true', '"user_id": "U-030", "mfa_enabled": true']
        ),
        Task(
                annotator="1",
                user_id="task_056",
                instruction="You are Alex Johnson, Engineering Lead. Christopher Rodriguez needs the temporary role role 'hotfix-deployment-override' for an urgent deployment on the 'customer-facing-api' over the next 8h. The role description is 'Temporary override for hotfix deployment'. You need to set up the required permissions. Set up a permission 'admin-access-customer-facing-api' (description: 'Allows admin access to customer API') for the new role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_resource_by_name", kwargs={"name": "customer-facing-api"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_permission",
                               kwargs={"action": "admin-access-customer-facing-api", "resource_id": "RES-005", "description": "Allows admin access to customer API"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-001."}),
                        Action(name="create_role",
                               kwargs={"role_name": "hotfix-deployment-override", "description": "Temporary override for hotfix deployment.", "is_temporary": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-001", "action_type": "PERMISSION_ASSIGNED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Permission P-113 assigned to role ROL-043."}),
                        Action(name="grant_role", kwargs={"user_id": "U-007", "role_id": "ROL-043", "assigned_by": "U-001", "expires_on": "2025-08-08T17:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-007."})
                ],
                outputs=['"role_id": "ROL-043"', '"assigned_user": "U-007"']
        ),
        Task(
                annotator="1",
                user_id="task_057",
                instruction="You are Michael Davis, the Operations Lead. The investigation into SIEM alert TI-053 involving Emily Jones has concluded it was a false positive. You need to reactivate her account and close the investigation ticket TI-053 with the note: 'Investigation complete. Account reactivated.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "ejones"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-004", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-004 status changed to 'ACTIVE' by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "emily.jones@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account Reactivated",
                                                          "text_content": "Your account has been reactivated and your access has been restored."}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-053", "status": "CLOSED", "note": "Investigation complete. Account reactivated."})
                ],
                outputs=['"user_id": "U-004", "status": "ACTIVE"', '"ticket_id": "TI-053", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_058",
                instruction="You are Jessica Garcia, Finance Lead. A recent audit requires that you create two new permissions, 'view-expense-reports' (description: 'Allows viewing of all expense reports') and 'approve-expense-report' (description: 'Allows approving submitted expense reports'), on the 'expense-reporting-tool' resource. Assign both permissions to the existing 'finance-read' role.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="get_resource_by_name", kwargs={"name": "expense-reporting-tool"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_permission",
                               kwargs={"action": "view-expense-reports", "resource_id": "RES-036", "description": "Allows viewing of all expense reports"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-006", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-006."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-read"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-030", "permission_id": "P-113"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "PERMISSION_ASSIGNED", "target_id": "ROL-030", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Permission P-113 assigned to role ROL-030."}),
                        Action(name="create_permission",
                               kwargs={"action": "approve-expense-report", "resource_id": "RES-036", "description": "Allows approving submitted expense reports"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-006", "action_type": "PERMISSION_CREATED", "target_id": "P-114", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-114 created by user U-006."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-030", "permission_id": "P-114"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "PERMISSION_ASSIGNED", "target_id": "ROL-030", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Permission P-114 assigned to role ROL-030."}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-030"})
                ],
                outputs=['"role_id": "ROL-030", "permissions": ["P-075", "P-083", "P-085", "P-113", "P-114"]']
        ),
        Task(
                annotator="1",
                user_id="task_059",
                instruction="You are Jessica Garcia, Finance Lead. You are handing over ownership of the 'general-ledger-db' to your colleague Stephanie Adams (access request justification: 'Assuming ownership of general-ledger-db'). As the new owner, she will also require the 'finance-budget-admin' role to manage the resource. The Operations Lead must approve this lead role assignment.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Stephanie", "last_name": "Adams"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_resource_by_name", kwargs={"name": "general-ledger-db"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-031", "new_owner_id": "U-018"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-031", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-031 transferred from user U-006 to U-018."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-budget-admin"}),
                        Action(name="create_access_request",
                               kwargs={"user_id": "U-018", "requested_role_id": "ROL-032", "justification": "Assuming ownership of general-ledger-db"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-018", "action_type": "ACCESS_REQUEST_CREATED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Access request AR-042 created by user U-018."}),
                        Action(name="send_slack_message", kwargs={"username": "sadams", "channel": "#access-requests",
                                                                  "message": "Access request AR-042 for resource RES-031 has been created by user U-018. Please review."}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Access Request",
                                                                     "description": "Access request AR-042: Role ROL-032 for sadams (U-018).",
                                                                     "requester_id": "U-018", "category": "Access Management", "assignee_id": "U-005"}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-042", "status": "APPROVED", "reviewed_by": "U-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ACCESS_GRANTED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-042 granted by user U-005."}),
                        Action(name="grant_role", kwargs={"user_id": "U-018", "role_id": "ROL-032", "assigned_by": "U-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-018", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-032 added to user U-018."}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-054", "status": "CLOSED", "note": "Access request AR-042 has been approved."}),
                ],
                outputs=['"resource_id": "RES-031", "owner_id": "U-018"', '"user_id": "U-018", "roles": ["finance-base", "finance-audit-access", "finance-budget-admin"]']
        ),
        Task(
                annotator="1",
                user_id="task_060",
                instruction="You are Ashley Wilson, HR Lead. User Matthew Lopez has left the company. You must process his offboarding.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_username", kwargs={"username": "mlopez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-009", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_STATUS_CHANGE", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-009 status changed to 'DISABLED' by user U-010."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-009"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-009", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-009."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-crm-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-009", "role_id": "ROL-012"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-012 removed from user U-009."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-lead-manager"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-009", "role_id": "ROL-013"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-013 removed from user U-009."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "sales-lead"}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-009"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "Offboard employee Matthew Lopez (mlopez)",
                                       "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked", "requester_id": "U-010",
                                       "category": "Offboarding", "assignee_id": "U-003"})
                ],
                outputs=['"user_id": "U-009", "status": "DISABLED"', '"user_id": "U-009", "roles": []']
        ),
        Task(
                annotator="1",
                user_id="task_061",
                instruction="You are Ashley Wilson, HR Lead. Employee Gary Campbell has been terminated. You must process his offboarding, which includes disabling his account, revoking his 'sales-base' role, and creating a ticket assigned to his manager, David Brown, to track the return of company assets. The ticket subject should be 'Offboarding for Gary Campbell (gcampbell)' and the description 'Complete asset recovery for terminated employee.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_username", kwargs={"username": "gcampbell"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-027", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_STATUS_CHANGE", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-027 status changed to DISABLED by user U-010."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-027", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-027."}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "Offboarding for Gary Campbell (gcampbell)", "description": "Complete asset recovery for terminated employee.",
                                       "requester_id": "U-010", "category": "Offboarding", "assignee_id": "U-003"})
                ],
                outputs=['"user_id": "U-027", "status": "DISABLED"', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_062",
                instruction="You are Alex Johnson, Engineering Lead. You need to reject the pending access request AR-027 from Christopher Rodriguez for the 'engineering-code-commit' role. The justification for the rejection is 'This level of access is no longer required for your current project.' Notify the user via email.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-027"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-027", "status": "REJECTED", "reviewed_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ACCESS_REJECTED", "target_id": "AR-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-027 rejected by user U-001."}),
                        Action(name="send_email", kwargs={"receiver": "christopher.rodriguez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-027) has been rejected for the following reason: This level of access is no longer required for your current project."})
                ],
                outputs=['"request_id": "AR-027", "status": "REJECTED"', '"email_id": "EM-016"']
        ),
        Task(
                annotator="1",
                user_id="task_063",
                instruction="You are Michael Davis, Operations Lead. You need to establish a new resource, 'disaster-recovery-plan', with 'CRITICAL' criticality, owned by you. Concurrently, you must create a new role 'disaster-recovery-viewer' (description: 'Disaster recovery plan viewer') with the permission 'read-dr-plan' (description: 'Read-only access disaster recovery') to allow read-only access to this new resource. Grand the new role to Jeffrey Green.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_resource", kwargs={"name": "disaster-recovery-plan", "owner_id": "U-005", "criticality": "CRITICAL"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-005."}),
                        Action(name="create_permission", kwargs={"action": "read-dr-plan", "resource_id": "RES-043", "description": "Read-only access disaster recovery"}),
                        Action(name="create_role", kwargs={"role_name": "disaster-recovery-viewer", "description": "Disaster recovery plan viewer"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-005."}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Jeffrey", "last_name": "Green"}),
                        Action(name="grant_role", kwargs={"user_id": "U-023", "role_id": "ROL-043", "assigned_by": "U-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-023", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-023."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-023"}),
                ],
                outputs=['"resource_id": "RES-043"', '"role_id": "ROL-043"', '"permission_id": "P-113"',
                         '"user_id": "U-023", "roles": ["operations-base","operations-incident-response","operations-deployment-admin","disaster-recovery-viewer"]']
        ),
        Task(
                annotator="1",
                user_id="task_064",
                instruction="You are Michael Davis, IT Auditor. During a review, you've found that Christopher Rodriguez's temporary 'operations-network-admin' role is no longer needed. You need to set into motion the appropriate steps.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Early Role Revocation",
                                                                     "description": "User Christopher Rodriguez (crodriguez) has a temporary role (operations-network-admin) that is no longer required and should be revoked.",
                                                                     "requester_id": "U-005", "category": "Access Management", "assignee_id": "U-001"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-network-admin"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-028"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-028 removed from user U-007."}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-054", "status": "CLOSED", "note": "Revocation complete."}),
                        Action(name="send_email", kwargs={"receiver": "christopher.rodriguez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'operations-network-admin' is no longer required and has been revoked."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-007"}),
                ],
                outputs=['"user_id": "U-007"', '"roles": ["engineering-base","engineering-code-commit","engineering-prod-access"]', '"ticket_id": "TI-054", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_065",
                instruction="You are Alex Johnson, Engineering Lead. As part of a role cleanup initiative, you need to consolidate the 'engineering-qa-test' and 'engineering-db-schema' roles. Merge all permissions and user assignments from both roles into a new, single role named 'engineering-specialist', with the description 'Consolidated role for QA and DB schema specialists.' Use description '[DEPRECATED] Merged into ROL-043.' for the old roles",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "engineering-specialist", "description": "Consolidated role for QA and DB schema specialists."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-qa-test"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-db-schema"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-005"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-004"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-018"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-006"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-007"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-009"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-db-schema"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-qa-test"}),
                        Action(name="grant_role", kwargs={"user_id": "U-019", "role_id": "ROL-043", "assigned_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_GRANTED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-019."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 removed from user U-019."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-005 removed from user U-019."}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-004"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-005"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-004", "permission_id": "P-018"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-005", "permission_id": "P-006"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-005", "permission_id": "P-007"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-005", "permission_id": "P-009"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-004"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-005"}),
                        Action(name="update_role_details",
                               kwargs={"role_id": "ROL-004", "new_name": "[DEPRECATED]engineering-db-schema", "new_description": "[DEPRECATED] Merged into ROL-043."}),
                        Action(name="update_role_details",
                               kwargs={"role_id": "ROL-005", "new_name": "[DEPRECATED]engineering-qa-test", "new_description": "[DEPRECATED] Merged into ROL-043."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_UPDATED", "target_id": "ROL-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 has been updated. name=[[DEPRECATED]engineering-db-schema] | description=[[DEPRECATED] Merged into ROL-043.]"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_UPDATED", "target_id": "ROL-005", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-005 has been updated. name=[[DEPRECATED]engineering-qa-test] | description=[[DEPRECATED] Merged into ROL-043.]"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-019"}),
                ],
                outputs=['"user_id": "U-019"', '"roles": ["engineering-base", "engineering-specialist"]']
        ),
        Task(
                annotator="1",
                user_id="task_066",
                instruction="You are Michael Davis, IT Auditor. A compliance review has identified that Lisa Anderson in Finance has the 'finance-invoice-processor' role, which presents a Separation of Duties (SoD) conflict with her primary duties. Handle the situation according to policy and use 'Revoked conflicting role finance-invoice-processor from user landerson.' for the ticket.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_user_by_username", kwargs={"username": "landerson"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-invoice-processor"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-012", "role_id": "ROL-031"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-012", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-031 removed from user U-012."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "SoD Violation", "description": "Revoked conflicting role finance-invoice-processor from user landerson.",
                                       "requester_id": "U-005", "category": "Compliance", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-012"}),
                ],
                outputs=['"user_id": "U-012"', '"roles": ["finance-base", "finance-budget-admin"]', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_067",
                instruction="You are Emily Jones, HR Lead. Paul Ellis is transferring from Sales to Marketing. You need to update his user profile to reflect this change. He needs the 'marketing-base' role for his new position.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Emily", "last_name": "Jones"}),
                        Action(name="get_user_by_username", kwargs={"username": "pellis"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-021"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_department", kwargs={"user_id": "U-021", "department": "Marketing"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-004", "action_type": "USER_DEPARTMENT_CHANGE", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "User U-021 department changed to Marketing by user U-004."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-021", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-021."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-lead-manager"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-021", "role_id": "ROL-013"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-013 removed from user U-021."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-reporting"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-021", "role_id": "ROL-014"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-014 removed from user U-021."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="grant_role", kwargs={"user_id": "U-021", "role_id": "ROL-006", "assigned_by": "U-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_GRANTED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 added to user U-021."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-021"}),
                        Action(name="send_email", kwargs={"receiver": "paul.ellis@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Welcome to the Marketing Team!",
                                                          "text_content": "Welcome, Paul! Your system access has been updated for your new role in the Marketing department."})
                ],
                outputs=['"user_id": "U-021", "department": "Marketing"', '"roles": ["marketing-base"]']
        ),
        Task(
                annotator="1",
                user_id="task_068",
                instruction="You are Michael Davis, Operations Lead. A critical incident requires immediate, high-level intervention. Create a new temporary role 'critical-incident-commander' with description 'Full administrative access for critical incident response', and assign it to yourself for the next 4 hours.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "critical-incident-commander", "description": "Full administrative access for critical incident response",
                                                           "is_temporary": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-005."}),
                        Action(name="grant_role", kwargs={"user_id": "U-005", "role_id": "ROL-043", "assigned_by": "U-005", "expires_on": "2025-08-08T13:56:15Z"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_GRANTED", "target_id": "U-005", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-005."})
                ],
                outputs=['"role_id": "ROL-043"', '"assigned_user": "U-005"']
        ),
        Task(
                annotator="1",
                user_id="task_069",
                instruction="You are Stephanie Adams from the Finance department. To complete a one-time vendor payment, you need a policy exception for the 'approve-invoice' permission (P-078) on the 'invoicing-system' resource for 48 hours. The reason is 'One-time vendor payment approval required'. Send our Manager, Jessica Garcia, an e-mail with subject 'Policy Exception Review Request' and content 'Please review approve my policy exception request (PE-021).' so that she will approve it.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Stephanie", "last_name": "Adams"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_policy_exception",
                               kwargs={"user_id": "U-018", "permission_id": "P-078", "reason": "One-time vendor payment approval required", "expires_on": "2025-08-10T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-018", "action_type": "POLICY_EXCEPTION_REQUESTED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 requested by user U-018."}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="send_email", kwargs={"receiver": "jessica.garcia@taucorp.com", "sender": "stephanie.adams@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Policy Exception Review Request",
                                                          "text_content": "Please review approve my policy exception request (PE-021)."}),
                        Action(name="approve_policy_exception", kwargs={"exception_id": "PE-021", "reviewed_by": "U-006"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-006", "action_type": "POLICY_EXCEPTION_APPROVED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 approved by user U-006."}),
                        Action(name="send_email", kwargs={"receiver": "stephanie.adams@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Policy Exception Granted",
                                                          "text_content": "Policy exception for permission 'approve-invoice' granted. Expiration: 2025-08-10T09:56:15Z."})
                ],
                outputs=['"exception_id": "PE-021", "status": "ACTIVE"', '"email_id": "EM-016"', '"email_id": "EM-017"']
        ),
        Task(
                annotator="1",
                user_id="task_070",
                instruction="You are the automated certification bot. You need to initiate the quarterly access certification for the 'production-web-server-1' resource. Assign the task to the operations lead.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "CERTIFICATION_BOT"}),
                        Action(name="get_resource_by_name", kwargs={"name": "production-web-server-1"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_certification", kwargs={"reviewer_id": "U-005", "resource_id": "RES-025", "due_date": "2025-09-08T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-033", "action_type": "CERTIFICATION_CREATED", "target_id": "C-024", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Certification C-024 requested by user U-033."}),
                        Action(name="send_slack_message", kwargs={"username": "CERTIFICATION_BOT", "channel": "#certifications",
                                                                  "message": "A new certification C-024 for resource RES-025 has been requested. Due date 2025-09-08T09:56:15Z"})
                ],
                outputs=['"certification_id": "C-024", "status": "PENDING"', '"message_id": "SL-042"']
        ),
        Task(
                annotator="1",
                user_id="task_071",
                instruction="You are Michael Davis, Operations Lead. As part of a new security mandate, you must enforce MFA for the entire Sales department.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_users_by_department", kwargs={"department": "Sales"}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-021", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-021 by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "paul.ellis@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-027", "mfa_enabled": True}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "MFA enabled for user U-027 by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "gary.campbell@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                ],
                outputs=['"user_id": "U-003", "mfa_enabled": true', '"user_id": "U-009", "mfa_enabled": true', '"user_id": "U-015", "mfa_enabled": true',
                         '"user_id": "U-021", "mfa_enabled": true', '"user_id": "U-027", "mfa_enabled": true']
        ),
        Task(
                annotator="1",
                user_id="task_072",
                instruction="You are the automated RBAC system. As part of a quarterly cleanup, you must identify and suspend all user accounts that have been inactive since May 1st, 2025.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="list_inactive_users", kwargs={"inactive_since": "2025-05-01T00:00:00Z"}),
                        Action(name="update_user_status", kwargs={"user_id": "U-028", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-028", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-028 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-030", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-030", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-030 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-018", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-018", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-018 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-025", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-025", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-025 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-003", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-003 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-010", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-010", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-010 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-015", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-015 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-014", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-014 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-023", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-023", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-023 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-007", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-007 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-020", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-020", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-020 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-001", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-001", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-001 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-011", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-011 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-031", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-031", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-031 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-029", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-029", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-029 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-013", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-013", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-013 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-026", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-026 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-008", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-008", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-008 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-006", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-006", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-006 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-033", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-033", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-033 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-032", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-032", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-032 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-027", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-027 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-016", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-016", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-016 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-022", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-022", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-022 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-012", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-012", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-012 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-021", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-021 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-004", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-004", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-004 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-002", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-002 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-009", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-009 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-017", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-017 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-024", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-024", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-024 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-005", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-005", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-005 status changed to 'SUSPENDED' by user U-031."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-019", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-019 status changed to 'SUSPENDED' by user U-031."})
                ],
                outputs=[
                        '"user_id": "U-028", "status": "SUSPENDED"', '"user_id": "U-030", "status": "SUSPENDED"', '"user_id": "U-018", "status": "SUSPENDED"',
                        '"user_id": "U-025", "status": "SUSPENDED"', '"user_id": "U-003", "status": "SUSPENDED"', '"user_id": "U-010", "status": "SUSPENDED"',
                        '"user_id": "U-015", "status": "SUSPENDED"', '"user_id": "U-014", "status": "SUSPENDED"', '"user_id": "U-023", "status": "SUSPENDED"',
                        '"user_id": "U-007", "status": "SUSPENDED"', '"user_id": "U-020", "status": "SUSPENDED"', '"user_id": "U-001", "status": "SUSPENDED"',
                        '"user_id": "U-011", "status": "SUSPENDED"', '"user_id": "U-031", "status": "SUSPENDED"', '"user_id": "U-029", "status": "SUSPENDED"',
                        '"user_id": "U-013", "status": "SUSPENDED"', '"user_id": "U-026", "status": "SUSPENDED"', '"user_id": "U-008", "status": "SUSPENDED"',
                        '"user_id": "U-006", "status": "SUSPENDED"', '"user_id": "U-033", "status": "SUSPENDED"', '"user_id": "U-032", "status": "SUSPENDED"',
                        '"user_id": "U-027", "status": "SUSPENDED"', '"user_id": "U-016", "status": "SUSPENDED"', '"user_id": "U-022", "status": "SUSPENDED"',
                        '"user_id": "U-012", "status": "SUSPENDED"', '"user_id": "U-021", "status": "SUSPENDED"', '"user_id": "U-004", "status": "SUSPENDED"',
                        '"user_id": "U-002", "status": "SUSPENDED"', '"user_id": "U-009", "status": "SUSPENDED"', '"user_id": "U-017", "status": "SUSPENDED"',
                        '"user_id": "U-024", "status": "SUSPENDED"', '"user_id": "U-005", "status": "SUSPENDED"', '"user_id": "U-019", "status": "SUSPENDED"'
                ]
        ),
        Task(
                annotator="1",
                user_id="task_073",
                instruction="You are Alex Johnson, Engineering Lead. For an emergency database migration, you need to grant Brian Taylor the 'admin-db-cluster' permission (description: 'Temporary permission for emergency migration') on the for the 'database-cluster-primary' for 24 hours. This is an exceptional measure with the reason 'Emergency database migration'.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_user_by_username", kwargs={"username": "btaylor"}),
                        Action(name="get_resource_by_name", kwargs={"name": "database-cluster-primary"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_permission",
                               kwargs={"action": "admin-db-cluster", "resource_id": "RES-026", "description": "Temporary permission for emergency migration"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "PERMISSION_CREATED", "target_id": "P-113", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Permission P-113 created by user U-001."}),
                        Action(name="create_policy_exception",
                               kwargs={"user_id": "U-013", "permission_id": "P-113", "reason": "Emergency database migration", "expires_on": "2025-08-09T09:56:15Z"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-001", "action_type": "POLICY_EXCEPTION_REQUESTED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 requested by user U-001"}),
                        Action(name="approve_policy_exception", kwargs={"exception_id": "PE-021", "reviewed_by": "U-001"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-001", "action_type": "POLICY_EXCEPTION_APPROVED", "target_id": "PE-021", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Policy exception PE-021 approved by user U-001."}),
                        Action(name="send_email", kwargs={"receiver": "brian.taylor@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Policy Exception Granted",
                                                          "text_content": "Policy exception for permission 'admin-db-cluster' granted. Expiration: 2025-08-09T09:56:15Z."})
                ],
                outputs=['"exception_id": "PE-021", "status": "ACTIVE"']
        ),
        Task(
                annotator="1",
                user_id="task_074",
                instruction="You are Ashley Wilson, HR Lead. Jessica Garcia, the Finance Lead, has resigned. You must initiate her offboarding process.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-006", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_STATUS_CHANGE", "target_id": "U-006", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-006 status changed to DISABLED by user U-010."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-006", "role_id": "ROL-029"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-006", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-029 removed from user U-006."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-lead"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-006", "role_id": "ROL-039"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-006", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-039 removed from user U-006."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Offboard employee Jessica Garcia (jgarcia)",
                                                                     "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked",
                                                                     "requester_id": "U-010", "category": "Offboarding", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-006"}),
                ],
                outputs=['"user_id": "U-006", "status": "DISABLED"', '"user_id": "U-006", "roles": []', '"ticket_id": "TI-054"']
        ),
        Task(
                annotator="1",
                user_id="task_075",
                instruction="You are Kevin Harris from the Sales team. For a joint project, you require the 'marketing-campaign-manager' role for the 'social-media-platform' using the justification 'Requires campaign manager access for joint sales-marketing project.'. Your request needs approval from your manager, Matthew Lopez, (status: 'MANAGER_APPROVED') and then from the Marketing Lead, Sarah Williams. (status: 'APPROVED')",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Kevin", "last_name": "Harris"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Matthew", "last_name": "Lopez"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_resource_by_name", kwargs={"name": "social-media-platform"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_access_request",
                               kwargs={"user_id": "U-015", "requested_role_id": "ROL-007", "resource_id": "RES-008",
                                       "justification": "Requires campaign manager access for joint sales-marketing project."}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-015", "action_type": "ACCESS_REQUEST_CREATED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Access request AR-042 created by user U-015."}),
                        Action(name="send_slack_message", kwargs={"username": "kharris", "channel": "#access-requests",
                                                                  "message": "Access request AR-042 for resource RES-008 has been created by user U-015. Please review."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Access Request",
                                                                     "description": "Access request AR-042: Role ROL-007 for kharris (U-015).",
                                                                     "requester_id": "U-015", "category": "Access Management", "assignee_id": "U-009"}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-042", "status": "MANAGER_APPROVED", "reviewed_by": "U-009"}),
                        Action(name="update_hubspot_ticket_assignee", kwargs={"ticket_id": "TI-054", "new_assignee_id": "U-002"}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-042", "status": "APPROVED", "reviewed_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ACCESS_GRANTED", "target_id": "AR-042", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-042 granted by user U-002."}),
                        Action(name="grant_role", kwargs={"user_id": "U-015", "role_id": "ROL-007", "assigned_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-007 added to user U-015."}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-054", "status": "CLOSED", "note": "Access request AR-042 has been approved"}),

                ],
                outputs=['"request_id": "AR-042", "status": "APPROVED"', '"ticket_id": "TI-054", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_076",
                instruction="You are Emily Jones, HR Lead. Marketing employee Angela Phillips has resigned. You must process her offboarding",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Emily", "last_name": "Jones"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Angela", "last_name": "Phillips"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-026", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "USER_STATUS_CHANGE", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-026 status changed to DISABLED by user U-004."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-026"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-026."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-007"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-007 removed from user U-026."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-content-editor"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-010 removed from user U-026."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-lead"}),
                        Action(name="create_hubspot_ticket",
                               kwargs={"subject": "Offboard employee Angela Phillips (aphillips)",
                                       "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked.",
                                       "requester_id": "U-004", "category": "Offboarding", "assignee_id": "U-002"})
                ],
                outputs=['"user_id": "U-026", "status": "DISABLED"', '"user_id": "U-026", "roles": []']
        ),
        Task(
                annotator="1",
                user_id="task_077",
                instruction="You are Ashley Wilson from Human Resources. Employee Laura Jackson has gotten married and is changing her last name to 'Smith'. You need to update her user profile to use the correct new username and email address.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Laura", "last_name": "Jackson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_details", kwargs={"user_id": "U-016", "new_username": "lsmith", "new_email": "laura.smith@taucorp.com"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USERNAME_CHANGED", "target_id": "U-016", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Username for user U-016 changed to 'lsmith' by user U-010."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_EMAIL_CHANGED", "target_id": "U-016", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Email address for user U-016 changed to 'laura.smith@taucorp.com' by user U-010."}),
                        Action(name="send_email", kwargs={"receiver": "laura.smith@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Your User Profile Has Been Updated",
                                                          "text_content": "This is a notification that your accounts details have been updated. Please review the changed information and report any inconsistencies to Human Ressources."})
                ],
                outputs=['"user_id": "U-016", "username": "lsmith", "email": "laura.smith@taucorp.com"', '"email_id": "EM-016", "status": "sent"']
        ),
        Task(
                annotator="1",
                user_id="task_078",
                instruction="You are Stephanie Adams, a resource owner in the Finance department. You are transitioning to a new role and need to reassign ownership of the 'budgeting-tool' resource to your colleague, Lisa Anderson.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Stephanie", "last_name": "Adams"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Lisa", "last_name": "Anderson"}),
                        Action(name="get_resource_by_name", kwargs={"name": "budgeting-tool"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-033", "new_owner_id": "U-012"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-018", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-033", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-033 transferred from user U-018 to U-012."}),
                        Action(name="get_resource_by_name", kwargs={"name": "budgeting-tool"})
                ],
                outputs=['"resource_id": "RES-033", "owner_id": "U-012"']
        ),
        Task(
                annotator="1",
                user_id="task_079",
                instruction="You are the automated RBAC system. A compliance scan has identified that Lisa Anderson holds both the 'finance-invoice-processor' and 'finance-budget-admin' roles, which is an SoD violation. You must remediate this by revoking the 'finance-invoice-processor'. Use 'Revoked conflicting role 'finance-invoice-processor' from user 'landerson' as per audit finding.' for ticket content.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "landerson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-invoice-processor"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-012", "role_id": "ROL-031"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-012", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-031 removed from user U-012."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-012"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "SoD Violation",
                                                                     "description": "Revoked conflicting role 'finance-invoice-processor' from user 'landerson' as per audit finding.",
                                                                     "requester_id": "U-031", "category": "Compliance", "assignee_id": "U-005"}),
                        # Action(name="send_email", kwargs={"receiver": "lisa.anderson@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                        #                                   "subject": "Role Change Notification",
                        #                                   "text_content": "Your 'finance-invoice-processor' role has been revoked as part of an automated compliance remediation."})
                ],
                outputs=['"user_id": "U-012", "roles": ["finance-base", "finance-budget-admin"]', '"ticket_id": "TI-054", "status": "OPEN"']
        ),
        Task(
                annotator="1",
                user_id="task_080",
                instruction="You are Emily Jones, HR Lead. Daniel Taylor is transferring from the Engineering department to the Operations department to become a Network Admin. You need to update his profile and grant him the 'operations-base' and 'operations-network-admin' roles.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Emily", "last_name": "Jones"}),
                        Action(name="get_user_by_username", kwargs={"username": "dtaylor"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_department", kwargs={"user_id": "U-019", "department": "Operations"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-004", "action_type": "USER_DEPARTMENT_CHANGED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "User U-019 department changed to Operations by user U-004."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-019"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-001 removed from user U-019."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-db-schema"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-004 removed from user U-019."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-qa-test"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-019", "role_id": "ROL-005"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_REVOKED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-005 removed from user U-019."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-base"}),
                        Action(name="grant_role", kwargs={"user_id": "U-019", "role_id": "ROL-021", "assigned_by": "U-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_GRANTED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-021 added to user U-019."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-network-admin"}),
                        Action(name="grant_role", kwargs={"user_id": "U-019", "role_id": "ROL-028", "assigned_by": "U-004"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-004", "action_type": "ROLE_GRANTED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-028 added to user U-019."}),
                        Action(name="send_email", kwargs={"receiver": "daniel.taylor@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Welcome to the Operations Team!",
                                                          "text_content": "Welcome, Daniel! Your system access has been updated for your new role in the Operations department."})
                ],
                outputs=['"user_id": "U-019", "department": "Operations"', '"user_roles": ["operations-base", "operations-network-admin"]']
        ),
        Task(
                annotator="1",
                user_id="task_081",
                instruction="You are Patrick Carter. You must ensure that all active users in the Marketing department who do not have MFA enabled must have it activated immediately.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_users_by_department", kwargs={"department": "Marketing"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-002", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "USER_MFA_ENABLED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-002 by user U-029."}),
                        Action(name="send_email", kwargs={"receiver": "sarah.williams@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-014", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "USER_MFA_ENABLED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-014 by user U-029."}),
                        Action(name="send_email", kwargs={"receiver": "nicole.thomas@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        #Action(name="get_user_by_username", kwargs={"username": "swilliams"}),
                        #Action(name="get_user_by_username", kwargs={"username": "nthomas"})
                ],
                outputs=['"user_id": "U-002", "mfa_enabled": true', '"user_id": "U-014", "mfa_enabled": true']
        ),
        Task(
                annotator="1",
                user_id="task_082",
                instruction="You are Patrick Carter, an IT Auditor. A compliance review has found that James Moore, a user with a 'DISABLED' account, is still the owner of some resources. You must reassign ownership of these resources to the current operations lead and also remove any roles that James may still hold. Open an audit remdiation ticket if any are found.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_username", kwargs={"username": "jmoore"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-011"}),
                        Action(name="get_resource_by_name", kwargs={"name": "database-cluster-primary"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-026", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-026", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-026 transferred from user U-011 to U-005."}),
                        Action(name="get_resource_by_name", kwargs={"name": "log-management-system"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-029", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-029", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-029 transferred from user U-011 to U-005."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-011"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-011", "role_id": "ROL-021"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "ROLE_REVOKED", "target_id": "U-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-021 removed from user U-011."}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Audit Remediation",
                                                                     "description": "Revoked redundant role 'operations-base' from user 'jmoore' as per audit finding.",
                                                                     "requester_id": "U-029", "category": "Compliance", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-011"}),
                ],
                outputs=['"resource_id": "RES-026", "owner_id": "U-005"', '"resource_id": "RES-029", "owner_id": "U-005"', '"user_id": "U-011", "roles": []',
                         '"ticket_id": "TI-054", "status": "OPEN"']
        ),
        Task(
                annotator="1",
                user_id="task_083",
                instruction="You are Alex Johnson, Engineering Lead. You need to consolidate the 'engineering-qa-test' and 'engineering-code-commit' roles into a new 'engineering-developer-advanced' role. The new role's description is 'Advanced developer role with QA and code commit privileges.'. All users and permissions from the old roles need to be migrated to the new one.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role",
                               kwargs={"role_name": "engineering-developer-advanced", "description": "Advanced developer role with QA and code commit privileges."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-001."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-qa-test"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-code-commit"}),
                        Action(name="merge_and_deprecate_role", kwargs={"source_role_id": "ROL-005", "target_role_id": "ROL-043", "actor_id": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_MERGED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-005 merged into ROL-043."}),
                        Action(name="merge_and_deprecate_role", kwargs={"source_role_id": "ROL-002", "target_role_id": "ROL-043", "actor_id": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ROLE_MERGED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-002 merged into ROL-043."}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-043"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "engineering-developer-advanced"})
                ],
                outputs=['"role_id": "ROL-043"', '"permissions_migrated": 4', '"users_reassigned": 2']
        ),
        Task(
                annotator="1",
                user_id="task_084",
                instruction="You are Patrick Carter, an IT Auditor. A quarterly review has identified that the 'sales-commission-view' role is no longer in use and needs to be deprecated. Take the steps prescribed in policy and update the deprecated role's description to '[DEPRECATED] Role is no longer in use and is scheduled for deletion.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-commission-view"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "sales-commission-view"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-015"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-015", "permission_id": "P-044"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-015"}),
                        Action(name="update_role_details", kwargs={"role_id": "ROL-015", "new_name": "[DEPRECATED]sales-commission-view",
                                                                   "new_description": "[DEPRECATED] Role is no longer in use and is scheduled for deletion."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-029", "action_type": "ROLE_UPDATED", "target_id": "ROL-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-015 has been updated. name=[[DEPRECATED]sales-commission-view] | description=[[DEPRECATED] Role is no longer in use and is scheduled for deletion.]"}),
                ],
                outputs=['"role_id": "ROL-015", "status": "updated"', '"role_id": "ROL-015", "permissions": []']
        ),
        Task(
                annotator="1",
                user_id="task_085",
                instruction="You are the automated RBAC system. You have detected that the temporary role 'finance-audit-access' for user Stephanie Adams has expired. Handle this according to policy.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "sadams"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-audit-access"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-018", "role_id": "ROL-033"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-018", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-033 removed from user U-018."}),
                        Action(name="send_email", kwargs={"receiver": "stephanie.adams@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'finance-audit-access' has expired and has been revoked."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-018"}),
                        # Action(name="get_users_by_role", kwargs={"role_name": "finance-lead"}),
                        # Action(name="create_hubspot_ticket", kwargs={"subject": "Temporary Role Expired", "description": "Temporary role 'finance-audit-access' for user Stephanie Adams (sadams) has expired and been revoked.", "requester_id": "U-031", "category": "Access Management", "assignee_id": "U-006"})
                ],
                outputs=['"user_id": "U-018", "roles": ["finance-base"]']
        ),
        Task(
                annotator="1",
                user_id="task_086",
                instruction="You are Alex Johnson, Engineering Lead. You need to reject access request AR-024 from yourself because it was created in error.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Alex", "last_name": "Johnson"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-024"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-024", "status": "REJECTED", "reviewed_by": "U-001"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-001", "action_type": "ACCESS_REJECTED", "target_id": "AR-024", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-024 rejected by user U-001."}),
                        Action(name="send_email", kwargs={"receiver": "alex.johnson@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-024) has been rejected for the following reason: Created in error."}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-001"}),
                        Action(name="update_hubspot_ticket_status",
                               kwargs={"ticket_id": "TI-026", "status": "CLOSED", "note": "Access request AR-024 has been denied. Reason: Created in error."})
                ],
                outputs=['"request_id": "AR-024", "status": "REJECTED"', '"ticket_id": "TI-026", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_087",
                instruction="You are David Brown, Sales Lead. A new 'sales-forecasting-tool' resource needs to be created with 'HIGH' criticality, owned by you. This also needs a new associated role 'sales-forecaster' with a permission 'read-forecast-data' for this resource that can be granted to your team members, Kevin Harris and Paul Ellis.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Kevin", "last_name": "Harris"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Paul", "last_name": "Ellis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_resource", kwargs={"name": "sales-forecasting-tool", "owner_id": "U-003", "criticality": "HIGH"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "RESOURCE_CREATED", "target_id": "RES-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Resource RES-043 created by user U-003."}),
                        Action(name="create_role_with_permission", kwargs={"role_name": "sales-forecaster", "resource_id": "RES-043", "permission_name": "read-forecast-data"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-003."}),
                        Action(name="grant_role", kwargs={"user_id": "U-015", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-015."}),
                        Action(name="grant_role", kwargs={"user_id": "U-021", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-021."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-015"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-021"}),
                ],
                outputs=['"resource_id": "RES-043"', '"role_id": "ROL-043"', '"user_id": "U-015", "roles": ["sales-base", "sales-forecaster"]',
                         '"user_id": "U-021", "roles": ["sales-base", "sales-lead-manager", "sales-reporting", "sales-forecaster"]']
        ),
        Task(
                annotator="1",
                user_id="task_088",
                instruction="You are David Brown, Sales Lead. You need to reject access request AR-040 from Nicole Thomas because she is not authorised to access analytics data (reason: 'Not authorised').",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-040"}),
                        Action(name="get_user_by_username", kwargs={"username": "nthomas"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-040", "status": "REJECTED", "reviewed_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ACCESS_REJECTED", "target_id": "AR-040", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-040 rejected by user U-003."}),
                        Action(name="send_email", kwargs={"receiver": "nicole.thomas@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-040) has been rejected for the following reason: Not authorised."}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-014"}),
                        Action(name="update_hubspot_ticket_status",
                               kwargs={"ticket_id": "TI-042", "status": "CLOSED", "note": "Access request AR-040 has been denied. Reason: Not authorised."})
                ],
                outputs=['"request_id": "AR-040", "status": "REJECTED"', '"ticket_id": "TI-042", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_089",
                instruction="You are Ashley Wilson, HR Lead. Samantha Evans, whose account was suspended, is returning to her duties. You need to reactivate her account and grant her the 'marketing-social-media' role to allow her to manage the company's social media presence.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_username", kwargs={"username": "sevans"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-020", "status": "ACTIVE"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_STATUS_CHANGE", "target_id": "U-020", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-020 status changed to 'ACTIVE' by user U-010."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-social-media"}),
                        Action(name="grant_role", kwargs={"user_id": "U-020", "role_id": "ROL-008", "assigned_by": "U-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_GRANTED", "target_id": "U-020", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-008 added to user U-020."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-020"}),
                        Action(name="send_email", kwargs={"receiver": "samantha.evans@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Account Reactivated",
                                                          "text_content": "Your account has been reactivated and your access has been restored."}),
                ],
                outputs=['"user_id": "U-020", "status": "ACTIVE"', '"roles": ["marketing-base", "marketing-social-media"]']
        ),
        Task(
                annotator="1",
                user_id="task_090",
                instruction="You are the automated RBAC system. You must process the termination of employee Robert White from the Operations department.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "rwhite"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-017", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "USER_STATUS_CHANGE", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-017 status changed to 'DISABLED' by user U-031."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-017"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-017", "role_id": "ROL-021"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-021 removed from user U-017."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-server-monitor"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-017", "role_id": "ROL-022"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-022 removed from user U-017."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "operations-log-viewer"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-017", "role_id": "ROL-024"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-017", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-024 removed from user U-017."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Offboard employee Robert White (rwhite)",
                                                                     "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked",
                                                                     "requester_id": "U-031", "category": "Offboarding", "assignee_id": "U-005"}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-017"}),
                        Action(name="get_resource_by_name", kwargs={"name": "network-firewall-main"}),
                        Action(name="get_resource_by_name", kwargs={"name": "monitoring-dashboard-main"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-027", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-031", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-027", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-027 transferred from user U-017 to U-005."}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-030", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-031", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-030", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-030 transferred from user U-017 to U-005."}),
                        Action(name="get_resource_by_name", kwargs={"name": "network-firewall-main"}),
                        Action(name="get_resource_by_name", kwargs={"name": "monitoring-dashboard-main"}),

                ],
                outputs=['"user_id": "U-017", "status": "DISABLED"', '"user_id": "U-017", "roles": []', '"ticket_id": "TI-054", "status": "OPEN"',
                         '"resource_id": "RES-027", "owner_id": "U-005"', '"resource_id": "RES-030", "owner_id": "U-005"']
        ),
        Task(
                annotator="1",
                user_id="task_091",
                instruction="You are David Brown, Sales Lead. The 'sales-base' role is being deprecated and replaced with a new, more comprehensive 'sales-standard-access' role. The description for the new role is 'Standard access for all non-lead sales personnel.'. You must migrate all users from the old role to the new one and then mark the old role as deprecated using the description '[DEPRECATED] Merged into ROL-043.'.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "sales-standard-access", "description": "Standard access for all non-lead sales personnel."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-003."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-base"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "sales-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-003", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_REVOKED", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-003."}),
                        Action(name="grant_role", kwargs={"user_id": "U-003", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-003."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-009", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_REVOKED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-009."}),
                        Action(name="grant_role", kwargs={"user_id": "U-009", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-009", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-009."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-015", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_REVOKED", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-015."}),
                        Action(name="grant_role", kwargs={"user_id": "U-015", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-015", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-015."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-021", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_REVOKED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-021."}),
                        Action(name="grant_role", kwargs={"user_id": "U-021", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-021."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-027", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_REVOKED", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-027."}),
                        Action(name="grant_role", kwargs={"user_id": "U-027", "role_id": "ROL-043", "assigned_by": "U-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_GRANTED", "target_id": "U-027", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-027."}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-011"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-011", "permission_id": "P-035"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-011", "permission_id": "P-038"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-011", "permission_id": "P-047"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-011"}),
                        Action(name="update_role_details",
                               kwargs={"role_id": "ROL-011", "new_name": "[DEPRECATED]sales-base", "new_description": "[DEPRECATED] Merged into ROL-043."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-003", "action_type": "ROLE_UPDATED", "target_id": "ROL-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 has been updated. name=[[DEPRECATED]sales-base] | description=[[DEPRECATED] Merged into ROL-043.]"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "sales-standard-access"})
                ],
                outputs=['"role_id": "ROL-043"', '"permission_id": "P-113"', '"assigned_user": "U-010"']
        ),
        Task(
                annotator="1",
                user_id="task_092",
                instruction="You are Michael Davis, Operations Lead. You must implement a new company-wide security policy which requires that all accounts in the Engineering and Operations departments must have MFA enabled on their accounts Bot accounts that belong to either department are exempt from this policy..",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_users_by_department", kwargs={"department": "Engineering"}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-019", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-019", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-019 by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "daniel.taylor@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="get_users_by_department", kwargs={"department": "Operations"}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-005", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-005", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-005 by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "michael.davis@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-011", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-011", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-011 by user U-005."}),
                        Action(name="send_email", kwargs={"receiver": "james.moore@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "MFA Enabled on Your Account",
                                                          "text_content": "Multi-factor authentication (MFA) has been enabled on your account."}),
                ],
                outputs=['"user_id": "U-019", "mfa_enabled": true', '"user_id": "U-005", "mfa_enabled": true', '"user_id": "U-011", "mfa_enabled": true', ]
        ),
        Task(
                annotator="1",
                user_id="task_093",
                instruction="You are Ashley Wilson, HR Lead. The Sales Lead, David Brown, has been terminated. You must process his offboarding, which includes disabling his account, revoking all roles, reassigning ownership of all his resources to the Operations Lead, Michael Davis, and reassigning his open tickets to Michael Davis as well.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Ashley", "last_name": "Wilson"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "David", "last_name": "Brown"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-003", "status": "DISABLED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "USER_STATUS_CHANGE", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-003 status changed to 'DISABLED' by user U-010."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-003"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-lead"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "sales-base"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-003", "role_id": "ROL-011"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-011 removed from user U-003."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-003", "role_id": "ROL-036"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-010", "action_type": "ROLE_REVOKED", "target_id": "U-003", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-036 removed from user U-003."}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-003"}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-014", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-010", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-014", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-014 transferred from user U-003 to U-005."}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-017", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-010", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-017", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-017 transferred from user U-003 to U-005."}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-037", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-010", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-037", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Ownership for resource RES-037 transferred from user U-003 to U-005."}),
                        Action(name="get_hubspot_tickets_by_assignee", kwargs={"assignee_id": "U-003"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Offboard employee David Brown (dbrown)",
                                                                     "description": "Complete employee offboarding. User account has been disabled, and roles have been revoked",
                                                                     "requester_id": "U-010", "category": "Offboarding", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-003"}),
                ],
                outputs=['"user_id": "U-003", "status": "DISABLED"', '"user_id": "U-003", "roles": []', '"resource_id": "RES-014", "owner_id": "U-005"',
                         '"resource_id": "RES-017", "owner_id": "U-005"', '"resource_id": "RES-037", "owner_id": "U-005"']
        ),
        Task(
                annotator="1",
                user_id="task_094",
                instruction="You are Michael Davis, SOC Analyst. A data breach drill is being conducted for the Marketing department. As per the incident response plan, you must immediately suspend all active user accounts in that department, revoke all their roles, and ensure that MFA is enabled on their accounts for when they are reactivated. Progress of the exercise is being tracked in a new ticket (category: 'Security'), assigned to operations lead, with subject 'Security Drill: Marketing Department Lockdown' and content 'All user accounts in the Marketing department have been suspended and roles revoked as part of a planned data breach drill.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Michael", "last_name": "Davis"}),
                        Action(name="get_users_by_department", kwargs={"department": "Marketing"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-014"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-026"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-base"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-lead"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-analytics-read"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-content-editor"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_user_status", kwargs={"user_id": "U-002", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-002 status changed to 'SUSPENDED' by user U-005."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-002."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-002", "role_id": "ROL-035"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-035 removed from user U-002."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-002", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-002", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-002 by user U-005."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-014", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-014 status changed to 'SUSPENDED' by user U-005."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-014", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-014."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-014", "role_id": "ROL-009"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-009 removed from user U-014."}),
                        Action(name="update_user_mfa_status", kwargs={"user_id": "U-014", "mfa_enabled": True}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_MFA_ENABLED", "target_id": "U-014", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "MFA enabled for user U-014 by user U-005."}),
                        Action(name="update_user_status", kwargs={"user_id": "U-026", "status": "SUSPENDED"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "USER_STATUS_CHANGE", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "User U-026 status changed to 'SUSPENDED' by user U-005."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-006 removed from user U-026."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-007"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-007 removed from user U-026."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-010"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-005", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-010 removed from user U-026."}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Security Drill: Marketing Department Lockdown",
                                                                     "description": "All user accounts in the Marketing department have been suspended and roles revoked as part of a planned data breach drill.",
                                                                     "requester_id": "U-005", "category": "Security", "assignee_id": "U-005"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-002"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-014"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-026"}),
                ],
                outputs=['"ticket_id": "TI-054", "subject": "Security Drill: Marketing Department Lockdown"',
                         '"user_id": "U-002", "status": "SUSPENDED", "mfa_enabled": true, "roles": []',
                         '"user_id": "U-014", "status": "SUSPENDED", "mfa_enabled": true, "roles": []',
                         '"user_id": "U-026", "status": "SUSPENDED", "mfa_enabled": true, "roles": []']
        ),
        Task(
                annotator="1",
                user_id="task_095",
                instruction="You are the automated RBAC system. A compliance scan has identified that Lisa Anderson holds both the 'finance-invoice-processor' and 'finance-budget-admin' roles, which is an SoD violation. You must remediate this by revoking the 'finance-invoice-processor'.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_user_by_username", kwargs={"username": "landerson"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-invoice-processor"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="revoke_role", kwargs={"user_id": "U-012", "role_id": "ROL-031"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-012", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-031 removed from user U-012."}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-012"}),
                        # Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        # Action(name="create_hubspot_ticket", kwargs={"subject": "SoD Violation",
                        #                                              "description": "Conflicting roles for user 'U-012': 'finance-invoice-processor', 'finance-budget-admin'.",
                        #                                              "requester_id": "U-031", "category": "Compliance", "assignee_id": "U-005"}),
                ],
                outputs=['"user_id": "U-012", "roles": ["finance-base", "finance-budget-admin"]']
        ),
        Task(
                annotator="1",
                user_id="task_096",
                instruction="You are the automated RBAC system. A daily scan has identified several temporary user role assignments that have passed their expiration date but were not automatically de-provisioned. You must process the revocation for all expired roles.",
                actions=[
                        Action(name="get_user_by_username", kwargs={"username": "RBAC_BOT"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="get_user_by_username", kwargs={"username": "crodriguez"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-007", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-007."}),
                        Action(name="send_email", kwargs={"receiver": "christopher.rodriguez@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'engineering-prod-access' has expired and has been revoked."}),
                        Action(name="get_user_by_username", kwargs={"username": "sadams"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "finance-audit-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-018", "role_id": "ROL-033"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-018", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-033 removed from user U-018."}),
                        Action(name="send_email", kwargs={"receiver": "stephanie.adams@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'finance-audit-access' has expired and has been revoked."}),
                        Action(name="get_user_by_username", kwargs={"username": "rbaker"}),
                        Action(name="get_role_by_name", kwargs={"role_name": "engineering-prod-access"}),
                        Action(name="revoke_role", kwargs={"user_id": "U-025", "role_id": "ROL-003"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-031", "action_type": "ROLE_REVOKED", "target_id": "U-025", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-003 removed from user U-025."}),
                        Action(name="send_email", kwargs={"receiver": "ryan.baker@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Temporary Access Revoked",
                                                          "text_content": "Your temporary access role 'engineering-prod-access' has expired and has been revoked."})
                ],
                outputs=['"user_id": "U-007", "role_id": "ROL-003", "status": "revoked"', '"user_id": "U-018", "role_id": "ROL-033", "status": "revoked"',
                         '"user_id": "U-025", "role_id": "ROL-003", "status": "revoked"']
        ),
        Task(
                annotator="1",
                user_id="task_097",
                instruction="You are Sarah Williams, Marketing Lead. The 'marketing-campaign-manager' role has been deemed too broad. You need to split it into two new, more granular roles. First: 'marketing-campaign-strategist' (description: 'Develops and oversees marketing campaign strategies.') and second: 'marketing-campaign-executor' (description: 'Executes and reports on marketing campaigns.'). All permissions and users from the old role must be migrated appropriately to the new roles. The 'manage-email-lists' goes to the 'marketing-campaign-executor' role, everything else to the other role. Update the old role with the following description: '[DEPRECATED] Split into ROL-043 and ROL-044.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Sarah", "last_name": "Williams"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "marketing-campaign-strategist", "description": "Develops and oversees marketing campaign strategies."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-002."}),
                        Action(name="create_role", kwargs={"role_name": "marketing-campaign-executor", "description": "Executes and reports on marketing campaigns."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_CREATED", "target_id": "ROL-044", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-044 created by user U-002."}),
                        Action(name="get_role_by_name", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-007"}),
                        Action(name="get_permission_details", kwargs={"permission_id": "P-022"}),
                        Action(name="get_permission_details", kwargs={"permission_id": "P-024"}),
                        Action(name="get_permission_details", kwargs={"permission_id": "P-029"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-022"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-029"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-044", "permission_id": "P-024"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "marketing-campaign-manager"}),
                        Action(name="grant_role", kwargs={"user_id": "U-026", "role_id": "ROL-043", "assigned_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-026."}),
                        Action(name="grant_role", kwargs={"user_id": "U-026", "role_id": "ROL-044", "assigned_by": "U-002"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_GRANTED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-044 added to user U-026."}),
                        Action(name="revoke_role", kwargs={"user_id": "U-026", "role_id": "ROL-007"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_REVOKED", "target_id": "U-026", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-007 removed from user U-026."}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-007"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-007", "permission_id": "P-022"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-007", "permission_id": "P-024"}),
                        Action(name="remove_permission_from_role", kwargs={"role_id": "ROL-007", "permission_id": "P-029"}),
                        Action(name="get_role_permissions", kwargs={"role_id": "ROL-007"}),
                        Action(name="update_role_details", kwargs={"role_id": "ROL-007", "new_name": "[DEPRECATED]marketing-campaign-manager",
                                                                   "new_description": "[DEPRECATED] Split into ROL-043 and ROL-044."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-002", "action_type": "ROLE_UPDATED", "target_id": "ROL-007", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-007 has been updated. name=[[DEPRECATED]marketing-campaign-manager] | description=[[DEPRECATED] Split into ROL-043 and ROL-044.]"}),
                ],
                outputs=['"role_id": "ROL-043", "role_name": "marketing-campaign-strategist"', '"role_id": "ROL-044", "role_name": "marketing-campaign-executor"',
                         '"user_id": "U-026", "roles": ["marketing-base", "marketing-content-editor", "marketing-campaign-strategist", "marketing-campaign-executor"]']
        ),
        Task(
                annotator="1",
                user_id="task_098",
                instruction="You are Jessica Garcia, Finance Lead. You have received a pending access request (AR-034) from Stephanie Adams for the 'finance-read' role. You must reject this request as her existing roles already provide the necessary permissions. The justification for the rejection is: 'User's existing roles already grant the required permissions.'",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Jessica", "last_name": "Garcia"}),
                        Action(name="get_access_request_details", kwargs={"request_id": "AR-034"}),
                        Action(name="get_user_by_username", kwargs={"username": "sadams"}),
                        Action(name="get_user_roles", kwargs={"user_id": "U-018"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_access_request_status", kwargs={"request_id": "AR-034", "status": "REJECTED", "reviewed_by": "U-006"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-006", "action_type": "ACCESS_REJECTED", "target_id": "AR-034", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Access request AR-034 rejected by user U-006."}),
                        Action(name="send_email", kwargs={"receiver": "stephanie.adams@taucorp.com", "sender": "rbac@taucorp.com", "timestamp": "2025-08-08T09:56:15Z",
                                                          "subject": "Access Request Rejected",
                                                          "text_content": "Your access request (AR-034) has been rejected for the following reason: User's existing roles already grant the required permissions."}),
                        Action(name="get_hubspot_tickets_by_requester", kwargs={"requester_id": "U-018"}),
                        Action(name="update_hubspot_ticket_status", kwargs={"ticket_id": "TI-036", "status": "CLOSED",
                                                                            "note": "Access request AR-034 has been denied. Reason: User's existing roles already grant the required permissions."})
                ],
                outputs=['"request_id": "AR-034", "status": "REJECTED"', '"ticket_id": "TI-036", "status": "CLOSED"']
        ),
        Task(
                annotator="1",
                user_id="task_099",
                instruction="You are Patrick Carter, an IT Auditor. A review has found that former employee James Moore, who was terminated, is still listed as the owner of several resources that need to be transferred according to policy. Create a ticket with content 'Reassigned ownership of resources from terminated user James Moore (jmoore) to user mdavis (U-005)', (subject: 'Audit Remediation', category: 'Compliance') and assign it to the new owner of the resource.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Patrick", "last_name": "Carter"}),
                        Action(name="get_user_by_username", kwargs={"username": "jmoore"}),
                        Action(name="get_users_by_role", kwargs={"role_name": "operations-lead"}),
                        Action(name="get_user_by_id", kwargs={"user_id": "U-005"}),
                        Action(name="get_resources_by_owner", kwargs={"owner_id": "U-011"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-026", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-026", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Resource RES-026 ownership transferred from U-011 to U-005."}),
                        Action(name="update_resource_owner", kwargs={"resource_id": "RES-029", "new_owner_id": "U-005"}),
                        Action(name="write_audit_log",
                               kwargs={"actor_id": "U-029", "action_type": "RESOURCE_OWNER_CHANGE", "target_id": "RES-029", "timestamp": "2025-08-08T09:56:15Z",
                                       "details": "Resource RES-029 ownership transferred from U-011 to U-005."}),
                        Action(name="create_hubspot_ticket", kwargs={"subject": "Audit Remediation",
                                                                     "description": "Reassigned ownership of resources from terminated user James Moore (jmoore) to user mdavis (U-005)",
                                                                     "requester_id": "U-029", "category": "Compliance", "assignee_id": "U-005"})
                ],
                outputs=['"resource_id": "RES-026", "owner_id": "U-005"', '"resource_id": "RES-029", "owner_id": "U-005"', '"ticket_id": "TI-054", "status": "OPEN"']
        ),
        Task(
                annotator="1",
                user_id="task_100",
                instruction="You are Heather Mitchell from Human Resources. A new cross-functional initiative, 'Project Calypso', has been approved. You need to provision the necessary access for the project team, which includes Laura Jackson (Human Resources), Paul Ellis (Sales), and Ryan Baker (Engineering). The project requires a new role named 'project-calypso-team' with the description 'Provides access for the Project Calypso team.', which should have access to view the internal wiki, read the dev database, and view the sales reporting dashboard.",
                actions=[
                        Action(name="get_user_by_name", kwargs={"first_name": "Heather", "last_name": "Mitchell"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Laura", "last_name": "Jackson"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Paul", "last_name": "Ellis"}),
                        Action(name="get_user_by_name", kwargs={"first_name": "Ryan", "last_name": "Baker"}),
                        Action(name="get_current_time", kwargs={}),
                        Action(name="create_role", kwargs={"role_name": "project-calypso-team", "description": "Provides access for the Project Calypso team."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-028", "action_type": "ROLE_CREATED", "target_id": "ROL-043", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 created by user U-028."}),
                        Action(name="get_resource_by_name", kwargs={"name": "internal-documentation-wiki"}),
                        Action(name="create_permission", kwargs={"action": "read-wiki", "resource_id": "RES-006", "description": "Read access to internal documentation wiki"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-113"}),
                        Action(name="get_resource_by_name", kwargs={"name": "dev-database-server"}),
                        Action(name="create_permission", kwargs={"action": "read-dev-db", "resource_id": "RES-007", "description": "Read access to dev database server"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-114"}),
                        Action(name="get_resource_by_name", kwargs={"name": "sales-reporting-dashboard"}),
                        Action(name="create_permission",
                               kwargs={"action": "view-sales-report", "resource_id": "RES-015", "description": "View access to sales reporting dashboard"}),
                        Action(name="assign_permission_to_role", kwargs={"role_id": "ROL-043", "permission_id": "P-115"}),
                        Action(name="grant_role", kwargs={"user_id": "U-016", "role_id": "ROL-043", "assigned_by": "U-028"}),
                        Action(name="grant_role", kwargs={"user_id": "U-021", "role_id": "ROL-043", "assigned_by": "U-028"}),
                        Action(name="grant_role", kwargs={"user_id": "U-025", "role_id": "ROL-043", "assigned_by": "U-028"}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-028", "action_type": "ROLE_GRANTED", "target_id": "U-016", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-016."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-028", "action_type": "ROLE_GRANTED", "target_id": "U-021", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-021."}),
                        Action(name="write_audit_log", kwargs={"actor_id": "U-028", "action_type": "ROLE_GRANTED", "target_id": "U-025", "timestamp": "2025-08-08T09:56:15Z",
                                                               "details": "Role ROL-043 added to user U-025."}),
                ],
                outputs=['"role_id": "ROL-043"', '"permission_id": "P-113"', '"permission_id": "P-114"', '"permission_id": "P-115"']
        )

]
