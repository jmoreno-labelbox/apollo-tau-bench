{
  "airline_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 1521)"
    }
  ],
  "airline_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 5085 (tools.py, line 5089)"
    }
  ],
  "airline_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 1394 (tools.py, line 1406)"
    }
  ],
  "academic_search_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "unexpected indent (tools.py, line 107)"
    }
  ],
  "academic_search_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 833)"
    }
  ],
  "airline_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 720)"
    }
  ],
  "academic_search_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 442)"
    }
  ],
  "academic_search_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 165)"
    }
  ],
  "banking_services_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 1301)"
    }
  ],
  "airline_2": [
    {
      "tool": "CreateOperationalEvent",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreateCrewAssignment",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "DelayFlightActualTimesForDate",
      "error": "DelayFlightActualTimesForDate.invoke() missing 1 required positional argument: 'delay_minutes'"
    }
  ],
  "academic_search_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 352)"
    }
  ],
  "banking_services_6": [
    {
      "tool": "AddBeneficiary",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreateAccount",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateCustomer",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreateLoanApplication",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateScheduledInternalTransfer",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateScheduledPayment",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateSupportTicket",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "GetAccountDetails",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetBeneficiaryByName",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetCustomerFinancialProfile",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetLoanDetails",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetScheduledPaymentDetails",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "ListBeneficiaries",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "UpdateCustomerPersonalInfo",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "UpdateCustomerPreferences",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "UpdateCustomerSecurityQuestion",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "UpdateScheduledPaymentStatus",
      "error": "string indices must be integers, not 'str'"
    }
  ],
  "banking_services_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 913)"
    }
  ],
  "banking_services_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 1596)"
    }
  ],
  "banking_services_1": [
    {
      "tool": "AggregateMonthlyExpenses",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CancelScheduledPayment",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "DeleteExistingBeneficiary",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "DetectSuspiciousActivityAndAlert",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetAccountTransactionHistory",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "GetCustomerProfile",
      "error": "string indices must be integers, not 'str'"
    }
  ],
  "career_planner_1": [
    {
      "tool": "EnrollInCourse",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "AddMentorshipRelationship",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "AddGoal",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "career_planner_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ']' does not match opening parenthesis '(' on line 218 (tools.py, line 219)"
    }
  ],
  "consulting_accounting_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax. Perhaps you forgot a comma? (tools.py, line 1562)"
    }
  ],
  "consulting_accounting_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 900)"
    }
  ],
  "consulting_accounting_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 626)"
    }
  ],
  "consulting_accounting_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 1060)"
    }
  ],
  "career_planner_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 2377)"
    }
  ],
  "career_planner_3": [
    {
      "tool": "ShortlistSuccessorCandidate",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "AssignCourseToUser",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "LogTeamTraining",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "consulting_accounting_6": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 153)"
    }
  ],
  "career_planner_5": [
    {
      "tool": "enrollInCourse",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "addGoal",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "addMentorshipRelationship",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "addUserCertification",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "data_science_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "'return' outside function (tools.py, line 20)"
    }
  ],
  "data_science_1": [],
  "data_science_2": [
    {
      "tool": "addFileDirectoryRecord",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "upsertFileStoreText",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "recordGeocodingResult",
      "error": "RecordGeocodingResult.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "insertWeatherForecast",
      "error": "InsertWeatherForecast.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "registerEtlRun",
      "error": "RegisterEtlRun.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "registerProcessedTimeseries",
      "error": "RegisterProcessedTimeseries.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "saveModelConfig",
      "error": "SaveModelConfig.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "CreateTimeBasedDatasetSplit",
      "error": "CreateTimeBasedDatasetSplit.invoke() missing 1 required positional argument: 'test_fraction'"
    },
    {
      "tool": "savePredictionsRecord",
      "error": "SavePredictionsRecord.invoke() got an unexpected keyword argument 'record'"
    },
    {
      "tool": "saveMetricsRecord",
      "error": "SaveMetricsRecord.invoke() got an unexpected keyword argument 'record'"
    }
  ],
  "dev_ops_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 2629)"
    }
  ],
  "dev_ops_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 121)"
    }
  ],
  "data_science_4": [
    {
      "tool": "createFeatures",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "setModelConfig",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "createModel",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "getModel",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "enrichNotion",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "appendTerminalLog",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "startEtlRun",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "data_science_6": [],
  "digital_commerce_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 1631)"
    }
  ],
  "data_science_5": [],
  "digital_commerce_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 313)"
    }
  ],
  "figma_gmail_mcp_pipeline_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 1531)"
    }
  ],
  "digital_commerce_1": [
    {
      "tool": "ConfigureTraceSampling",
      "error": "ConfigureTraceSampling.invoke() missing 1 required positional argument: 'sample_rate'"
    },
    {
      "tool": "upsertOffer",
      "error": "UpsertOffer.invoke() missing 1 required positional argument: 'active'"
    },
    {
      "tool": "UpsertPromotion",
      "error": "UpsertPromotion.invoke() missing 1 required positional argument: 'active'"
    },
    {
      "tool": "UpsertContextRule",
      "error": "UpsertContextRule.invoke() missing 1 required positional argument: 'bind_to_offer_code'"
    }
  ],
  "digital_commerce_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 1582)"
    }
  ],
  "dev_ops_1": [
    {
      "tool": "LinkDuplicateIssue",
      "error": "LinkDuplicateIssue.invoke() missing 1 required positional argument: 'confidence'"
    }
  ],
  "figma_gmail_mcp_pipeline_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 116)"
    }
  ],
  "dev_ops_4": [
    {
      "tool": "StartAutomationRun",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreateAssetQaResult",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreateTestRunSummary",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "AddTestResultToRun",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "dev_ops_3": [],
  "digital_commerce_5": [
    {
      "tool": "RefundOrderPartial",
      "error": "RefundOrderPartial.invoke() missing 1 required positional argument: 'amount'"
    }
  ],
  "dev_ops_6": [],
  "figma_gmail_mcp_pipeline_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 4013)"
    }
  ],
  "figma_gmail_mcp_pipeline_2": [
    {
      "tool": "AddComment",
      "error": "AddComment.invoke() missing 1 required positional argument: 'resolved_flag'"
    }
  ],
  "file_system_7": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 34)"
    }
  ],
  "file_system_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax. Perhaps you forgot a comma? (tools.py, line 460)"
    }
  ],
  "figma_gmail_mcp_pipeline_6": [],
  "file_system_8": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 95 (tools.py, line 100)"
    }
  ],
  "github_mcp_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "expected 'else' after 'if' expression (tools.py, line 495)"
    }
  ],
  "figma_gmail_mcp_pipeline_5": [],
  "file_system_9": [
    {
      "tool": "LogTaskStart",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "github_mcp_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 669)"
    }
  ],
  "github_mcp_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 685)"
    }
  ],
  "github_mcp_7": [
    {
      "tool": "appendTerminal",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "it_help_desk_2": [
    {
      "tool": "AssignLicense",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateDeviceWorkflow",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateAuditRecord",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "SaveReportToMetricsDb",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "createMailbox",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "AddMemoToLifecycleQueue",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "createDataArchiveEntry",
      "error": "string indices must be integers, not 'str'"
    }
  ],
  "github_mcp_6": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 750)"
    }
  ],
  "logistics_supply_chain_2": [],
  "it_help_desk_6": [
    {
      "tool": "CreateDeviceWorkflow",
      "error": "CreateDeviceWorkflow.invoke() missing 1 required positional argument: 'pickup_code'"
    }
  ],
  "logistics_supply_chain_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 780)"
    }
  ],
  "it_help_desk_4": [
    {
      "tool": "AssignLicense",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateDeviceWorkflow",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "CreateAuditRecord",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "SaveReportToMetricsDb",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "createMailbox",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "AddMemoToLifecycleQueue",
      "error": "string indices must be integers, not 'str'"
    },
    {
      "tool": "createDataArchiveEntry",
      "error": "string indices must be integers, not 'str'"
    }
  ],
  "new_hire_mcp_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 1285)"
    }
  ],
  "logistics_supply_chain_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 181)"
    }
  ],
  "it_help_desk_5": [],
  "logistics_supply_chain_1": [],
  "new_hire_mcp_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 29)"
    }
  ],
  "logistics_supply_chain_6": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 666)"
    }
  ],
  "new_hire_mcp_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 977)"
    }
  ],
  "new_hire_mcp_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 385)"
    }
  ],
  "new_hire_mcp_3": [],
  "org_chart_1": [],
  "org_chart_4": [
    {
      "tool": "addEmployee",
      "error": "add_employee.invoke() got an unexpected keyword argument 'employee'. Did you mean 'employee_id'?"
    },
    {
      "tool": "addDepartment",
      "error": "add_department.invoke() got an unexpected keyword argument 'department'. Did you mean 'department_id'?"
    }
  ],
  "org_chart_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 30)"
    }
  ],
  "org_chart_3": [
    {
      "tool": "ConditionalBenefitMaintenance",
      "error": "conditional_benefit_maintenance.invoke() missing 1 required positional argument: 'equity_threshold'"
    },
    {
      "tool": "ConditionalBonusTargetNormalization",
      "error": "conditional_bonus_target_normalization.invoke() missing 1 required positional argument: 'target_bonus_pct'"
    }
  ],
  "project_management_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 206)"
    }
  ],
  "org_chart_2": [],
  "project_management_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 1986 (tools.py, line 1989)"
    }
  ],
  "project_management_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ']' does not match opening parenthesis '(' on line 2399 (tools.py, line 2400)"
    }
  ],
  "rbac_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 90)"
    }
  ],
  "project_management_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 399)"
    }
  ],
  "rbac_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 1851)"
    }
  ],
  "project_management_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ']' does not match opening parenthesis '(' on line 184 (tools.py, line 185)"
    }
  ],
  "rbac_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 699)"
    }
  ],
  "rbac_1": [],
  "real_estate_sales_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 558)"
    }
  ],
  "real_estate_sales_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 245)"
    }
  ],
  "rbac_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "cannot assign to function call here. Maybe you meant '==' instead of '='? (tools.py, line 241)"
    }
  ],
  "real_estate_sales_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 1210)"
    }
  ],
  "real_estate_sales_7": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis '}' does not match opening parenthesis '(' on line 1203 (tools.py, line 1210)"
    }
  ],
  "recipes_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 336)"
    }
  ],
  "real_estate_sales_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 230)"
    }
  ],
  "recipes_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 60)"
    }
  ],
  "recipes_3": [
    {
      "tool": "listRecipes",
      "error": "ListRecipes.invoke() got an unexpected keyword argument 'filters'"
    },
    {
      "tool": "UpdateInventoryQuantity",
      "error": "UpdateInventoryQuantity.invoke() missing 1 required positional argument: 'delta'"
    },
    {
      "tool": "AppendMealHistory",
      "error": "AppendMealHistory.invoke() missing 1 required positional argument: 'was_prepared'"
    }
  ],
  "retail_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 1204)"
    }
  ],
  "recipes_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 187 (tools.py, line 194)"
    }
  ],
  "recipes_2": [],
  "retail_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 546 (tools.py, line 550)"
    }
  ],
  "retail_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 884)"
    }
  ],
  "retail_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 140 (tools.py, line 145)"
    }
  ],
  "retail_6": [
    {
      "tool": "LOAD_ERROR",
      "error": "'(' was never closed (tools.py, line 1359)"
    }
  ],
  "retail_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis ')' does not match opening parenthesis '{' on line 232 (tools.py, line 239)"
    }
  ],
  "retail_point_of_sale_and_inventory_system_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 57)"
    }
  ],
  "retail_point_of_sale_and_inventory_system_1": [],
  "retail_point_of_sale_and_inventory_system_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 313)"
    }
  ],
  "smart_home_2": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 448)"
    }
  ],
  "smart_home_3": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 55)"
    }
  ],
  "smart_home_4": [],
  "smart_home_1": [
    {
      "tool": "UpdateDeviceStateTimer",
      "error": "UpdateDeviceStateTimer.invoke() missing 1 required positional argument: 'timestamp_end'"
    }
  ],
  "retail_point_of_sale_and_inventory_system_6": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 349)"
    }
  ],
  "retail_point_of_sale_and_inventory_system_5": [
    {
      "tool": "compareInventoryCounts",
      "error": "CompareInventoryCounts.invoke() got an unexpected keyword argument 'sku'"
    },
    {
      "tool": "CreateInventoryAdjustment",
      "error": "CreateInventoryAdjustment.invoke() missing 1 required positional argument: 'amount'"
    },
    {
      "tool": "CreateTransferOrder",
      "error": "CreateTransferOrder.invoke() missing 1 required positional argument: 'quantity'"
    },
    {
      "tool": "LogTransfer",
      "error": "LogTransfer.invoke() missing 1 required positional argument: 'quantity'"
    },
    {
      "tool": "ComputeDiscrepancyAmount",
      "error": "ComputeDiscrepancyAmount.invoke() missing 1 required positional argument: 'unit_cost'"
    }
  ],
  "social_media_advertising_1": [
    {
      "tool": "LOAD_ERROR",
      "error": "invalid syntax (tools.py, line 2463)"
    }
  ],
  "smart_home_5": [
    {
      "tool": "LOAD_ERROR",
      "error": "unmatched ')' (tools.py, line 73)"
    }
  ],
  "sports_analytics_4": [
    {
      "tool": "LOAD_ERROR",
      "error": "closing parenthesis '}' does not match opening parenthesis '(' on line 1019 (tools.py, line 1021)"
    }
  ],
  "social_media_advertising_6": [
    {
      "tool": "createAdset",
      "error": "CreateAdset.invoke() missing 1 required positional argument: 'daily_budget'"
    },
    {
      "tool": "updateAdsetBudget",
      "error": "UpdateAdsetBudget.invoke() missing 1 required positional argument: 'new_budget'"
    },
    {
      "tool": "findUnderperformingAdsets",
      "error": "FindUnderperformingAdsets.invoke() missing 1 required positional argument: 'min_roas'"
    }
  ],
  "social_media_advertising_2": [
    {
      "tool": "SetAdsetBudget",
      "error": "SetAdsetBudget.invoke() missing 1 required positional argument: 'new_budget'"
    }
  ],
  "social_media_advertising_4": [],
  "social_media_advertising_3": [
    {
      "tool": "UpdateAdsetBudget",
      "error": "UpdateAdsetBudget.invoke() missing 1 required positional argument: 'new_budget'"
    }
  ],
  "sports_analytics_3": [
    {
      "tool": "getPlayerInsightsByPlayeridAndType",
      "error": "GetPlayerInsightsByPlayeridAndType.invoke() got an unexpected keyword argument 'type'"
    }
  ],
  "social_media_advertising_5": [
    {
      "tool": "ValidateAllocationsAgainstPolicy",
      "error": "ValidateAllocationsAgainstPolicy.invoke() missing 1 required positional argument: 'total_budget'"
    },
    {
      "tool": "UpdateAdsetBudget",
      "error": "UpdateAdsetBudget.invoke() missing 1 required positional argument: 'new_budget'"
    },
    {
      "tool": "FindUnderperformingAdsets",
      "error": "FindUnderperformingAdsets.invoke() missing 1 required positional argument: 'roas_threshold'"
    },
    {
      "tool": "CreateAutomationRun",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "CreatePlan",
      "error": "'dict' object has no attribute 'append'"
    }
  ],
  "sports_analytics_5": [
    {
      "tool": "CreateAutoBookmarkEvent",
      "error": "CreateAutoBookmarkEvent.invoke() missing 1 required positional argument: 'leverage_index'"
    },
    {
      "tool": "WritePitchExecutionGrade",
      "error": "WritePitchExecutionGrade.invoke() missing 1 required positional argument: 'miss_distance_inches'"
    },
    {
      "tool": "FilterTrends",
      "error": "FilterTrends.invoke() missing 1 required positional argument: 'fdr_threshold'"
    }
  ],
  "sports_analytics_2": [
    {
      "tool": "WritePlayerDevGoals",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "WritePlayerDevReports",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "WritePitchExecutionGrades",
      "error": "'dict' object has no attribute 'append'"
    },
    {
      "tool": "WriteUmpireGameModel",
      "error": "'dict' object has no attribute 'append'"
    }
  ]
}